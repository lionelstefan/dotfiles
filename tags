!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Iniconf	k,key	/keys/
!_TAG_KIND_DESCRIPTION!Iniconf	s,section	/sections/
!_TAG_KIND_DESCRIPTION!JSON	a,array	/arrays/
!_TAG_KIND_DESCRIPTION!JSON	b,boolean	/booleans/
!_TAG_KIND_DESCRIPTION!JSON	n,number	/numbers/
!_TAG_KIND_DESCRIPTION!JSON	o,object	/objects/
!_TAG_KIND_DESCRIPTION!JSON	s,string	/strings/
!_TAG_KIND_DESCRIPTION!JSON	z,null	/nulls/
!_TAG_KIND_DESCRIPTION!Lua	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_KIND_DESCRIPTION!Markdown	S,subsection	/level 2 sections/
!_TAG_KIND_DESCRIPTION!Markdown	T,l4subsection	/level 4 sections/
!_TAG_KIND_DESCRIPTION!Markdown	c,chapter	/chapters/
!_TAG_KIND_DESCRIPTION!Markdown	h,hashtag	/hashtags/
!_TAG_KIND_DESCRIPTION!Markdown	n,footnote	/footnotes/
!_TAG_KIND_DESCRIPTION!Markdown	s,section	/sections/
!_TAG_KIND_DESCRIPTION!Markdown	t,subsubsection	/level 3 sections/
!_TAG_KIND_DESCRIPTION!Markdown	u,l5subsection	/level 5 sections/
!_TAG_KIND_DESCRIPTION!Scheme	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Scheme	s,set	/sets/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Yaml	a,anchor	/anchors/
!_TAG_KIND_DESCRIPTION!Zsh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Zsh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Zsh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Zsh	s,script	/script files/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Iniconf	0.0	/current.age/
!_TAG_PARSER_VERSION!JSON	0.0	/current.age/
!_TAG_PARSER_VERSION!Lua	0.0	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PARSER_VERSION!Markdown	1.1	/current.age/
!_TAG_PARSER_VERSION!Scheme	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Yaml	0.0	/current.age/
!_TAG_PARSER_VERSION!Zsh	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/lionelstefan/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/e79e67d/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
!_TAG_ROLE_DESCRIPTION!Yaml!anchor	alias	/alias/
!_TAG_ROLE_DESCRIPTION!Zsh!function	autoloaded	/function name passed to autoload built-in command/
!_TAG_ROLE_DESCRIPTION!Zsh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Zsh!script	autoloaded	/autoloaded/
!_TAG_ROLE_DESCRIPTION!Zsh!script	loaded	/loaded/
$(APPNAME)	zsh/powerlevel10k/gitstatus/Makefile	/^$(APPNAME): usrbin\/$(APPNAME)$/;"	t
$(OBJDIR)	zsh/powerlevel10k/gitstatus/Makefile	/^$(OBJDIR):$/;"	t
$(OBJDIR)/%.o	zsh/powerlevel10k/gitstatus/Makefile	/^$(OBJDIR)\/%.o: src\/%.cc Makefile build.info | $(OBJDIR)$/;"	t
*.tcc	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "*.tcc": "cpp",$/;"	s	object:files.associations
*.zwc	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "*.zwc": true,$/;"	b	object:files.exclude
+vi-git-aheadbehind	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-git-aheadbehind() {$/;"	f
+vi-git-remotebranch	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-git-remotebranch() {$/;"	f
+vi-git-stash	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-git-stash() {$/;"	f
+vi-git-tagname	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-git-tagname() {$/;"	f
+vi-git-untracked	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-git-untracked() {$/;"	f
+vi-hg-bookmarks	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-hg-bookmarks() {$/;"	f
+vi-svn-detect-changes	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-svn-detect-changes() {$/;"	f
+vi-vcs-detect-changes	zsh/powerlevel10k/internal/p10k.zsh	/^function +vi-vcs-detect-changes() {$/;"	f
0	nvim/lua/.luarc.json	/^    "\/home\/lionelstefan\/.local\/share\/nvim\/lazy\/neodev.nvim\/types\/nightly",$/;"	s	array:workspace.library
0	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^                "${workspaceFolder}\/src"$/;"	s	array:configurations.0.includePath
0	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^        {$/;"	o	array:configurations
0_error	zsh/powerlevel10k/internal/configure.zsh	/^  function $0_error() {$/;"	f
0_fmt	zsh/powerlevel10k/internal/p10k.zsh	/^    function _$0_fmt() {$/;"	f
1	nvim/lua/.luarc.json	/^    "\/usr\/share\/nvim\/runtime\/lua",$/;"	s	array:workspace.library
2	nvim/lua/.luarc.json	/^    "\/home\/lionelstefan\/.local\/share\/nvim\/lazy\/neodev.nvim\/types\/nightly",$/;"	s	array:workspace.library
3	nvim/lua/.luarc.json	/^    "\/usr\/share\/nvim\/runtime\/lua",$/;"	s	array:workspace.library
4	nvim/lua/.luarc.json	/^    "\/home\/lionelstefan\/dotfiles\/nvim\/lua",$/;"	s	array:workspace.library
5	nvim/lua/.luarc.json	/^    "\/home\/lionelstefan\/dotfiles\/nvim\/lua"$/;"	s	array:workspace.library
<a name='how-do-i-enable-instant-prompt'></a>How do I configure instant prompt?	zsh/powerlevel10k/README.md	/^### <a name='how-do-i-enable-instant-prompt'><\/a>How do I configure instant prompt?$/;"	S	section:Powerlevel10k""FAQ
<a name='recommended-meslo-nerd-font-patched-for-powerlevel10k'></a><a name='font'></a>Meslo Nerd Font patched for Powerlevel10k	zsh/powerlevel10k/README.md	/^### <a name='recommended-meslo-nerd-font-patched-for-powerlevel10k'><\/a><a name='font'><\/a>Mes/;"	S	section:Powerlevel10k""Fonts
<a name='what-is-instant-prompt'></a>Instant prompt	zsh/powerlevel10k/README.md	/^### <a name='what-is-instant-prompt'><\/a>Instant prompt$/;"	S	section:Powerlevel10k""Features
APPNAME	zsh/powerlevel10k/gitstatus/Makefile	/^APPNAME ?= gitstatusd$/;"	m
AddBlock	zsh/powerlevel10k/gitstatus/src/arena.cc	/^void Arena::AddBlock(size_t size, size_t alignment) {$/;"	f	class:gitstatus::Arena	typeref:typename:void
Align	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline static size_t Align(size_t n, size_t m) { return (n + m - 1) & ~(m - 1); };$/;"	f	class:gitstatus::Arena	typeref:typename:size_t
Allocate	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline T* Allocate() {$/;"	f	class:gitstatus::Arena	typeref:typename:T *
Allocate	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline T* Allocate(size_t n) {$/;"	f	class:gitstatus::Arena	typeref:typename:T *
Allocate	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline void* Allocate(size_t size, size_t alignment) {$/;"	f	class:gitstatus::Arena	typeref:typename:void *
AllocateSlow	zsh/powerlevel10k/gitstatus/src/arena.cc	/^void* Arena::AllocateSlow(size_t size, size_t alignment) {$/;"	f	class:gitstatus::Arena	typeref:typename:void *
Alpine Linux	zsh/powerlevel10k/README.md	/^### Alpine Linux$/;"	S	section:Powerlevel10k""Installation
Antibody	zsh/powerlevel10k/README.md	/^### Antibody$/;"	S	section:Powerlevel10k""Installation
Antidote	zsh/powerlevel10k/README.md	/^### Antidote$/;"	S	section:Powerlevel10k""Installation
Antigen	zsh/powerlevel10k/README.md	/^### Antigen$/;"	S	section:Powerlevel10k""Installation
Arch Linux	zsh/powerlevel10k/README.md	/^### Arch Linux$/;"	S	section:Powerlevel10k""Installation
Arch Linux logo has a dot in the bottom right corner	zsh/powerlevel10k/README.md	/^### Arch Linux logo has a dot in the bottom right corner$/;"	S	section:Powerlevel10k""Troubleshooting
Are there configuration options that make Powerlevel10k slow?	zsh/powerlevel10k/README.md	/^### Are there configuration options that make Powerlevel10k slow?$/;"	S	section:Powerlevel10k""FAQ
Arena	zsh/powerlevel10k/gitstatus/src/arena.cc	/^Arena::Arena(Arena&& other) : Arena() { *this = std::move(other); }$/;"	f	class:gitstatus::Arena
Arena	zsh/powerlevel10k/gitstatus/src/arena.cc	/^Arena::Arena(Arena::Options opt) : opt_(std::move(opt)), top_(&g_empty_block) {$/;"	f	class:gitstatus::Arena
Arena	zsh/powerlevel10k/gitstatus/src/arena.h	/^  Arena() : Arena(Options()) {}$/;"	f	class:gitstatus::Arena
Arena	zsh/powerlevel10k/gitstatus/src/arena.h	/^class Arena {$/;"	c	namespace:gitstatus
ArenaAllocator	zsh/powerlevel10k/gitstatus/src/arena.h	/^  ArenaAllocator(Arena* arena = nullptr) : arena_(*arena) {}$/;"	f	class:gitstatus::ArenaAllocator
ArenaAllocator	zsh/powerlevel10k/gitstatus/src/arena.h	/^class ArenaAllocator {$/;"	c	namespace:gitstatus
Assignable	zsh/powerlevel10k/gitstatus/src/logging.h	/^struct Assignable {$/;"	s	namespace:gitstatus::internal_logging
Automatic font installation	zsh/powerlevel10k/README.md	/^#### Automatic font installation$/;"	t	subsection:Powerlevel10k""Fonts""<a name='recommended-meslo-nerd-font-patched-for-powerlevel10k'></a><a name='font'></a>Meslo Nerd Font patched for Powerlevel10k
Automatic font installation	zsh/powerlevel10k/font.md	/^## Automatic font installation$/;"	s	chapter:Recommended font: Meslo Nerd Font patched for Powerlevel10k
Batteries included	zsh/powerlevel10k/README.md	/^### Batteries included$/;"	S	section:Powerlevel10k""Features
Benchmarks	zsh/powerlevel10k/gitstatus/README.md	/^## Benchmarks$/;"	s	chapter:gitstatus
Block	zsh/powerlevel10k/gitstatus/src/arena.h	/^  struct Block {$/;"	s	class:gitstatus::Arena
BraceInit	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline T* BraceInit(Args&&... args) {$/;"	f	class:gitstatus::Arena	typeref:typename:T *
ById	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^} constexpr ById = {};$/;"	v	namespace:gitstatus::__anon40e328cc0111	typeref:struct:gitstatus::__anon40e328cc0111::__anon40e328cc0208 
ByName	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^} constexpr ByName = {};$/;"	v	namespace:gitstatus::__anon40e328cc0111	typeref:struct:gitstatus::__anon40e328cc0111::__anon40e328cc0308 
CEscape	zsh/powerlevel10k/gitstatus/src/strings.cc	/^void CEscape(std::ostream& strm, const char* begin, const char* end) {$/;"	f	namespace:gitstatus	typeref:typename:void
CHECK	zsh/powerlevel10k/gitstatus/src/check.h	/^#define CHECK(/;"	d
COND	zsh/powerlevel10k/gitstatus/src/index.cc	/^#define COND(/;"	d	file:
CXX	zsh/powerlevel10k/gitstatus/Makefile	/^CXX ?= g++$/;"	m
Cache	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  using Cache = std::unordered_map<std::string, std::unique_ptr<Entry>>;$/;"	t	class:gitstatus::RepoCache	typeref:typename:std::unordered_map<std::string,std::unique_ptr<Entry>>
Can prompts for completed commands display error status for *those* commands instead of the commands preceding them?	zsh/powerlevel10k/README.md	/^### Can prompts for completed commands display error status for *those* commands instead of the /;"	S	section:Powerlevel10k""FAQ
Cannot install the recommended font	zsh/powerlevel10k/README.md	/^### Cannot install the recommended font$/;"	S	section:Powerlevel10k""Troubleshooting
Cannot make Powerlevel10k work with my plugin manager	zsh/powerlevel10k/README.md	/^### Cannot make Powerlevel10k work with my plugin manager$/;"	S	section:Powerlevel10k""Troubleshooting
Change the color palette used by your terminal	zsh/powerlevel10k/README.md	/^#### Change the color palette used by your terminal$/;"	t	subsection:Powerlevel10k""FAQ""How do I change prompt colors?
CheckDirMtime	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^bool CheckDirMtime(const char* root_dir) {$/;"	f	namespace:gitstatus	typeref:typename:bool
Clamp	zsh/powerlevel10k/gitstatus/src/arena.cc	/^size_t Clamp(size_t min, size_t val, size_t max) { return std::min(max, std::max(min, val)); }$/;"	f	namespace:gitstatus::__anona1991e320111	typeref:typename:size_t
Clock	zsh/powerlevel10k/gitstatus/src/time.h	/^using Clock = std::chrono::steady_clock;$/;"	t	namespace:gitstatus	typeref:typename:std::chrono::steady_clock
Cmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrCmp<-1> Cmp;$/;"	m	struct:gitstatus::Str	typeref:typename:StrCmp<-1>
Cmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrCmp<kCaseSensitive> Cmp;$/;"	m	struct:gitstatus::Str	typeref:typename:StrCmp<kCaseSensitive>
Comment.nvim	nvim/lazy-lock.json	/^  "Comment.nvim": { "branch": "master", "commit": "e30b7f2008e52442154b66f7c519bfd2f1e32acb" },$/;"	o
CommitMessage	zsh/powerlevel10k/gitstatus/src/git.h	/^struct CommitMessage {$/;"	s	namespace:gitstatus
CommonDir	zsh/powerlevel10k/gitstatus/src/index.cc	/^void CommonDir(Str<> str, const char* a, const char* b, size_t* dir_len, size_t* dir_depth) {$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:void
Compiling	zsh/powerlevel10k/gitstatus/README.md	/^## Compiling$/;"	s	chapter:gitstatus
Compiling for distribution	zsh/powerlevel10k/gitstatus/README.md	/^### Compiling for distribution$/;"	S	section:gitstatus""Compiling
Compiling for personal use	zsh/powerlevel10k/gitstatus/README.md	/^### Compiling for personal use$/;"	S	section:gitstatus""Compiling
Conclusion	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## Conclusion$/;"	s	chapter:Fast directory listing
Configuration	zsh/powerlevel10k/README.md	/^## Configuration$/;"	s	chapter:Powerlevel10k
Configuration wizard	zsh/powerlevel10k/README.md	/^### Configuration wizard$/;"	S	section:Powerlevel10k""Features
Configuration wizard runs automatically every time Zsh is started	zsh/powerlevel10k/README.md	/^### Configuration wizard runs automatically every time Zsh is started$/;"	S	section:Powerlevel10k""Troubleshooting
Contains	zsh/powerlevel10k/gitstatus/src/repo.cc	/^bool Repo::Shard::Contains(Str<> str, StringView path) const {$/;"	f	class:gitstatus::Repo::Shard	typeref:typename:bool
CountRange	zsh/powerlevel10k/gitstatus/src/git.cc	/^size_t CountRange(git_repository* repo, const std::string& range) {$/;"	f	namespace:gitstatus	typeref:typename:size_t
CpuTimeMs	zsh/powerlevel10k/gitstatus/src/timer.cc	/^double CpuTimeMs() {$/;"	f	namespace:gitstatus::__anon87bf830c0111	typeref:typename:double
Current directory that just works	zsh/powerlevel10k/README.md	/^### Current directory that just works$/;"	S	section:Powerlevel10k""Features
Cursor is in the wrong place	zsh/powerlevel10k/README.md	/^### Cursor is in the wrong place$/;"	S	section:Powerlevel10k""Troubleshooting
DEBUG	zsh/powerlevel10k/gitstatus/src/logging.h	/^  DEBUG,$/;"	e	enum:gitstatus::LogLevel
Dec	zsh/powerlevel10k/gitstatus/src/repo.cc	/^T Dec(std::atomic<T>& x) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:T
DecInflight	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::DecInflight() {$/;"	f	class:gitstatus::Repo	typeref:typename:void
DeltaStr	zsh/powerlevel10k/gitstatus/src/repo.cc	/^const char* DeltaStr(git_delta_t t) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:const char *
Describe	zsh/powerlevel10k/gitstatus/README.md	/^### Describe$/;"	S	section:gitstatus""Benchmarks
Dev Configuration	README.md	/^# Dev Configuration$/;"	c
DirName	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^std::string DirName(std::string path) {$/;"	f	namespace:gitstatus::__anoneeddea940111	typeref:typename:std::string
DirectInit	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline T* DirectInit(Args&&... args) {$/;"	f	class:gitstatus::Arena	typeref:typename:T *
Directory is difficult to see in prompt when using Rainbow style	zsh/powerlevel10k/README.md	/^### Directory is difficult to see in prompt when using Rainbow style$/;"	S	section:Powerlevel10k""Troubleshooting
DirentDup	zsh/powerlevel10k/gitstatus/src/dir.cc	/^char* DirentDup(Arena& arena, const struct dirent& ent, size_t len) {$/;"	f	namespace:gitstatus::__anon102c0c8a0311	typeref:typename:char *
DirenvConvert	zsh/powerlevel10k/gitstatus/src/dir.cc	/^char* DirenvConvert(Arena& arena, struct dirent& ent, bool do_convert) {$/;"	f	namespace:gitstatus::__anon102c0c8a0311	typeref:typename:char *
Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same config?	zsh/powerlevel10k/README.md	/^### Does Powerlevel10k always render exactly the same prompt as Powerlevel9k given the same conf/;"	S	section:Powerlevel10k""FAQ
Dots	zsh/powerlevel10k/gitstatus/src/dir.cc	/^bool Dots(const char* name) {$/;"	f	namespace:gitstatus::__anon102c0c8a0111	typeref:typename:bool
Dump	zsh/powerlevel10k/gitstatus/src/response.cc	/^void ResponseWriter::Dump(const char* log) {$/;"	f	class:gitstatus::ResponseWriter	typeref:typename:void
Dup	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline std::remove_const_t<std::remove_reference_t<T>>* Dup(T&& val) {$/;"	f	class:gitstatus::Arena	typeref:typename:std::remove_const_t<std::remove_reference_t<T>> *
Duration	zsh/powerlevel10k/gitstatus/src/time.h	/^using Duration = Clock::duration;$/;"	t	namespace:gitstatus	typeref:typename:Clock::duration
END	zsh/powerlevel10k/gitstatus/build	/^command cat >&2 <<-END$/;"	h
ERROR	zsh/powerlevel10k/gitstatus/src/logging.h	/^  ERROR,$/;"	e	enum:gitstatus::LogLevel
EndsWith	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  bool EndsWith(StringView suffix) const {$/;"	f	struct:gitstatus::StringView	typeref:typename:bool
Entry	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  struct Entry : Repo {$/;"	s	class:gitstatus::RepoCache
Eq	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrEq<-1> Eq;$/;"	m	struct:gitstatus::Str	typeref:typename:StrEq<-1>
Eq	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrEq<kCaseSensitive> Eq;$/;"	m	struct:gitstatus::Str	typeref:typename:StrEq<kCaseSensitive>
Erase	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^void RepoCache::Erase(Cache::iterator it) {$/;"	f	class:gitstatus::RepoCache	typeref:typename:void
Errno	zsh/powerlevel10k/gitstatus/src/logging.h	/^inline internal_logging::Errno Errno(int err) { return {err}; }$/;"	f	namespace:gitstatus	typeref:typename:internal_logging::Errno
Errno	zsh/powerlevel10k/gitstatus/src/logging.h	/^inline internal_logging::StashedErrno Errno() { return {}; }$/;"	f	namespace:gitstatus	typeref:typename:internal_logging::StashedErrno
Errno	zsh/powerlevel10k/gitstatus/src/logging.h	/^struct Errno {$/;"	s	namespace:gitstatus::internal_logging
Error: character not in range	zsh/powerlevel10k/README.md	/^### Error: character not in range$/;"	S	section:Powerlevel10k""Troubleshooting
Exception	zsh/powerlevel10k/gitstatus/src/check.h	/^struct Exception : std::exception {$/;"	s	namespace:gitstatus
Exchange	zsh/powerlevel10k/gitstatus/src/repo.cc	/^T Exchange(std::atomic<T>& x, T v) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:T
Extensible	zsh/powerlevel10k/README.md	/^### Extensible$/;"	S	section:Powerlevel10k""Features
Extra or missing spaces around icons	zsh/powerlevel10k/README.md	/^#### Extra or missing spaces around icons$/;"	t	subsection:Powerlevel10k""Troubleshooting""Extra or missing spaces in prompt compared to Powerlevel9k
Extra or missing spaces in prompt compared to Powerlevel9k	zsh/powerlevel10k/README.md	/^### Extra or missing spaces in prompt compared to Powerlevel9k$/;"	S	section:Powerlevel10k""Troubleshooting
Extra space without background on the right side of right prompt	zsh/powerlevel10k/README.md	/^#### Extra space without background on the right side of right prompt$/;"	t	subsection:Powerlevel10k""Troubleshooting""Extra or missing spaces in prompt compared to Powerlevel9k
Extremely customizable	zsh/powerlevel10k/README.md	/^### Extremely customizable$/;"	S	section:Powerlevel10k""Features
FAQ	zsh/powerlevel10k/README.md	/^## FAQ$/;"	s	chapter:Powerlevel10k
FATAL	zsh/powerlevel10k/gitstatus/src/logging.h	/^  FATAL,$/;"	e	enum:gitstatus::LogLevel
Fast directory listing	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^# Fast directory listing$/;"	c
Features	zsh/powerlevel10k/README.md	/^## Features$/;"	s	chapter:Powerlevel10k
Fig	zsh/powerlevel10k/README.md	/^### Fig$/;"	S	section:Powerlevel10k""Installation
FindLast	zsh/powerlevel10k/gitstatus/src/algorithm.h	/^Iter FindLast(Iter begin, Iter end, const T& val) {$/;"	f	namespace:gitstatus	typeref:typename:Iter
Flush	zsh/powerlevel10k/gitstatus/src/logging.cc	/^void LogStreamBase::Flush() {$/;"	f	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:void
Fonts	zsh/powerlevel10k/README.md	/^## Fonts$/;"	s	chapter:Powerlevel10k
For Powerlevel9k users	zsh/powerlevel10k/README.md	/^### For Powerlevel9k users$/;"	S	section:Powerlevel10k""Configuration
For new users	zsh/powerlevel10k/README.md	/^### For new users$/;"	S	section:Powerlevel10k""Configuration
FormatCurrentTime	zsh/powerlevel10k/gitstatus/src/logging.cc	/^void FormatCurrentTime(char (&out)[64]) {$/;"	f	namespace:gitstatus::internal_logging::__anon10351f120111	typeref:typename:void
FormatThreadId	zsh/powerlevel10k/gitstatus/src/logging.cc	/^void FormatThreadId(char (&out)[2 * sizeof(std::uintptr_t) + 1]) {$/;"	f	namespace:gitstatus::internal_logging::__anon10351f120111	typeref:typename:void
Free	zsh/powerlevel10k/gitstatus/src/git.h	/^  struct Free {$/;"	s	struct:gitstatus::PushRemote
Free	zsh/powerlevel10k/gitstatus/src/git.h	/^  struct Free {$/;"	s	struct:gitstatus::Remote
Free	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^void RepoCache::Free(Time cutoff) {$/;"	f	class:gitstatus::RepoCache	typeref:typename:void
GITSTATUS_INTERNAL_CAT	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^#define GITSTATUS_INTERNAL_CAT(x, y) GITSTATUS_INTERNAL_CAT_/;"	d
GITSTATUS_INTERNAL_CAT_I	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^#define GITSTATUS_INTERNAL_CAT_I(/;"	d
GetCommitMessage	zsh/powerlevel10k/gitstatus/src/git.cc	/^CommitMessage GetCommitMessage(git_repository* repo, const git_oid& id) {$/;"	f	namespace:gitstatus	typeref:typename:CommitMessage
GetDirtyCandidates	zsh/powerlevel10k/gitstatus/src/index.cc	/^std::vector<const char*> Index::GetDirtyCandidates(const ScanOpts& opts) {$/;"	f	class:gitstatus::Index	typeref:typename:std::vector<const char * >
GetIndexStats	zsh/powerlevel10k/gitstatus/src/repo.cc	/^IndexStats Repo::GetIndexStats(const git_oid* head, git_config* cfg) {$/;"	f	class:gitstatus::Repo	typeref:typename:IndexStats
GetPushRemote	zsh/powerlevel10k/gitstatus/src/git.cc	/^PushRemotePtr GetPushRemote(git_repository* repo, const git_reference* local) {$/;"	f	namespace:gitstatus	typeref:typename:PushRemotePtr
GetRemote	zsh/powerlevel10k/gitstatus/src/git.cc	/^RemotePtr GetRemote(git_repository* repo, const git_reference* local) {$/;"	f	namespace:gitstatus	typeref:typename:RemotePtr
GetTagName	zsh/powerlevel10k/gitstatus/src/repo.cc	/^std::future<std::string> Repo::GetTagName(const git_oid* target) {$/;"	f	class:gitstatus::Repo	typeref:typename:std::future<std::string>
Getting started	zsh/powerlevel10k/README.md	/^## Getting started$/;"	s	chapter:Powerlevel10k
GitDirs	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^void GitDirs(const char* dir, bool from_dotgit, std::string& gitdir, std::string& workdir) {$/;"	f	namespace:gitstatus::__anoneeddea940111	typeref:typename:void
GitError	zsh/powerlevel10k/gitstatus/src/git.cc	/^const char* GitError() {$/;"	f	namespace:gitstatus	typeref:typename:const char *
GitStatus	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^int GitStatus(int argc, char** argv) {$/;"	f	namespace:gitstatus::__anone8e9a1730111	typeref:typename:int
GlobalThreadPool	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^ThreadPool* GlobalThreadPool() { return g_thread_pool; }$/;"	f	namespace:gitstatus	typeref:typename:ThreadPool *
Head	zsh/powerlevel10k/gitstatus/src/git.cc	/^git_reference* Head(git_repository* repo) {$/;"	f	namespace:gitstatus	typeref:typename:git_reference *
Homebrew	zsh/powerlevel10k/README.md	/^### Homebrew$/;"	S	section:Powerlevel10k""Installation
Horrific mess when resizing terminal window	zsh/powerlevel10k/README.md	/^### Horrific mess when resizing terminal window$/;"	S	section:Powerlevel10k""Troubleshooting
How do I add username and/or hostname to prompt?	zsh/powerlevel10k/README.md	/^### How do I add username and\/or hostname to prompt?$/;"	S	section:Powerlevel10k""FAQ
How do I change prompt colors?	zsh/powerlevel10k/README.md	/^### How do I change prompt colors?$/;"	S	section:Powerlevel10k""FAQ
How do I change the format of Git status?	zsh/powerlevel10k/README.md	/^### How do I change the format of Git status?$/;"	S	section:Powerlevel10k""FAQ
How do I export GPG_TTY when using instant prompt?	zsh/powerlevel10k/README.md	/^### How do I export GPG_TTY when using instant prompt?$/;"	S	section:Powerlevel10k""FAQ
How do I initialize direnv when using instant prompt?	zsh/powerlevel10k/README.md	/^### How do I initialize direnv when using instant prompt?$/;"	S	section:Powerlevel10k""FAQ
How do I install Powerlevel10k on a machine without Internet access?	zsh/powerlevel10k/README.md	/^### How do I install Powerlevel10k on a machine without Internet access?$/;"	S	section:Powerlevel10k""FAQ
How do I uninstall Powerlevel10k?	zsh/powerlevel10k/README.md	/^### How do I uninstall Powerlevel10k?$/;"	S	section:Powerlevel10k""FAQ
How do I update Powerlevel10k?	zsh/powerlevel10k/README.md	/^### How do I update Powerlevel10k?$/;"	S	section:Powerlevel10k""FAQ
How it works	zsh/powerlevel10k/gitstatus/README.md	/^## How it works$/;"	s	chapter:gitstatus
How to make Powerlevel10k look like robbyrussell Oh My Zsh theme?	zsh/powerlevel10k/README.md	/^### How to make Powerlevel10k look like robbyrussell Oh My Zsh theme?$/;"	S	section:Powerlevel10k""FAQ
How to package Powerlevel10k for distribution?	zsh/powerlevel10k/README.md	/^### How to package Powerlevel10k for distribution?$/;"	S	section:Powerlevel10k""FAQ
How was the recommended font created?	zsh/powerlevel10k/README.md	/^### How was the recommended font created?$/;"	S	section:Powerlevel10k""FAQ
How were these screenshots and animated gifs created?	zsh/powerlevel10k/README.md	/^### How were these screenshots and animated gifs created?$/;"	S	section:Powerlevel10k""FAQ
I'm using Powerlevel9k with Oh My Zsh. How do I migrate?	zsh/powerlevel10k/README.md	/^### I'm using Powerlevel9k with Oh My Zsh. How do I migrate?$/;"	S	section:Powerlevel10k""FAQ
IConvTry	zsh/powerlevel10k/gitstatus/src/dir.cc	/^Tribool IConvTry(char* inp, size_t ins, char* outp, size_t outs) {$/;"	f	namespace:gitstatus::__anon102c0c8a0311	typeref:typename:Tribool
INFO	zsh/powerlevel10k/gitstatus/src/logging.h	/^  INFO,$/;"	e	enum:gitstatus::LogLevel
Icons cut off in Konsole	zsh/powerlevel10k/README.md	/^### Icons cut off in Konsole$/;"	S	section:Powerlevel10k""Troubleshooting
Icons, glyphs or powerline symbols don't render	zsh/powerlevel10k/README.md	/^### Icons, glyphs or powerline symbols don't render$/;"	S	section:Powerlevel10k""Troubleshooting
If the prompt line aligns with the frame	zsh/powerlevel10k/README.md	/^#### If the prompt line aligns with the frame$/;"	t	subsection:Powerlevel10k""Troubleshooting""Cursor is in the wrong place
If the prompt line is longer than the frame	zsh/powerlevel10k/README.md	/^#### If the prompt line is longer than the frame$/;"	t	subsection:Powerlevel10k""Troubleshooting""Cursor is in the wrong place
If the prompt line is shorter than the frame and is mangled	zsh/powerlevel10k/README.md	/^#### If the prompt line is shorter than the frame and is mangled$/;"	t	subsection:Powerlevel10k""Troubleshooting""Cursor is in the wrong place
If the prompt line is shorter than the frame and is not mangled	zsh/powerlevel10k/README.md	/^#### If the prompt line is shorter than the frame and is not mangled$/;"	t	subsection:Powerlevel10k""Troubleshooting""Cursor is in the wrong place
Inc	zsh/powerlevel10k/gitstatus/src/repo.cc	/^T Inc(std::atomic<T>& x, T by = 1) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:T
Incorrect git status in prompt	zsh/powerlevel10k/README.md	/^### Incorrect git status in prompt$/;"	S	section:Powerlevel10k""Troubleshooting
Index	zsh/powerlevel10k/gitstatus/src/index.cc	/^Index::Index(git_repository* repo, git_index* index)$/;"	f	class:gitstatus::Index
Index	zsh/powerlevel10k/gitstatus/src/index.h	/^class Index {$/;"	c	namespace:gitstatus
IndexDir	zsh/powerlevel10k/gitstatus/src/index.h	/^  explicit IndexDir(Arena* arena) : files(arena), subdirs(arena) {}$/;"	f	struct:gitstatus::IndexDir
IndexDir	zsh/powerlevel10k/gitstatus/src/index.h	/^struct IndexDir {$/;"	s	namespace:gitstatus
IndexStats	zsh/powerlevel10k/gitstatus/src/repo.h	/^struct IndexStats {$/;"	s	namespace:gitstatus
InitDirs	zsh/powerlevel10k/gitstatus/src/index.cc	/^size_t Index::InitDirs(git_index* index) {$/;"	f	class:gitstatus::Index	typeref:typename:size_t
InitGlobalThreadPool	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^void InitGlobalThreadPool(size_t num_threads) {$/;"	f	namespace:gitstatus	typeref:typename:void
InitSplits	zsh/powerlevel10k/gitstatus/src/index.cc	/^void Index::InitSplits(size_t total_weight) {$/;"	f	class:gitstatus::Index	typeref:typename:void
Installation	zsh/powerlevel10k/README.md	/^## Installation$/;"	s	chapter:Powerlevel10k
Is Powerlevel10k fast to load?	zsh/powerlevel10k/README.md	/^### Is Powerlevel10k fast to load?$/;"	S	section:Powerlevel10k""FAQ
Is it really fast?	zsh/powerlevel10k/README.md	/^### Is it really fast?$/;"	S	section:Powerlevel10k""FAQ
IsLockedFd	zsh/powerlevel10k/gitstatus/src/request.cc	/^bool IsLockedFd(int fd) {$/;"	f	namespace:gitstatus::__anon02e6b8140111	typeref:typename:bool
IsLooseTag	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^bool TagDb::IsLooseTag(const char* name) const {$/;"	f	class:gitstatus::TagDb	typeref:typename:bool
IsModified	zsh/powerlevel10k/gitstatus/src/index.cc	/^bool IsModified(const git_index_entry* entry, const struct stat& st, const RepoCaps& caps) {$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:bool
LOG	zsh/powerlevel10k/gitstatus/src/logging.h	/^#define LOG(severity) LOG_/;"	d
LOG_I	zsh/powerlevel10k/gitstatus/src/logging.h	/^#define LOG_I(/;"	d
LRU	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  using LRU = std::multimap<Time, Cache::iterator>;$/;"	t	class:gitstatus::RepoCache	typeref:typename:std::multimap<Time,Cache::iterator>
LazyWithArena	zsh/powerlevel10k/gitstatus/src/arena.h	/^struct LazyWithArena<C<T1, A>> {$/;"	s	namespace:gitstatus
LazyWithArena	zsh/powerlevel10k/gitstatus/src/arena.h	/^struct LazyWithArena<C<T1, T2, A>> {$/;"	s	namespace:gitstatus
License	zsh/powerlevel10k/README.md	/^## License$/;"	s	chapter:Powerlevel10k
License	zsh/powerlevel10k/gitstatus/README.md	/^## License$/;"	s	chapter:gitstatus
Limits	zsh/powerlevel10k/gitstatus/src/options.h	/^struct Limits {$/;"	s	namespace:gitstatus
ListDir	zsh/powerlevel10k/gitstatus/src/dir.cc	/^bool ListDir(int dir_fd, Arena& arena, std::vector<char*>& entries, bool precompose_unicode,$/;"	f	namespace:gitstatus	typeref:typename:bool
Load	zsh/powerlevel10k/gitstatus/src/repo.cc	/^T Load(const std::atomic<T>& x) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:T
LocalBranchName	zsh/powerlevel10k/gitstatus/src/git.cc	/^const char* LocalBranchName(const git_reference* ref) {$/;"	f	namespace:gitstatus	typeref:typename:const char *
LogLevel	zsh/powerlevel10k/gitstatus/src/logging.h	/^enum LogLevel {$/;"	g	namespace:gitstatus
LogLevelStr	zsh/powerlevel10k/gitstatus/src/logging.cc	/^const char* LogLevelStr(LogLevel lvl) {$/;"	f	namespace:gitstatus	typeref:typename:const char *
LogStream	zsh/powerlevel10k/gitstatus/src/logging.h	/^class LogStream : public LogStreamBase {$/;"	c	namespace:gitstatus::internal_logging
LogStream	zsh/powerlevel10k/gitstatus/src/logging.h	/^class LogStream<FATAL> : public LogStreamBase {$/;"	c	namespace:gitstatus::internal_logging
LogStreamBase	zsh/powerlevel10k/gitstatus/src/logging.cc	/^LogStreamBase::LogStreamBase(const char* file, int line, LogLevel lvl)$/;"	f	class:gitstatus::internal_logging::LogStreamBase
LogStreamBase	zsh/powerlevel10k/gitstatus/src/logging.h	/^class LogStreamBase {$/;"	c	namespace:gitstatus::internal_logging
Loop	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^void ThreadPool::Loop(size_t tid) {$/;"	f	class:gitstatus::ThreadPool	typeref:typename:void
Lt	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrLt<-1> Lt;$/;"	m	struct:gitstatus::Str	typeref:typename:StrLt<-1>
Lt	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  StrLt<kCaseSensitive> Lt;$/;"	m	struct:gitstatus::Str	typeref:typename:StrLt<kCaseSensitive>
LuaSnip	nvim/lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "ce0a05ab4e2839e1c48d072c5236cce846a387bc" },$/;"	o
MTim	zsh/powerlevel10k/gitstatus/src/stat.h	/^inline const struct timespec& MTim(const struct stat& s) {$/;"	f	namespace:gitstatus	typeref:typename:const struct timespec &
MTimeEq	zsh/powerlevel10k/gitstatus/src/index.cc	/^bool MTimeEq(const git_index_time& index, const struct timespec& workdir) {$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:bool
Manual	zsh/powerlevel10k/README.md	/^### Manual$/;"	S	section:Powerlevel10k""Installation
Manual font installation	zsh/powerlevel10k/README.md	/^#### Manual font installation$/;"	t	subsection:Powerlevel10k""Fonts""<a name='recommended-meslo-nerd-font-patched-for-powerlevel10k'></a><a name='font'></a>Meslo Nerd Font patched for Powerlevel10k
Manual font installation	zsh/powerlevel10k/font.md	/^## Manual font installation$/;"	s	chapter:Recommended font: Meslo Nerd Font patched for Powerlevel10k
MemDup	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline char* MemDup(const char* p, size_t len) {$/;"	f	class:gitstatus::Arena	typeref:typename:char *
Mitigation	zsh/powerlevel10k/README.md	/^#### Mitigation$/;"	t	subsection:Powerlevel10k""Troubleshooting""Horrific mess when resizing terminal window
Multithreading	zsh/powerlevel10k/gitstatus/README.md	/^### Multithreading$/;"	S	section:gitstatus""Why fast
NextPow2	zsh/powerlevel10k/gitstatus/src/bits.h	/^inline size_t NextPow2(size_t n) { return n < 2 ? 1 : (~size_t{0} >> __builtin_clzll(n - 1)) + 1/;"	f	namespace:gitstatus	typeref:typename:size_t
NumStashes	zsh/powerlevel10k/gitstatus/src/git.cc	/^size_t NumStashes(git_repository* repo) {$/;"	f	namespace:gitstatus	typeref:typename:size_t
OBJDIR	zsh/powerlevel10k/gitstatus/Makefile	/^OBJDIR ?= obj$/;"	m
OBJS	zsh/powerlevel10k/gitstatus/Makefile	/^OBJS := $(patsubst src\/%.cc, $(OBJDIR)\/%.o, $(SRCS))$/;"	m
ON_SCOPE_EXIT	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^#define ON_SCOPE_EXIT(/;"	d
Oh My Zsh	zsh/powerlevel10k/README.md	/^### Oh My Zsh$/;"	S	section:Powerlevel10k""Installation
OnDelta	zsh/powerlevel10k/gitstatus/src/repo.cc	/^int Repo::OnDelta(const char* type, const git_diff_delta& d, std::atomic<size_t>& c1, size_t m1,$/;"	f	class:gitstatus::Repo	typeref:typename:int
Open	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^Repo* RepoCache::Open(const std::string& dir, bool from_dotgit) {$/;"	f	class:gitstatus::RepoCache	typeref:typename:Repo *
OpenDir	zsh/powerlevel10k/gitstatus/src/index.cc	/^int OpenDir(int parent_fd, const char* name) {$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:int
OpenRepo	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^git_repository* OpenRepo(const std::string& dir, bool from_dotgit) {$/;"	f	namespace:gitstatus::__anoneeddea940111	typeref:typename:git_repository *
OpenTail	zsh/powerlevel10k/gitstatus/src/index.cc	/^void OpenTail(int* fds, size_t nfds, int root_fd, StringView dirname, Arena& arena) {$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:void
Options	zsh/powerlevel10k/gitstatus/src/arena.h	/^  struct Options {$/;"	s	class:gitstatus::Arena
Options	zsh/powerlevel10k/gitstatus/src/options.h	/^struct Options : Limits {$/;"	s	namespace:gitstatus
ParseInt	zsh/powerlevel10k/gitstatus/src/options.cc	/^long ParseInt(const char* s) {$/;"	f	namespace:gitstatus::__anon382314b70111	typeref:typename:long
ParseLogLevel	zsh/powerlevel10k/gitstatus/src/logging.cc	/^bool ParseLogLevel(const char* s, LogLevel& lvl) {$/;"	f	namespace:gitstatus	typeref:typename:bool
ParseLong	zsh/powerlevel10k/gitstatus/src/options.cc	/^long ParseLong(const char* s) {$/;"	f	namespace:gitstatus::__anon382314b70111	typeref:typename:long
ParseOid	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^void ParseOid(unsigned char* oid, const char* begin, const char* end) {$/;"	f	namespace:gitstatus::__anon40e328cc0111	typeref:typename:void
ParseOptions	zsh/powerlevel10k/gitstatus/src/options.cc	/^Options ParseOptions(int argc, char** argv) {$/;"	f	namespace:gitstatus	typeref:typename:Options
ParsePack	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^void TagDb::ParsePack() {$/;"	f	class:gitstatus::TagDb	typeref:typename:void
ParseRequest	zsh/powerlevel10k/gitstatus/src/request.cc	/^Request ParseRequest(const std::string& s) {$/;"	f	namespace:gitstatus::__anon02e6b8140111	typeref:typename:Request
ParseSizeT	zsh/powerlevel10k/gitstatus/src/options.cc	/^size_t ParseSizeT(const char* s) {$/;"	f	namespace:gitstatus::__anon382314b70111	typeref:typename:size_t
Postprocessing	zsh/powerlevel10k/gitstatus/README.md	/^### Postprocessing$/;"	S	section:gitstatus""Why fast
Powerlevel10k	zsh/powerlevel10k/README.md	/^# Powerlevel10k$/;"	c
Powerlevel9k compatibility	zsh/powerlevel10k/README.md	/^### Powerlevel9k compatibility$/;"	S	section:Powerlevel10k""Features
Prezto	zsh/powerlevel10k/README.md	/^### Prezto$/;"	S	section:Powerlevel10k""Installation
Print	zsh/powerlevel10k/gitstatus/src/print.h	/^Printable<T> Print(const T& val) {$/;"	f	namespace:gitstatus	typeref:typename:Printable<T>
Print	zsh/powerlevel10k/gitstatus/src/response.cc	/^void ResponseWriter::Print(StringView val) {$/;"	f	class:gitstatus::ResponseWriter	typeref:typename:void
Print	zsh/powerlevel10k/gitstatus/src/response.cc	/^void ResponseWriter::Print(ssize_t val) {$/;"	f	class:gitstatus::ResponseWriter	typeref:typename:void
Print	zsh/powerlevel10k/gitstatus/src/response.h	/^  void Print(const char* val) { Print(StringView(val)); }$/;"	f	class:gitstatus::ResponseWriter	typeref:typename:void
PrintUsage	zsh/powerlevel10k/gitstatus/src/options.cc	/^void PrintUsage() {$/;"	f	namespace:gitstatus::__anon382314b70111	typeref:typename:void
Printable	zsh/powerlevel10k/gitstatus/src/print.h	/^struct Printable {$/;"	s	namespace:gitstatus
Problem statement	zsh/powerlevel10k/gitstatus/README.md	/^### Problem statement$/;"	S	section:gitstatus""Why fast
ProcessRequest	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^void ProcessRequest(const Options& opts, RepoCache& cache, Request req) {$/;"	f	namespace:gitstatus::__anone8e9a1730111	typeref:typename:void
Prompt wrapping around in a weird way	zsh/powerlevel10k/README.md	/^### Prompt wrapping around in a weird way$/;"	S	section:Powerlevel10k""Troubleshooting
Pure compatibility	zsh/powerlevel10k/README.md	/^### Pure compatibility$/;"	S	section:Powerlevel10k""Features
PushRemote	zsh/powerlevel10k/gitstatus/src/git.h	/^struct PushRemote {$/;"	s	namespace:gitstatus
PushRemotePtr	zsh/powerlevel10k/gitstatus/src/git.h	/^using PushRemotePtr = std::unique_ptr<PushRemote, PushRemote::Free>;$/;"	t	namespace:gitstatus	typeref:typename:std::unique_ptr<PushRemote,PushRemote::Free>
Question mark in prompt	zsh/powerlevel10k/README.md	/^### Question mark in prompt$/;"	S	section:Powerlevel10k""Troubleshooting
Quote	zsh/powerlevel10k/gitstatus/src/strings.cc	/^void Quote(std::ostream& strm, const char* begin, const char* end) {$/;"	f	namespace:gitstatus	typeref:typename:void
ROMKATV_GITSTATUS_ALGORITHM_H_	zsh/powerlevel10k/gitstatus/src/algorithm.h	/^#define ROMKATV_GITSTATUS_ALGORITHM_H_$/;"	d
ROMKATV_GITSTATUS_ARENA_H_	zsh/powerlevel10k/gitstatus/src/arena.h	/^#define ROMKATV_GITSTATUS_ARENA_H_$/;"	d
ROMKATV_GITSTATUS_BITS_H_	zsh/powerlevel10k/gitstatus/src/bits.h	/^#define ROMKATV_GITSTATUS_BITS_H_$/;"	d
ROMKATV_GITSTATUS_CHECK_DIR_MTIME_H_	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.h	/^#define ROMKATV_GITSTATUS_CHECK_DIR_MTIME_H_$/;"	d
ROMKATV_GITSTATUS_CHECK_H_	zsh/powerlevel10k/gitstatus/src/check.h	/^#define ROMKATV_GITSTATUS_CHECK_H_$/;"	d
ROMKATV_GITSTATUS_DIR_H_	zsh/powerlevel10k/gitstatus/src/dir.h	/^#define ROMKATV_GITSTATUS_DIR_H_$/;"	d
ROMKATV_GITSTATUS_GIT_H_	zsh/powerlevel10k/gitstatus/src/git.h	/^#define ROMKATV_GITSTATUS_GIT_H_$/;"	d
ROMKATV_GITSTATUS_INDEX_H_	zsh/powerlevel10k/gitstatus/src/index.h	/^#define ROMKATV_GITSTATUS_INDEX_H_$/;"	d
ROMKATV_GITSTATUS_LOGGING_H_	zsh/powerlevel10k/gitstatus/src/logging.h	/^#define ROMKATV_GITSTATUS_LOGGING_H_$/;"	d
ROMKATV_GITSTATUS_OPTIONS_H_	zsh/powerlevel10k/gitstatus/src/options.h	/^#define ROMKATV_GITSTATUS_OPTIONS_H_$/;"	d
ROMKATV_GITSTATUS_PRINT_H_	zsh/powerlevel10k/gitstatus/src/print.h	/^#define ROMKATV_GITSTATUS_PRINT_H_$/;"	d
ROMKATV_GITSTATUS_REPO_CACHE_H_	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^#define ROMKATV_GITSTATUS_REPO_CACHE_H_$/;"	d
ROMKATV_GITSTATUS_REPO_H_	zsh/powerlevel10k/gitstatus/src/repo.h	/^#define ROMKATV_GITSTATUS_REPO_H_$/;"	d
ROMKATV_GITSTATUS_REQUEST_H_	zsh/powerlevel10k/gitstatus/src/request.h	/^#define ROMKATV_GITSTATUS_REQUEST_H_$/;"	d
ROMKATV_GITSTATUS_RESPONSE_H_	zsh/powerlevel10k/gitstatus/src/response.h	/^#define ROMKATV_GITSTATUS_RESPONSE_H_$/;"	d
ROMKATV_GITSTATUS_SCOPE_GUARD_H_	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^#define ROMKATV_GITSTATUS_SCOPE_GUARD_H_$/;"	d
ROMKATV_GITSTATUS_SERIALIZATION_H_	zsh/powerlevel10k/gitstatus/src/serialization.h	/^#define ROMKATV_GITSTATUS_SERIALIZATION_H_$/;"	d
ROMKATV_GITSTATUS_STAT_H_	zsh/powerlevel10k/gitstatus/src/stat.h	/^#define ROMKATV_GITSTATUS_STAT_H_$/;"	d
ROMKATV_GITSTATUS_STRINGS_H_	zsh/powerlevel10k/gitstatus/src/strings.h	/^#define ROMKATV_GITSTATUS_STRINGS_H_$/;"	d
ROMKATV_GITSTATUS_STRING_CMP_H_	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^#define ROMKATV_GITSTATUS_STRING_CMP_H_$/;"	d
ROMKATV_GITSTATUS_STRING_VIEW_H_	zsh/powerlevel10k/gitstatus/src/string_view.h	/^#define ROMKATV_GITSTATUS_STRING_VIEW_H_$/;"	d
ROMKATV_GITSTATUS_TAG_DB_H_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^#define ROMKATV_GITSTATUS_TAG_DB_H_$/;"	d
ROMKATV_GITSTATUS_THREAD_POOL_H_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^#define ROMKATV_GITSTATUS_THREAD_POOL_H_$/;"	d
ROMKATV_GITSTATUS_TIMER_H_	zsh/powerlevel10k/gitstatus/src/timer.h	/^#define ROMKATV_GITSTATUS_TIMER_H_$/;"	d
ROMKATV_GITSTATUS_TIME_H_	zsh/powerlevel10k/gitstatus/src/time.h	/^#define ROMKATV_GITSTATUS_TIME_H_$/;"	d
ROMKATV_GITSTATUS_TRIBOOL_H_	zsh/powerlevel10k/gitstatus/src/tribool.h	/^#define ROMKATV_GITSTATUS_TRIBOOL_H_$/;"	d
Read64	zsh/powerlevel10k/gitstatus/src/dir.cc	/^uint64_t Read64(const void* p) {$/;"	f	namespace:gitstatus	typeref:typename:uint64_t
ReadLooseTags	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^void TagDb::ReadLooseTags() {$/;"	f	class:gitstatus::TagDb	typeref:typename:void
ReadRequest	zsh/powerlevel10k/gitstatus/src/request.cc	/^bool RequestReader::ReadRequest(Request& req) {$/;"	f	class:gitstatus::RequestReader	typeref:typename:bool
Recommended font: Meslo Nerd Font patched for Powerlevel10k	zsh/powerlevel10k/font.md	/^# Recommended font: Meslo Nerd Font patched for Powerlevel10k$/;"	c
RefDb	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^git_refdb* RefDb(git_repository* repo) {$/;"	f	namespace:gitstatus::__anon40e328cc0111	typeref:typename:git_refdb *
Remote	zsh/powerlevel10k/gitstatus/src/git.h	/^struct Remote {$/;"	s	namespace:gitstatus
RemotePtr	zsh/powerlevel10k/gitstatus/src/git.h	/^using RemotePtr = std::unique_ptr<Remote, Remote::Free>;$/;"	t	namespace:gitstatus	typeref:typename:std::unique_ptr<Remote,Remote::Free>
RemoveStaleDirs	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^void RemoveStaleDirs(const char* root_dir) {$/;"	f	namespace:gitstatus::__anon89c473e20111	typeref:typename:void
Repo	zsh/powerlevel10k/gitstatus/src/repo.cc	/^Repo::Repo(git_repository* repo, Limits lim) : lim_(std::move(lim)), repo_(repo), tag_db_(repo) /;"	f	class:gitstatus::Repo
Repo	zsh/powerlevel10k/gitstatus/src/repo.h	/^class Repo {$/;"	c	namespace:gitstatus
RepoCache	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  explicit RepoCache(Limits lim) : lim_(std::move(lim)) {}$/;"	f	class:gitstatus::RepoCache
RepoCache	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^class RepoCache {$/;"	c	namespace:gitstatus
RepoCaps	zsh/powerlevel10k/gitstatus/src/index.cc	/^RepoCaps::RepoCaps(git_repository* repo, git_index* index) {$/;"	f	class:gitstatus::RepoCaps
RepoCaps	zsh/powerlevel10k/gitstatus/src/index.h	/^struct RepoCaps {$/;"	s	namespace:gitstatus
RepoState	zsh/powerlevel10k/gitstatus/src/git.cc	/^std::string RepoState(git_repository* repo) {$/;"	f	namespace:gitstatus	typeref:typename:std::string
Report	zsh/powerlevel10k/gitstatus/src/timer.cc	/^void Timer::Report(const char* msg) {$/;"	f	class:gitstatus::Timer	typeref:typename:void
Request	zsh/powerlevel10k/gitstatus/src/request.h	/^struct Request {$/;"	s	namespace:gitstatus
RequestReader	zsh/powerlevel10k/gitstatus/src/request.cc	/^RequestReader::RequestReader(int fd, int lock_fd, int parent_pid)$/;"	f	class:gitstatus::RequestReader
RequestReader	zsh/powerlevel10k/gitstatus/src/request.h	/^class RequestReader {$/;"	c	namespace:gitstatus
Requirements	zsh/powerlevel10k/gitstatus/README.md	/^## Requirements$/;"	s	chapter:gitstatus
ResponseWriter	zsh/powerlevel10k/gitstatus/src/response.cc	/^ResponseWriter::ResponseWriter(std::string request_id) : request_id_(std::move(request_id)) {$/;"	f	class:gitstatus::ResponseWriter
ResponseWriter	zsh/powerlevel10k/gitstatus/src/response.h	/^class ResponseWriter {$/;"	c	namespace:gitstatus
Reuse	zsh/powerlevel10k/gitstatus/src/arena.cc	/^void Arena::Reuse(size_t num_blocks) {$/;"	f	class:gitstatus::Arena	typeref:typename:void
Right prompt is in the wrong place	zsh/powerlevel10k/README.md	/^### Right prompt is in the wrong place$/;"	S	section:Powerlevel10k""Troubleshooting
RunAsync	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::RunAsync(std::function<void()> f) {$/;"	f	class:gitstatus::Repo	typeref:typename:void
SRCS	zsh/powerlevel10k/gitstatus/Makefile	/^SRCS := $(shell find src -name "*.cc")$/;"	m
SafePrint	zsh/powerlevel10k/gitstatus/src/response.cc	/^void SafePrint(std::ostream& strm, StringView s) {$/;"	f	namespace:gitstatus::__anona19537da0111	typeref:typename:void
ScanDirs	zsh/powerlevel10k/gitstatus/src/index.cc	/^std::vector<const char*> ScanDirs(git_index* index, int root_fd, IndexDir* const* begin,$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:std::vector<const char * >
ScanOpts	zsh/powerlevel10k/gitstatus/src/index.h	/^struct ScanOpts {$/;"	s	namespace:gitstatus
Schedule	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^void ThreadPool::Schedule(Time t, std::function<void()> f) {$/;"	f	class:gitstatus::ThreadPool	typeref:typename:void
Schedule	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  void Schedule(std::function<void()> f) { Schedule(Clock::now(), std::move(f)); }$/;"	f	class:gitstatus::ThreadPool	typeref:typename:void
ScopeGuard	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^  ScopeGuard(ScopeGuard&& other) : f_(std::move(other.f_)) { Undefined(); }$/;"	f	class:gitstatus::internal_scope_guard::ScopeGuard
ScopeGuard	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^  explicit ScopeGuard(F f) : f_(std::move(f)) {}$/;"	f	class:gitstatus::internal_scope_guard::ScopeGuard
ScopeGuard	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^class ScopeGuard {$/;"	c	namespace:gitstatus::internal_scope_guard
ScopeGuardGenerator	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^struct ScopeGuardGenerator {$/;"	s	namespace:gitstatus::internal_scope_guard
Set colors through Powerlevel10k configuration parameters	zsh/powerlevel10k/README.md	/^#### Set colors through Powerlevel10k configuration parameters$/;"	t	subsection:Powerlevel10k""FAQ""How do I change prompt colors?
Shard	zsh/powerlevel10k/gitstatus/src/repo.h	/^  struct Shard {$/;"	s	class:gitstatus::Repo
Show on command	zsh/powerlevel10k/README.md	/^### Show on command$/;"	S	section:Powerlevel10k""Features
Single-threaded scan	zsh/powerlevel10k/gitstatus/README.md	/^### Single-threaded scan$/;"	S	section:gitstatus""Why fast
Some prompt styles are missing from the configuration wizard	zsh/powerlevel10k/README.md	/^### Some prompt styles are missing from the configuration wizard$/;"	S	section:Powerlevel10k""Troubleshooting
SortEntries	zsh/powerlevel10k/gitstatus/src/dir.cc	/^void SortEntries(char** begin, char** end) {$/;"	f	namespace:gitstatus	typeref:typename:void
SortEntries	zsh/powerlevel10k/gitstatus/src/dir.cc	/^void SortEntries<false>(char** begin, char** end) {$/;"	f	namespace:gitstatus	typeref:typename:void
Start	zsh/powerlevel10k/gitstatus/src/timer.cc	/^void Timer::Start() {$/;"	f	class:gitstatus::Timer	typeref:typename:void
StartDirtyScan	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::StartDirtyScan(const std::vector<const char*>& paths) {$/;"	f	class:gitstatus::Repo	typeref:typename:void
StartStagedScan	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::StartStagedScan(const git_oid* head) {$/;"	f	class:gitstatus::Repo	typeref:typename:void
StartsWith	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  bool StartsWith(StringView prefix) const {$/;"	f	struct:gitstatus::StringView	typeref:typename:bool
StashedErrno	zsh/powerlevel10k/gitstatus/src/logging.h	/^struct StashedErrno {};$/;"	s	namespace:gitstatus::internal_logging
StatChanged	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^bool StatChanged(const char* path, const struct stat& prev) {$/;"	f	namespace:gitstatus::__anon89c473e20111	typeref:typename:bool
StatEq	zsh/powerlevel10k/gitstatus/src/stat.h	/^inline bool StatEq(const struct stat& x, const struct stat& y) {$/;"	f	namespace:gitstatus	typeref:typename:bool
Status	zsh/powerlevel10k/gitstatus/README.md	/^### Status$/;"	S	section:gitstatus""Benchmarks
Store	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Store(std::atomic<T>& x, T v) {$/;"	f	namespace:gitstatus::__anon4206e0610111	typeref:typename:void
Str	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  explicit Str(bool case_sensitive)$/;"	f	struct:gitstatus::Str
Str	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct Str {$/;"	s	namespace:gitstatus
Str	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct Str<-1> {$/;"	s	namespace:gitstatus
StrCat	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline char* StrCat(const Ts&... ts) {$/;"	f	class:gitstatus::Arena	typeref:typename:char *
StrCmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  explicit StrCmp(bool case_sensitive) : case_sensitive(case_sensitive) {}$/;"	f	struct:gitstatus::StrCmp
StrCmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct StrCmp<-1> {$/;"	s	namespace:gitstatus
StrCmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct StrCmp<0> {$/;"	s	namespace:gitstatus
StrCmp	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct StrCmp<1> {$/;"	s	namespace:gitstatus
StrDup	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline char* StrDup(StringView s) {$/;"	f	class:gitstatus::Arena	typeref:typename:char *
StrDup	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline char* StrDup(const char* p, size_t len) {$/;"	f	class:gitstatus::Arena	typeref:typename:char *
StrDup	zsh/powerlevel10k/gitstatus/src/arena.h	/^  inline char* StrDup(const char* s) {$/;"	f	class:gitstatus::Arena	typeref:typename:char *
StrEq	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct StrEq : private StrCmp<kCaseSensitive> {$/;"	s	namespace:gitstatus
StrLt	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^struct StrLt : private StrCmp<kCaseSensitive> {$/;"	s	namespace:gitstatus
StrSort	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^void StrSort(Iter begin, Iter end, bool case_sensitive) {$/;"	f	namespace:gitstatus	typeref:typename:void
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  StringView() : StringView("") {}$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  StringView(const char (&s)[N]) : StringView(s, N - 1) {$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  StringView(const char* begin, const char* end) : StringView(begin, end - begin) {}$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  StringView(const char* ptr, size_t len) : ptr(ptr), len(len) {}$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  StringView(const std::string& s) : StringView(s.c_str(), s.size()) {}$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  explicit StringView(const char* ptr) : StringView(ptr, ptr ? std::strlen(ptr) : 0) {}$/;"	f	struct:gitstatus::StringView
StringView	zsh/powerlevel10k/gitstatus/src/string_view.h	/^struct StringView {$/;"	s	namespace:gitstatus
StripTag	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^const char* StripTag(const char* ref) {$/;"	f	namespace:gitstatus::__anon40e328cc0111	typeref:typename:const char *
Sub-pixel imperfections around powerline symbols	zsh/powerlevel10k/README.md	/^### Sub-pixel imperfections around powerline symbols$/;"	S	section:Powerlevel10k""Troubleshooting
Summary for the impatient	zsh/powerlevel10k/gitstatus/README.md	/^### Summary for the impatient$/;"	S	section:gitstatus""Why fast
SwapBytes	zsh/powerlevel10k/gitstatus/src/dir.cc	/^void SwapBytes(char** begin, char** end) {$/;"	f	namespace:gitstatus	typeref:typename:void
Table of Contents	zsh/powerlevel10k/gitstatus/README.md	/^## Table of Contents$/;"	s	chapter:gitstatus
Tag	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^struct Tag {$/;"	s	namespace:gitstatus
TagDb	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^TagDb::TagDb(git_repository* repo)$/;"	f	class:gitstatus::TagDb
TagDb	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^class TagDb {$/;"	c	namespace:gitstatus
TagForCommit	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^std::string TagDb::TagForCommit(const git_oid& oid) {$/;"	f	class:gitstatus::TagDb	typeref:typename:std::string
TagHasTarget	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^bool TagDb::TagHasTarget(const char* name, const git_oid* target) const {$/;"	f	class:gitstatus::TagDb	typeref:typename:bool
The anatomy of the problem	zsh/powerlevel10k/README.md	/^#### The anatomy of the problem$/;"	t	subsection:Powerlevel10k""Troubleshooting""Horrific mess when resizing terminal window
ThreadPool	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^ThreadPool::ThreadPool(size_t num_threads) : num_inflight_(num_threads) {$/;"	f	class:gitstatus::ThreadPool
ThreadPool	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^class ThreadPool {$/;"	c	namespace:gitstatus
Thrower	zsh/powerlevel10k/gitstatus/src/check.h	/^  Thrower(bool should_throw) : throw_(should_throw) {}$/;"	f	class:gitstatus::internal_check::Thrower
Thrower	zsh/powerlevel10k/gitstatus/src/check.h	/^class Thrower {$/;"	c	namespace:gitstatus::internal_check
Time	zsh/powerlevel10k/gitstatus/src/time.h	/^using Time = Clock::time_point;$/;"	t	namespace:gitstatus	typeref:typename:Clock::time_point
Timer	zsh/powerlevel10k/gitstatus/src/timer.h	/^  Timer() { Start(); }$/;"	f	class:gitstatus::Timer
Timer	zsh/powerlevel10k/gitstatus/src/timer.h	/^class Timer {$/;"	c	namespace:gitstatus
Tip	zsh/powerlevel10k/gitstatus/src/arena.h	/^  const void* Tip() const { return reinterpret_cast<const void*>(top_->tip); }$/;"	f	class:gitstatus::Arena	typeref:typename:const void *
TipSize	zsh/powerlevel10k/gitstatus/src/arena.h	/^  size_t TipSize() const { return top_->end - top_->tip; }$/;"	f	class:gitstatus::Arena	typeref:typename:size_t
Touch	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^void Touch(const char* path) {$/;"	f	namespace:gitstatus::__anon89c473e20111	typeref:typename:void
Transient prompt	zsh/powerlevel10k/README.md	/^### Transient prompt$/;"	S	section:Powerlevel10k""Features
Transient prompt stops working after some time	zsh/powerlevel10k/README.md	/^### Transient prompt stops working after some time$/;"	S	section:Powerlevel10k""Troubleshooting
Tribool	zsh/powerlevel10k/gitstatus/src/tribool.h	/^enum class Tribool : int { kFalse = 0, kTrue = 1, kUnknown = -1 };$/;"	g	namespace:gitstatus	typeref:typename:int
Troubleshooting	zsh/powerlevel10k/README.md	/^## Troubleshooting$/;"	s	chapter:Powerlevel10k
Truncate	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^void Truncate(std::string& s, size_t max_len) {$/;"	f	namespace:gitstatus::__anone8e9a1730111	typeref:typename:void
Try it in Docker	zsh/powerlevel10k/README.md	/^## Try it in Docker$/;"	s	chapter:Powerlevel10k
Uncompromising performance	zsh/powerlevel10k/README.md	/^### Uncompromising performance$/;"	S	section:Powerlevel10k""Features
UpdatePack	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^void TagDb::UpdatePack() {$/;"	f	class:gitstatus::TagDb	typeref:typename:void
UpdateShards	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::UpdateShards() {$/;"	f	class:gitstatus::Repo	typeref:typename:void
Using from Bash	zsh/powerlevel10k/gitstatus/README.md	/^## Using from Bash$/;"	s	chapter:gitstatus
Using from Zsh	zsh/powerlevel10k/gitstatus/README.md	/^## Using from Zsh$/;"	s	chapter:gitstatus
Using from other shells	zsh/powerlevel10k/gitstatus/README.md	/^## Using from other shells$/;"	s	chapter:gitstatus
VERIFY	zsh/powerlevel10k/gitstatus/src/check.h	/^#define VERIFY(/;"	d
VERSION	zsh/powerlevel10k/gitstatus/Makefile	/^VERSION ?= $(shell . .\/build.info && printf "%s" "$$gitstatus_version")$/;"	m
Version	zsh/powerlevel10k/gitstatus/src/options.cc	/^const char* Version() {$/;"	f	namespace:gitstatus::__anon382314b70111	typeref:typename:const char *
WARN	zsh/powerlevel10k/gitstatus/src/logging.h	/^  WARN,$/;"	e	enum:gitstatus::LogLevel
Wait	zsh/powerlevel10k/gitstatus/src/repo.cc	/^void Repo::Wait() {$/;"	f	class:gitstatus::Repo	typeref:typename:void
Wait	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^void TagDb::Wait() {$/;"	f	class:gitstatus::TagDb	typeref:typename:void
Wait	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^void ThreadPool::Wait() {$/;"	f	class:gitstatus::ThreadPool	typeref:typename:void
WallTimeMs	zsh/powerlevel10k/gitstatus/src/timer.cc	/^double WallTimeMs() {$/;"	f	namespace:gitstatus::__anon87bf830c0111	typeref:typename:double
Weight	zsh/powerlevel10k/gitstatus/src/index.cc	/^size_t Weight(const IndexDir& dir) { return 1 + dir.subdirs.size() + dir.files.size(); }$/;"	f	namespace:gitstatus::__anonccd369c30111	typeref:typename:size_t
Weird things happen after typing `source ~/.zshrc`	zsh/powerlevel10k/README.md	/^### Weird things happen after typing `source ~\/.zshrc`$/;"	S	section:Powerlevel10k""Troubleshooting
What do different symbols in Git status mean?	zsh/powerlevel10k/README.md	/^### What do different symbols in Git status mean?$/;"	S	section:Powerlevel10k""FAQ
What is the best prompt style in the configuration wizard?	zsh/powerlevel10k/README.md	/^### What is the best prompt style in the configuration wizard?$/;"	S	section:Powerlevel10k""FAQ
What is the minimum supported Zsh version?	zsh/powerlevel10k/README.md	/^### What is the minimum supported Zsh version?$/;"	S	section:Powerlevel10k""FAQ
What is the relationship between Powerlevel9k and Powerlevel10k?	zsh/powerlevel10k/README.md	/^### What is the relationship between Powerlevel9k and Powerlevel10k?$/;"	S	section:Powerlevel10k""FAQ
Where can I ask for help and report bugs?	zsh/powerlevel10k/README.md	/^### Where can I ask for help and report bugs?$/;"	S	section:Powerlevel10k""FAQ
Which aspects of shell and terminal does Powerlevel10k affect?	zsh/powerlevel10k/README.md	/^### Which aspects of shell and terminal does Powerlevel10k affect?$/;"	S	section:Powerlevel10k""FAQ
Why does Git status sometimes appear grey and then gets colored after a short period of time?	zsh/powerlevel10k/README.md	/^### Why does Git status sometimes appear grey and then gets colored after a short period of time/;"	S	section:Powerlevel10k""FAQ
Why does Powerlevel10k spawn extra processes?	zsh/powerlevel10k/README.md	/^### Why does Powerlevel10k spawn extra processes?$/;"	S	section:Powerlevel10k""FAQ
Why fast	zsh/powerlevel10k/gitstatus/README.md	/^## Why fast$/;"	s	chapter:gitstatus
Why is Git status from `$HOME/.git` not displayed in prompt?	zsh/powerlevel10k/README.md	/^### Why is Git status from `$HOME\/.git` not displayed in prompt?$/;"	S	section:Powerlevel10k""FAQ
Why some prompt segments appear and disappear as I'm typing?	zsh/powerlevel10k/README.md	/^### Why some prompt segments appear and disappear as I'm typing?$/;"	S	section:Powerlevel10k""FAQ
WithArena	zsh/powerlevel10k/gitstatus/src/arena.h	/^using WithArena = typename LazyWithArena<C>::type;$/;"	t	namespace:gitstatus	typeref:typename:LazyWithArena<C>::type
Work	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  struct Work {$/;"	s	class:gitstatus::ThreadPool
Write64	zsh/powerlevel10k/gitstatus/src/dir.cc	/^void Write64(uint64_t x, void* p) { std::memcpy(p, &x, 8); }$/;"	f	namespace:gitstatus	typeref:typename:void
ZSH	zsh/powerlevel10k/Makefile	/^ZSH := $(shell command -v zsh 2> \/dev\/null)$/;"	m
Zap	zsh/powerlevel10k/README.md	/^### Zap$/;"	S	section:Powerlevel10k""Installation
Zgen	zsh/powerlevel10k/README.md	/^### Zgen$/;"	S	section:Powerlevel10k""Installation
Zi	zsh/powerlevel10k/README.md	/^### Zi$/;"	S	section:Powerlevel10k""Installation
Zim	zsh/powerlevel10k/README.md	/^### Zim$/;"	S	section:Powerlevel10k""Installation
Zinit	zsh/powerlevel10k/README.md	/^### Zinit$/;"	S	section:Powerlevel10k""Installation
Zplug	zsh/powerlevel10k/README.md	/^### Zplug$/;"	S	section:Powerlevel10k""Installation
Zplugin	zsh/powerlevel10k/README.md	/^### Zplugin$/;"	S	section:Powerlevel10k""Installation
Zsh patch	zsh/powerlevel10k/README.md	/^#### Zsh patch$/;"	t	subsection:Powerlevel10k""Troubleshooting""Horrific mess when resizing terminal window
["<Down>"]	nvim/lua/configs/cmp.lua	/^		["<Down>"] = function(fallback)$/;"	f
["<Up>"]	nvim/lua/configs/cmp.lua	/^		["<Up>"] = function(fallback)$/;"	f
_	zsh/powerlevel10k/internal/p10k.zsh	/^    function _$0_fmt() {$/;"	f
_INTERNAL_GITSTATUS_STRINGIZE	zsh/powerlevel10k/gitstatus/src/options.cc	/^#define _INTERNAL_GITSTATUS_STRINGIZE(x) _INTERNAL_GITSTATUS_STRINGIZE_/;"	d	file:
_INTERNAL_GITSTATUS_STRINGIZE_I	zsh/powerlevel10k/gitstatus/src/options.cc	/^#define _INTERNAL_GITSTATUS_STRINGIZE_I(/;"	d	file:
__anon02e6b8140111	zsh/powerlevel10k/gitstatus/src/request.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon102c0c8a0111	zsh/powerlevel10k/gitstatus/src/dir.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon102c0c8a0202	zsh/powerlevel10k/gitstatus/src/dir.cc	/^  std::sort(begin, end, [](const char* a, const char* b) {$/;"	f	function:gitstatus::SortEntries	file:
__anon102c0c8a0311	zsh/powerlevel10k/gitstatus/src/dir.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon10351f120111	zsh/powerlevel10k/gitstatus/src/logging.cc	/^namespace {$/;"	n	namespace:gitstatus::internal_logging	file:
__anon172c9f2f0102	zsh/powerlevel10k/gitstatus/src/git.cc	/^  auto State = [&]() {$/;"	f	function:gitstatus::RepoState	file:
__anon172c9f2f0202	zsh/powerlevel10k/gitstatus/src/git.cc	/^  auto DirExists = [&](StringView name) {$/;"	f	function:gitstatus::RepoState	file:
__anon172c9f2f0302	zsh/powerlevel10k/gitstatus/src/git.cc	/^  auto ReadFile = [&](StringView name) {$/;"	f	function:gitstatus::RepoState	file:
__anon172c9f2f0402	zsh/powerlevel10k/gitstatus/src/git.cc	/^  auto* cb = +[](size_t index, const char* message, const git_oid* stash_id, void* payload) {$/;"	f	function:gitstatus::NumStashes	file:
__anon382314b70111	zsh/powerlevel10k/gitstatus/src/options.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon40e328cc0111	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon40e328cc0208	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^struct {$/;"	s	namespace:gitstatus::__anon40e328cc0111	file:
__anon40e328cc0308	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^struct {$/;"	s	namespace:gitstatus::__anon40e328cc0111	file:
__anon40e328cc0402	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  auto Reset = [&] {$/;"	f	function:gitstatus::TagDb::UpdatePack	file:
__anon40e328cc0502	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^    auto Wipe = [](auto& x) {$/;"	f	function:gitstatus::TagDb::UpdatePack::__anon40e328cc0402	file:
__anon40e328cc0602	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  GlobalThreadPool()->Schedule([this] {$/;"	f	function:gitstatus::TagDb::ParsePack	file:
__anon40e328cc0702	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^                            [](const char* a, const char* b) { return std::strcmp(a, b) < 0; });$/;"	f	function:gitstatus::TagDb::IsLooseTag	file:
__anon4206e0610111	zsh/powerlevel10k/gitstatus/src/repo.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon4206e0610202	zsh/powerlevel10k/gitstatus/src/repo.cc	/^    GlobalThreadPool()->Schedule([this] {$/;"	f	function:gitstatus::Repo::Repo	file:
__anon4206e0610302	zsh/powerlevel10k/gitstatus/src/repo.cc	/^  auto Off = [&](const char* name) {$/;"	f	function:gitstatus::Repo::GetIndexStats	file:
__anon4206e0610402	zsh/powerlevel10k/gitstatus/src/repo.cc	/^  auto Msg = [&]() {$/;"	f	function:gitstatus::Repo::OnDelta	file:
__anon4206e0610502	zsh/powerlevel10k/gitstatus/src/repo.cc	/^                      const char* matched_pathspec, void* payload) -> int {$/;"	f	function:gitstatus::Repo::StartDirtyScan	typeref:typename:int	file:
__anon4206e0610602	zsh/powerlevel10k/gitstatus/src/repo.cc	/^    RunAsync([this, opt]() {$/;"	f	function:gitstatus::Repo::StartDirtyScan	file:
__anon4206e0610702	zsh/powerlevel10k/gitstatus/src/repo.cc	/^                      const char* matched_pathspec, void* payload) -> int {$/;"	f	function:gitstatus::Repo::StartStagedScan	typeref:typename:int	file:
__anon4206e0610802	zsh/powerlevel10k/gitstatus/src/repo.cc	/^    RunAsync([this, tree, opt, shard]() mutable {$/;"	f	function:gitstatus::Repo::StartStagedScan	file:
__anon4206e0610902	zsh/powerlevel10k/gitstatus/src/repo.cc	/^    GlobalThreadPool()->Schedule([this, f = std::move(f)] {$/;"	f	function:gitstatus::Repo::RunAsync	file:
__anon4206e0610a02	zsh/powerlevel10k/gitstatus/src/repo.cc	/^  GlobalThreadPool()->Schedule([=] {$/;"	f	function:gitstatus::Repo::GetTagName	file:
__anon42f51ff40102	zsh/powerlevel10k/gitstatus/src/arena.h	/^    return [&](std::initializer_list<StringView> ss) {$/;"	f	function:gitstatus::Arena::StrCat	file:
__anon87bf830c0111	zsh/powerlevel10k/gitstatus/src/timer.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anon87bf830c0202	zsh/powerlevel10k/gitstatus/src/timer.cc	/^  auto ToMs = [](const timeval& tv) { return 1e3 * tv.tv_sec + 1e-3 * tv.tv_usec; };$/;"	f	function:gitstatus::__anon87bf830c0111::CpuTimeMs	file:
__anon89c473e20111	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anona19537da0111	zsh/powerlevel10k/gitstatus/src/response.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anona1991e320111	zsh/powerlevel10k/gitstatus/src/arena.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anonccd369c30111	zsh/powerlevel10k/gitstatus/src/index.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anonccd369c30202	zsh/powerlevel10k/gitstatus/src/index.cc	/^  auto AddCandidate = [&](const char* kind, const char* path) {$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30302	zsh/powerlevel10k/gitstatus/src/index.cc	/^  auto Close = [](int& fd) {$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30402	zsh/powerlevel10k/gitstatus/src/index.cc	/^  auto CloseAll = [&] { std::for_each(std::begin(dir_fd), std::end(dir_fd), Close); };$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30502	zsh/powerlevel10k/gitstatus/src/index.cc	/^    auto Basename = [&](const git_index_entry* e) { return e->path + dir.path.len; };$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30602	zsh/powerlevel10k/gitstatus/src/index.cc	/^    auto AddUnmached = [&](StringView basename) {$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30702	zsh/powerlevel10k/gitstatus/src/index.cc	/^    auto StatFiles = [&]() {$/;"	f	function:gitstatus::__anonccd369c30111::ScanDirs	file:
__anonccd369c30802	zsh/powerlevel10k/gitstatus/src/index.cc	/^  auto PopDir = [&] {$/;"	f	function:gitstatus::Index::InitDirs	file:
__anonccd369c30902	zsh/powerlevel10k/gitstatus/src/index.cc	/^    GlobalThreadPool()->Schedule([&, from, to]() {$/;"	f	function:gitstatus::Index::GetDirtyCandidates	file:
__anonccd369c30a02	zsh/powerlevel10k/gitstatus/src/index.cc	/^  auto StrEq = [](const char* a, const char* b) { return !strcmp(a, b); };$/;"	f	function:gitstatus::Index::GetDirtyCandidates	file:
__anone8e9a1730111	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anoneeddea940111	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^namespace {$/;"	n	namespace:gitstatus	file:
__anonf96da23c0102	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^    threads_.emplace_back([=]() { Loop(i + 1); });$/;"	f	function:gitstatus::ThreadPool::ThreadPool	file:
__anonf96da23c0202	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^  auto Next = [&]() -> std::function<void()> {$/;"	f	function:gitstatus::ThreadPool::Loop	typeref:typename:std::function<void ()>	file:
__anonf96da23c0302	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^  idle_cv_.wait(lock, [&] { return work_.empty() && num_inflight_ == 0; });$/;"	f	function:gitstatus::ThreadPool::Wait	file:
_gitstatus_cleanup_	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^        function _gitstatus_cleanup_$name-$fsuf() {$/;"	f
_gitstatus_clear	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function _gitstatus_clear"${1:-}"() {$/;"	f
_gitstatus_daemon	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function _gitstatus_daemon"${1:-}"() {$/;"	f
_gitstatus_install_daemon_found	zsh/powerlevel10k/gitstatus/install	/^_gitstatus_install_daemon_found() {$/;"	f
_gitstatus_install_main	zsh/powerlevel10k/gitstatus/install	/^_gitstatus_install_main() {$/;"	f
_gitstatus_process_response	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function _gitstatus_process_response"${1:-}"() {$/;"	f
_gitstatus_process_response_	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^        function _gitstatus_process_response_$name-$fsuf() {$/;"	f
_gitstatus_set_daemon	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^          function _gitstatus_set_daemon() {$/;"	f
_gitstatus_set_daemon	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^      function _gitstatus_set_daemon$fsuf() {$/;"	f
_p9k_all_params_eq	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_all_params_eq() {$/;"	f
_p9k_asdf_check_meta	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_asdf_check_meta() {$/;"	f
_p9k_asdf_init_meta	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_asdf_init_meta() {$/;"	f
_p9k_asdf_parse_version_file	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_asdf_parse_version_file() {$/;"	f
_p9k_background	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_background() {$/;"	f
_p9k_build_gap_post	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_build_gap_post() {$/;"	f
_p9k_build_test_stats	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_build_test_stats() {$/;"	f
_p9k_cache_ephemeral_get	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_ephemeral_get() {$/;"	f
_p9k_cache_ephemeral_set	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_ephemeral_set() {$/;"	f
_p9k_cache_get	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_get() {$/;"	f
_p9k_cache_set	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_set() {$/;"	f
_p9k_cache_stat_get	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_stat_get() {$/;"	f
_p9k_cache_stat_set	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_cache_stat_set() {$/;"	f
_p9k_cached_cmd	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_cached_cmd() {$/;"	f
_p9k_can_configure	zsh/powerlevel10k/internal/configure.zsh	/^function _p9k_can_configure() {$/;"	f
_p9k_check_visual_mode	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_check_visual_mode() {$/;"	f
_p9k_check_visual_mode	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_check_visual_mode() {}$/;"	f
_p9k_clear_instant_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_clear_instant_prompt() {$/;"	f
_p9k_color	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_color() {$/;"	f
_p9k_custom_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_custom_prompt() {$/;"	f
_p9k_declare	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_declare() {$/;"	f
_p9k_deinit	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_deinit() {$/;"	f
_p9k_delete_instant_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_delete_instant_prompt() {$/;"	f
_p9k_deschedule_redraw	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_deschedule_redraw() {$/;"	f
_p9k_display_segment	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_display_segment() {$/;"	f
_p9k_do_dump	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_do_dump() {$/;"	f
_p9k_do_nothing	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_do_nothing() { true; }$/;"	f
_p9k_dump_instant_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_dump_instant_prompt() {$/;"	f
_p9k_dump_state	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_dump_state() {$/;"	f
_p9k_escape	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_escape() {$/;"	f
_p9k_escape_style	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_escape_style() {$/;"	f
_p9k_fetch_cwd	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_fetch_cwd() {$/;"	f
_p9k_fetch_nordvpn_status	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_fetch_nordvpn_status() {$/;"	f
_p9k_foreground	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_foreground() {$/;"	f
_p9k_fvm_new	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_fvm_new() {$/;"	f
_p9k_fvm_old	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_fvm_old() {$/;"	f
_p9k_gcloud_prefetch	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_gcloud_prefetch() {$/;"	f
_p9k_get_icon	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_get_icon() {$/;"	f
_p9k_glob	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_glob() {$/;"	f
_p9k_goenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_goenv_global_version() {$/;"	f
_p9k_haskell_stack_version	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_haskell_stack_version() {$/;"	f
_p9k_human_readable_bytes	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_human_readable_bytes() {$/;"	f
_p9k_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init() {$/;"	f
_p9k_init_cacheable	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_init_cacheable() {$/;"	f
_p9k_init_display	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_display() {$/;"	f
_p9k_init_icons	zsh/powerlevel10k/internal/icons.zsh	/^function _p9k_init_icons() {$/;"	f
_p9k_init_lines	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_lines() {$/;"	f
_p9k_init_params	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_params() {$/;"	f
_p9k_init_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_prompt() {$/;"	f
_p9k_init_ssh	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_ssh() {$/;"	f
_p9k_init_toolbox	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_toolbox() {$/;"	f
_p9k_init_vars	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_vars() {$/;"	f
_p9k_init_vcs	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_init_vcs() {$/;"	f
_p9k_instant_prompt_cleanup	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_instant_prompt_cleanup() {$/;"	f
_p9k_instant_prompt_precmd_first	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_instant_prompt_precmd_first() {$/;"	f
_p9k_instant_prompt_sched_last	zsh/powerlevel10k/internal/p10k.zsh	/^    function _p9k_instant_prompt_sched_last() {$/;"	f
_p9k_iterm2_precmd	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_iterm2_precmd() {$/;"	f
_p9k_iterm2_preexec	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_iterm2_preexec() {$/;"	f
_p9k_jenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_jenv_global_version() {$/;"	f
_p9k_left_prompt_segment	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_left_prompt_segment() {$/;"	f
_p9k_luaenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_luaenv_global_version() {$/;"	f
_p9k_maybe_ignore_git_repo	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_maybe_ignore_git_repo() {$/;"	f
_p9k_must_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_must_init() {$/;"	f
_p9k_nodeenv_version_transform	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_nodeenv_version_transform() {$/;"	f
_p9k_nodenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_nodenv_global_version() {$/;"	f
_p9k_nvm_ls_current	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_nvm_ls_current() {$/;"	f
_p9k_nvm_ls_default	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_nvm_ls_default() {$/;"	f
_p9k_on_expand	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_expand() {$/;"	f
_p9k_on_widget_deactivate-region	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_deactivate-region() { _p9k_check_visual_mode; }$/;"	f
_p9k_on_widget_overwrite-mode	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_overwrite-mode()    { _p9k_check_visual_mode; __p9k_reset_state=2; }$/;"	f
_p9k_on_widget_send-break	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_send-break() {$/;"	f
_p9k_on_widget_vi-replace	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_vi-replace()        { _p9k_check_visual_mode; __p9k_reset_state=2; }$/;"	f
_p9k_on_widget_visual-line-mode	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_visual-line-mode()  { _p9k_check_visual_mode; }$/;"	f
_p9k_on_widget_visual-mode	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_visual-mode()       { _p9k_check_visual_mode; }$/;"	f
_p9k_on_widget_zle-keymap-select	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_zle-keymap-select() { _p9k_check_visual_mode; __p9k_reset_state=2; }$/;"	f
_p9k_on_widget_zle-line-finish	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_zle-line-finish() {$/;"	f
_p9k_on_widget_zle-line-init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_on_widget_zle-line-init() {$/;"	f
_p9k_param	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_param() {$/;"	f
_p9k_parse_aws_config	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_parse_aws_config() {$/;"	f
_p9k_parse_buffer	zsh/powerlevel10k/internal/parser.zsh	/^function _p9k_parse_buffer() {$/;"	f
_p9k_phpenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_phpenv_global_version() {$/;"	f
_p9k_plenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_plenv_global_version() {$/;"	f
_p9k_precmd	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_precmd() {$/;"	f
_p9k_precmd_first	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_precmd_first() {$/;"	f
_p9k_precmd_impl	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_precmd_impl() {$/;"	f
_p9k_preexec1	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_preexec1() {$/;"	f
_p9k_preexec2	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_preexec2() {$/;"	f
_p9k_print_params	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_print_params() { typeset -p -- "$@" }$/;"	f
_p9k_print_params	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_print_params() {$/;"	f
_p9k_prompt_anaconda_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_anaconda_init() {$/;"	f
_p9k_prompt_asdf_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_asdf_init() {$/;"	f
_p9k_prompt_aws_eb_env_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_aws_eb_env_init() {$/;"	f
_p9k_prompt_aws_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_aws_init() {$/;"	f
_p9k_prompt_azure_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_azure_init() {$/;"	f
_p9k_prompt_battery_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_battery_async() {$/;"	f
_p9k_prompt_battery_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_battery_compute() {$/;"	f
_p9k_prompt_battery_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_battery_init() {$/;"	f
_p9k_prompt_battery_set_args	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_battery_set_args() {$/;"	f
_p9k_prompt_battery_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_battery_sync() {$/;"	f
_p9k_prompt_chezmoi_shell_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_chezmoi_shell_init() {$/;"	f
_p9k_prompt_chruby_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_chruby_init() {$/;"	f
_p9k_prompt_context_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_context_init() {$/;"	f
_p9k_prompt_cpu_arch_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_cpu_arch_init() {$/;"	f
_p9k_prompt_detect_virt_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_detect_virt_init() {$/;"	f
_p9k_prompt_direnv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_direnv_init() {$/;"	f
_p9k_prompt_disk_usage_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_disk_usage_async() {$/;"	f
_p9k_prompt_disk_usage_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_disk_usage_compute() {$/;"	f
_p9k_prompt_disk_usage_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_disk_usage_init() {$/;"	f
_p9k_prompt_disk_usage_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_disk_usage_sync() {$/;"	f
_p9k_prompt_docker_machine_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_docker_machine_init() {$/;"	f
_p9k_prompt_dotnet_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_dotnet_init() {$/;"	f
_p9k_prompt_dropbox_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_dropbox_init() {$/;"	f
_p9k_prompt_fvm_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_fvm_init() {$/;"	f
_p9k_prompt_gcloud_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_gcloud_async() {$/;"	f
_p9k_prompt_gcloud_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_gcloud_compute() {$/;"	f
_p9k_prompt_gcloud_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_gcloud_init() {$/;"	f
_p9k_prompt_gcloud_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_gcloud_sync() {$/;"	f
_p9k_prompt_gcloud_update	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_gcloud_update() {$/;"	f
_p9k_prompt_go_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_go_version_init() {$/;"	f
_p9k_prompt_goenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_goenv_init() {$/;"	f
_p9k_prompt_google_app_cred_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_google_app_cred_init() {$/;"	f
_p9k_prompt_haskell_stack_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_haskell_stack_init() {$/;"	f
_p9k_prompt_java_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_java_version_init() {$/;"	f
_p9k_prompt_jenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_jenv_init() {$/;"	f
_p9k_prompt_kubecontext_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_kubecontext_init() {$/;"	f
_p9k_prompt_laravel_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_laravel_version_init() {$/;"	f
_p9k_prompt_length	zsh/powerlevel10k/internal/p10k.zsh	/^  function _p9k_prompt_length() {$/;"	f
_p9k_prompt_length	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_length() {$/;"	f
_p9k_prompt_lf_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_lf_init() {$/;"	f
_p9k_prompt_load_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_load_async() {$/;"	f
_p9k_prompt_load_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_load_compute() {$/;"	f
_p9k_prompt_load_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_load_init() {$/;"	f
_p9k_prompt_load_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_load_sync() {$/;"	f
_p9k_prompt_luaenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_luaenv_init() {$/;"	f
_p9k_prompt_midnight_commander_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_midnight_commander_init() {$/;"	f
_p9k_prompt_net_iface_async	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_net_iface_async() {$/;"	f
_p9k_prompt_net_iface_compute	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_net_iface_compute() {$/;"	f
_p9k_prompt_net_iface_init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_net_iface_init() {$/;"	f
_p9k_prompt_net_iface_match	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_net_iface_match() {$/;"	f
_p9k_prompt_net_iface_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_net_iface_sync() {$/;"	f
_p9k_prompt_nix_shell_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nix_shell_init() {$/;"	f
_p9k_prompt_nnn_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nnn_init() {$/;"	f
_p9k_prompt_node_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_node_version_init() {$/;"	f
_p9k_prompt_nodeenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nodeenv_init() {$/;"	f
_p9k_prompt_nodenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nodenv_init() {$/;"	f
_p9k_prompt_nordvpn_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nordvpn_init() {$/;"	f
_p9k_prompt_nvm_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_nvm_init() {$/;"	f
_p9k_prompt_openfoam_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_openfoam_init() {$/;"	f
_p9k_prompt_overflow_bug	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_overflow_bug() {$/;"	f
_p9k_prompt_per_directory_history_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_per_directory_history_init() {$/;"	f
_p9k_prompt_perlbrew_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_perlbrew_init() {$/;"	f
_p9k_prompt_php_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_php_version_init() {$/;"	f
_p9k_prompt_phpenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_phpenv_init() {$/;"	f
_p9k_prompt_plenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_plenv_init() {$/;"	f
_p9k_prompt_proxy_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_proxy_init() {$/;"	f
_p9k_prompt_public_ip_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_public_ip_async() {$/;"	f
_p9k_prompt_public_ip_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_public_ip_compute() {$/;"	f
_p9k_prompt_public_ip_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_public_ip_init() {$/;"	f
_p9k_prompt_public_ip_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_public_ip_sync() {$/;"	f
_p9k_prompt_pyenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_pyenv_init() {$/;"	f
_p9k_prompt_ram_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_ram_async() {$/;"	f
_p9k_prompt_ram_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_ram_compute() {$/;"	f
_p9k_prompt_ram_init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_ram_init() {$/;"	f
_p9k_prompt_ram_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_ram_sync() {$/;"	f
_p9k_prompt_ranger_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_ranger_init() {$/;"	f
_p9k_prompt_rbenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_rbenv_init() {$/;"	f
_p9k_prompt_rust_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_rust_version_init() {$/;"	f
_p9k_prompt_rvm_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_rvm_init() {$/;"	f
_p9k_prompt_scalaenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_scalaenv_init() {$/;"	f
_p9k_prompt_segment	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_segment() { "_p9k_${_p9k__prompt_side}_prompt_segment" "$@" }$/;"	f
_p9k_prompt_ssh_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_ssh_init() {$/;"	f
_p9k_prompt_swap_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_swap_async() {$/;"	f
_p9k_prompt_swap_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_swap_compute() {$/;"	f
_p9k_prompt_swap_init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_swap_init() {$/;"	f
_p9k_prompt_swap_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_swap_sync() {$/;"	f
_p9k_prompt_swift_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_swift_version_init() {$/;"	f
_p9k_prompt_taskwarrior_init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_taskwarrior_init() {$/;"	f
_p9k_prompt_terraform_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_terraform_init() {$/;"	f
_p9k_prompt_terraform_version_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_terraform_version_init() {$/;"	f
_p9k_prompt_time_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_time_async() {$/;"	f
_p9k_prompt_time_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_time_compute() {$/;"	f
_p9k_prompt_time_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_time_init() {$/;"	f
_p9k_prompt_time_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_time_sync() {$/;"	f
_p9k_prompt_timewarrior_init	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_prompt_timewarrior_init() {$/;"	f
_p9k_prompt_todo_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_todo_init() {$/;"	f
_p9k_prompt_toolbox_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_toolbox_init() {$/;"	f
_p9k_prompt_user_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_user_init() {$/;"	f
_p9k_prompt_vim_shell_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_vim_shell_init() {$/;"	f
_p9k_prompt_virtualenv_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_virtualenv_init() {$/;"	f
_p9k_prompt_wifi_async	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_wifi_async() {$/;"	f
_p9k_prompt_wifi_compute	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_wifi_compute() {$/;"	f
_p9k_prompt_wifi_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_wifi_init() {$/;"	f
_p9k_prompt_wifi_sync	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_wifi_sync() {$/;"	f
_p9k_prompt_xplr_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_prompt_xplr_init() {$/;"	f
_p9k_pyenv_compute	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_pyenv_compute() {$/;"	f
_p9k_pyenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_pyenv_global_version() {$/;"	f
_p9k_python_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_python_version() {$/;"	f
_p9k_rbenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_rbenv_global_version() {$/;"	f
_p9k_read_file	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_read_file() {$/;"	f
_p9k_read_pyenv_like_version_file	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_read_pyenv_like_version_file() {$/;"	f
_p9k_read_word	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_read_word() {$/;"	f
_p9k_redraw	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_redraw() {$/;"	f
_p9k_reset_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_reset_prompt() {$/;"	f
_p9k_restore_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_restore_prompt() {$/;"	f
_p9k_restore_special_params	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_restore_special_params() {$/;"	f
_p9k_restore_state	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_restore_state() {$/;"	f
_p9k_right_prompt_segment	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_right_prompt_segment() {$/;"	f
_p9k_save_status	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_save_status() {$/;"	f
_p9k_scalaenv_global_version	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_scalaenv_global_version() {$/;"	f
_p9k_segment_in_use	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_segment_in_use() {$/;"	f
_p9k_set_instant_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_set_instant_prompt() {$/;"	f
_p9k_set_os	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_set_os() {$/;"	f
_p9k_set_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_set_prompt() {$/;"	f
_p9k_setup	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_setup() {$/;"	f
_p9k_shorten_delim_len	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_shorten_delim_len() {$/;"	f
_p9k_should_dump	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_should_dump() {$/;"	f
_p9k_taskwarrior_check_data	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_taskwarrior_check_data() {$/;"	f
_p9k_taskwarrior_check_meta	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_taskwarrior_check_meta() {$/;"	f
_p9k_taskwarrior_init_data	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_taskwarrior_init_data() {$/;"	f
_p9k_taskwarrior_init_meta	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_taskwarrior_init_meta() {$/;"	f
_p9k_timewarrior_clear	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_timewarrior_clear() {$/;"	f
_p9k_translate_color	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_translate_color() {$/;"	f
_p9k_trapint	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_trapint() {$/;"	f
_p9k_upglob	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_upglob() {$/;"	f
_p9k_url_escape	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_url_escape() {$/;"	f
_p9k_vcs_gitstatus	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_gitstatus() {$/;"	f
_p9k_vcs_icon	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_icon() {$/;"	f
_p9k_vcs_info_init	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_vcs_info_init() {$/;"	f
_p9k_vcs_render	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_render() {$/;"	f
_p9k_vcs_resume	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_resume() {$/;"	f
_p9k_vcs_status_for_dir	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_status_for_dir() {$/;"	f
_p9k_vcs_status_purge	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_status_purge() {$/;"	f
_p9k_vcs_status_restore	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_status_restore() {$/;"	f
_p9k_vcs_status_save	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_vcs_status_save() {$/;"	f
_p9k_vcs_style	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_vcs_style() {$/;"	f
_p9k_vpn_ip_render	zsh/powerlevel10k/internal/p10k.zsh	/^_p9k_vpn_ip_render() {$/;"	f
_p9k_widget	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_widget() {$/;"	f
_p9k_widget_hook	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_widget_hook() {$/;"	f
_p9k_widget_send-break	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_widget_send-break() {$/;"	f
_p9k_widget_zle-line-pre-redraw	zsh/powerlevel10k/internal/p10k.zsh	/^      function _p9k_widget_zle-line-pre-redraw() {$/;"	f
_p9k_widget_zle-line-pre-redraw-impl	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_widget_zle-line-pre-redraw-impl() {$/;"	f
_p9k_worker_async	zsh/powerlevel10k/internal/worker.zsh	/^  function _p9k_worker_async() {$/;"	f
_p9k_worker_cleanup	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_cleanup() {$/;"	f
_p9k_worker_invoke	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_invoke() {$/;"	f
_p9k_worker_main	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_main() {$/;"	f
_p9k_worker_receive	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_receive() {$/;"	f
_p9k_worker_reply	zsh/powerlevel10k/internal/worker.zsh	/^  function _p9k_worker_reply() {$/;"	f
_p9k_worker_start	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_start() {$/;"	f
_p9k_worker_stop	zsh/powerlevel10k/internal/worker.zsh	/^function _p9k_worker_stop() {$/;"	f
_p9k_wrap_widgets	zsh/powerlevel10k/internal/p10k.zsh	/^function _p9k_wrap_widgets() {$/;"	f
_z	zsh/z.sh	/^_z() {$/;"	f
_z_dirs	zsh/z.sh	/^    _z_dirs () {$/;"	f
_z_precmd	zsh/z.sh	/^            _z_precmd() {$/;"	f
_z_zsh_tab_completion	zsh/z.sh	/^    _z_zsh_tab_completion() {$/;"	f
add_ondrej_php_repository	install_programs.sh	/^add_ondrej_php_repository() {$/;"	f
add_prompt	zsh/powerlevel10k/internal/wizard.zsh	/^function add_prompt() {$/;"	f
add_prompt_n	zsh/powerlevel10k/internal/wizard.zsh	/^function add_prompt_n() {$/;"	f
add_widget	zsh/powerlevel10k/internal/wizard.zsh	/^function add_widget() {$/;"	f
address	zsh/powerlevel10k/gitstatus/src/arena.h	/^  const_pointer address(const_reference x) const { return &x; }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:const_pointer
address	zsh/powerlevel10k/gitstatus/src/arena.h	/^  pointer address(reference x) const { return &x; }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:pointer
algorithm	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "algorithm": "cpp",$/;"	s	object:files.associations
align.nvim	nvim/lazy-lock.json	/^  "align.nvim": { "branch": "master", "commit": "12ed24b34df81d57e777fea5a535611bab10a620" },$/;"	o
all	zsh/powerlevel10k/Makefile	/^all:$/;"	t
all	zsh/powerlevel10k/gitstatus/Makefile	/^all: $(APPNAME)$/;"	t
allocate	zsh/powerlevel10k/gitstatus/src/arena.h	/^  pointer allocate(size_type n, const void* hint = nullptr) { return arena_.Allocate<T>(n); }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:pointer
arena	zsh/powerlevel10k/gitstatus/src/arena.h	/^  Arena& arena() const { return arena_; }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:Arena &
arena	zsh/powerlevel10k/gitstatus/src/index.h	/^  Arena arena;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:Arena
arena_	zsh/powerlevel10k/gitstatus/src/arena.h	/^  Arena& arena_;$/;"	m	class:gitstatus::ArenaAllocator	typeref:typename:Arena &
arena_	zsh/powerlevel10k/gitstatus/src/index.h	/^  Arena arena_;$/;"	m	class:gitstatus::Index	typeref:typename:Arena
array	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "array": "cpp",$/;"	s	object:files.associations
ask	zsh/powerlevel10k/internal/wizard.zsh	/^function ask() {$/;"	f
ask_arrow	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_arrow() {$/;"	f
ask_charset	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_charset() {$/;"	f
ask_color	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_color() {$/;"	f
ask_color_scheme	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_color_scheme() {$/;"	f
ask_config_overwrite	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_config_overwrite() {$/;"	f
ask_diamond	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_diamond() {$/;"	f
ask_empty_line	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_empty_line() {$/;"	f
ask_extra_icons	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_extra_icons() {$/;"	f
ask_font	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_font() {$/;"	f
ask_frame	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_frame() {$/;"	f
ask_gap_char	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_gap_char() {$/;"	f
ask_heads	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_heads() {$/;"	f
ask_icon_padding	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_icon_padding() {$/;"	f
ask_instant_prompt	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_instant_prompt() {$/;"	f
ask_lock	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_lock() {$/;"	f
ask_num_lines	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_num_lines() {$/;"	f
ask_ornaments_color	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_ornaments_color() {$/;"	f
ask_prefixes	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_prefixes() {$/;"	f
ask_python	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_python() {$/;"	f
ask_quotes	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_quotes() {$/;"	f
ask_remove_font	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_remove_font() {$/;"	f
ask_separators	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_separators() {$/;"	f
ask_style	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_style() {$/;"	f
ask_tails	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_tails() {$/;"	f
ask_time	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_time() {$/;"	f
ask_transient_prompt	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_transient_prompt() {$/;"	f
ask_use_rprompt	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_use_rprompt() {$/;"	f
ask_width	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_width() {$/;"	f
ask_zshrc_edit	zsh/powerlevel10k/internal/wizard.zsh	/^function ask_zshrc_edit() {$/;"	f
assume_unchanged_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> assume_unchanged_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
atomic	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "atomic": "cpp",$/;"	s	object:files.associations
auto-save.nvim	nvim/lazy-lock.json	/^  "auto-save.nvim": { "branch": "main", "commit": "979b6c82f60cfa80f4cf437d77446d0ded0addf0" },$/;"	o
basename	zsh/powerlevel10k/gitstatus/src/index.h	/^  StringView basename;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:StringView
better-escape.nvim	nvim/lazy-lock.json	/^  "better-escape.nvim": { "branch": "master", "commit": "62015330fc831306f5229f24b2db981d07f816c/;"	o
bit	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "bit": "cpp",$/;"	s	object:files.associations
blocks_	zsh/powerlevel10k/gitstatus/src/arena.h	/^  std::vector<Block> blocks_;$/;"	m	class:gitstatus::Arena	typeref:typename:std::vector<Block>
branch	nvim/lazy-lock.json	/^  "Comment.nvim": { "branch": "master", "commit": "e30b7f2008e52442154b66f7c519bfd2f1e32acb" },$/;"	s	object:Comment.nvim
branch	nvim/lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "ce0a05ab4e2839e1c48d072c5236cce846a387bc" },$/;"	s	object:LuaSnip
branch	nvim/lazy-lock.json	/^  "align.nvim": { "branch": "master", "commit": "12ed24b34df81d57e777fea5a535611bab10a620" },$/;"	s	object:align.nvim
branch	nvim/lazy-lock.json	/^  "auto-save.nvim": { "branch": "main", "commit": "979b6c82f60cfa80f4cf437d77446d0ded0addf0" },$/;"	s	object:auto-save.nvim
branch	nvim/lazy-lock.json	/^  "better-escape.nvim": { "branch": "master", "commit": "62015330fc831306f5229f24b2db981d07f816c/;"	s	object:better-escape.nvim
branch	nvim/lazy-lock.json	/^  "bufferline.nvim": { "branch": "main", "commit": "aa16dafdc642594c7ade7e88d31a6119feb189d6" },$/;"	s	object:bufferline.nvim
branch	nvim/lazy-lock.json	/^  "catppuccin": { "branch": "main", "commit": "7946d1a195c66fed38b3e34f9fa8e0c5a2da0700" },$/;"	s	object:catppuccin
branch	nvim/lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
branch	nvim/lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	s	object:cmp-cmdline
branch	nvim/lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	s	object:cmp-nvim-lsp
branch	nvim/lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
branch	nvim/lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "05a9ab28b53f71d1aece421ef32fee2cb857a843" },$/;"	s	object:cmp_luasnip
branch	nvim/lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "1d1362b0261d06a0b91872e916c172320bbb988a" },$/;"	s	object:conform.nvim
branch	nvim/lazy-lock.json	/^  "cyberdream.nvim": { "branch": "main", "commit": "d96290af1c2cffcfdadb266144097e5496d08fd3" },$/;"	s	object:cyberdream.nvim
branch	nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	s	object:diffview.nvim
branch	nvim/lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "6741f1062d3dc6e4755367a7e9b347b553623f04" },$/;"	s	object:dressing.nvim
branch	nvim/lazy-lock.json	/^  "edge": { "branch": "master", "commit": "2de1aede94569f643de438391f6c8b1712038d35" },$/;"	s	object:edge
branch	nvim/lazy-lock.json	/^  "fidget.nvim": { "branch": "main", "commit": "0ba1e16d07627532b6cae915cc992ecac249fb97" },$/;"	s	object:fidget.nvim
branch	nvim/lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "00ebcaa159e817150bd83bfe2d51fa3b3377d5c4" /;"	s	object:friendly-snippets
branch	nvim/lazy-lock.json	/^  "garbage-day.nvim": { "branch": "main", "commit": "4a1160bfffb2f499fb55a54333f29d160ab3c8a1" }/;"	s	object:garbage-day.nvim
branch	nvim/lazy-lock.json	/^  "gentags.nvim": { "branch": "main", "commit": "e0ade1274fe8a94e993e7142dc19b5ddcc9ca38b" },$/;"	s	object:gentags.nvim
branch	nvim/lazy-lock.json	/^  "git-blame.nvim": { "branch": "master", "commit": "408d5487d908dfe5d48e5645d8b27ddcc16b11e0" }/;"	s	object:git-blame.nvim
branch	nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "2a7b39f4d282935f8b44cbe82879af69c7472f5c" },$/;"	s	object:gitsigns.nvim
branch	nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	s	object:gruvbox.nvim
branch	nvim/lazy-lock.json	/^  "hardtime.nvim": { "branch": "main", "commit": "9a4e24fb40482dc85a93bf6cf344a030b9bf9a39" },$/;"	s	object:hardtime.nvim
branch	nvim/lazy-lock.json	/^  "harpoon": { "branch": "harpoon2", "commit": "0378a6c428a0bed6a2781d459d7943843f374bce" },$/;"	s	object:harpoon
branch	nvim/lazy-lock.json	/^  "hlargs.nvim": { "branch": "main", "commit": "cc0d9ee75e5ffba730393049119361b9e3a5b1b6" },$/;"	s	object:hlargs.nvim
branch	nvim/lazy-lock.json	/^  "horizon.nvim": { "branch": "main", "commit": "414f887f9171e842196d595d25f7d1f020e61208" },$/;"	s	object:horizon.nvim
branch	nvim/lazy-lock.json	/^  "hydra.nvim": { "branch": "master", "commit": "55de54543d673824435930ecf533256eea2e565b" },$/;"	s	object:hydra.nvim
branch	nvim/lazy-lock.json	/^  "incline.nvim": { "branch": "main", "commit": "16fc9c073e3ea4175b66ad94375df6d73fc114c0" },$/;"	s	object:incline.nvim
branch	nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "65e20ab94a26d0e14acac5049b8641336819/;"	s	object:indent-blankline.nvim
branch	nvim/lazy-lock.json	/^  "kanagawa.nvim": { "branch": "master", "commit": "e5f7b8a804360f0a48e40d0083a97193ee4fcc87" },$/;"	s	object:kanagawa.nvim
branch	nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "9d445ebbd89401544a538c6af080e4d2785abb49" },$/;"	s	object:lazy.nvim
branch	nvim/lazy-lock.json	/^  "lazygit.nvim": { "branch": "main", "commit": "dc56df433bfbf107fee0139e187eb9750878fa84" },$/;"	s	object:lazygit.nvim
branch	nvim/lazy-lock.json	/^  "log-highlight.nvim": { "branch": "main", "commit": "c18d1fd20c411f9fd9702d6d0d09edf3faa2bb96"/;"	s	object:log-highlight.nvim
branch	nvim/lazy-lock.json	/^  "lspkind.nvim": { "branch": "master", "commit": "1735dd5a5054c1fb7feaf8e8658dbab925f4f0cf" },$/;"	s	object:lspkind.nvim
branch	nvim/lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "544dd1583f9bb27b393f598475c89809c4d5e86b" },$/;"	s	object:lualine.nvim
branch	nvim/lazy-lock.json	/^  "lush.nvim": { "branch": "main", "commit": "1b66ab197b177aabc2270a2c9cb8019fa5a367df" },$/;"	s	object:lush.nvim
branch	nvim/lazy-lock.json	/^  "mason-lspconfig.nvim": { "branch": "main", "commit": "37a336b653f8594df75c827ed589f1c91d91ff6/;"	s	object:mason-lspconfig.nvim
branch	nvim/lazy-lock.json	/^  "mason.nvim": { "branch": "main", "commit": "f96a31855fa8aea55599cea412fe611b85a874ed" },$/;"	s	object:mason.nvim
branch	nvim/lazy-lock.json	/^  "mini.ai": { "branch": "main", "commit": "45587078f323eaf41b9f701bbc04f8d1ab008979" },$/;"	s	object:mini.ai
branch	nvim/lazy-lock.json	/^  "mini.bufremove": { "branch": "main", "commit": "e6044aa28e61d4dd9ec86194d6f81743eced0c1c" },$/;"	s	object:mini.bufremove
branch	nvim/lazy-lock.json	/^  "monokai.nvim": { "branch": "master", "commit": "b8bd44d5796503173627d7a1fc51f77ec3a08a63" },$/;"	s	object:monokai.nvim
branch	nvim/lazy-lock.json	/^  "multicursors.nvim": { "branch": "main", "commit": "782820896b1691ed664e4c24f1cd9793dcb33dfb" /;"	s	object:multicursors.nvim
branch	nvim/lazy-lock.json	/^  "neo-tree.nvim": { "branch": "v3.x", "commit": "29f7c215332ba95e470811c380ddbce2cebe2af4" },$/;"	s	object:neo-tree.nvim
branch	nvim/lazy-lock.json	/^  "neodev.nvim": { "branch": "main", "commit": "46aa467dca16cf3dfe27098042402066d2ae242d" },$/;"	s	object:neodev.nvim
branch	nvim/lazy-lock.json	/^  "neogen": { "branch": "main", "commit": "6de0add4805165317ab7d3d36b5cef48b1b865f3" },$/;"	s	object:neogen
branch	nvim/lazy-lock.json	/^  "neoscroll.nvim": { "branch": "master", "commit": "a7f5953dbfbe7069568f2d0ed23a9709a56725ab" }/;"	s	object:neoscroll.nvim
branch	nvim/lazy-lock.json	/^  "neovim": { "branch": "main", "commit": "9e4320d0bab7f261921d6af7d1c1bbc1a1e3dc67" },$/;"	s	object:neovim
branch	nvim/lazy-lock.json	/^  "noctis.nvim": { "branch": "main", "commit": "0b9336e39c686a7e58de06e4dd38c2bd862a7b33" },$/;"	s	object:noctis.nvim
branch	nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	s	object:nui.nvim
branch	nvim/lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "78a4507bb9ffc9b00f11ae0ac48243d00cb9194d" }/;"	s	object:nvim-autopairs
branch	nvim/lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "d818fd0624205b34e14888358037fb6f5dc51234" },$/;"	s	object:nvim-cmp
branch	nvim/lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "08bd34bf0ed79723f62764c7f9ca70516d461d0/;"	s	object:nvim-colorizer.lua
branch	nvim/lazy-lock.json	/^  "nvim-cursorline": { "branch": "main", "commit": "804f0023692653b2b2368462d67d2a87056947f9" },$/;"	s	object:nvim-cursorline
branch	nvim/lazy-lock.json	/^  "nvim-hlslens": { "branch": "main", "commit": "1db56afda3e85791a14b096e483dfda699dd9163" },$/;"	s	object:nvim-hlslens
branch	nvim/lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "216deb2d1b5fbf24398919228208649bbf5cbadf" }/;"	s	object:nvim-lspconfig
branch	nvim/lazy-lock.json	/^  "nvim-navic": { "branch": "master", "commit": "8649f694d3e76ee10c19255dece6411c29206a54" },$/;"	s	object:nvim-navic
branch	nvim/lazy-lock.json	/^  "nvim-notify": { "branch": "master", "commit": "d333b6f167900f6d9d42a59005d82919830626bf" },$/;"	s	object:nvim-notify
branch	nvim/lazy-lock.json	/^  "nvim-surround": { "branch": "main", "commit": "ec2dc7671067e0086cdf29c2f5df2dd909d5f71f" },$/;"	s	object:nvim-surround
branch	nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "a6b2f4ecc8a47011868632142a9b687d7e0f9aaf" /;"	s	object:nvim-treesitter
branch	nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "2aba92ceb1479485953007f4d5adf34d0b/;"	s	object:nvim-treesitter-context
branch	nvim/lazy-lock.json	/^  "nvim-treesitter-endwise": { "branch": "master", "commit": "8b34305ffc28bd75a22f5a0a9928ee726a/;"	s	object:nvim-treesitter-endwise
branch	nvim/lazy-lock.json	/^  "nvim-ts-autotag": { "branch": "main", "commit": "26c365cc7d58d0da17b13e747855d331eb26fcf0" },$/;"	s	object:nvim-ts-autotag
branch	nvim/lazy-lock.json	/^  "nvim-ts-context-commentstring": { "branch": "main", "commit": "6b5f95aa4d24f2c629a74f2c935c70/;"	s	object:nvim-ts-context-commentstring
branch	nvim/lazy-lock.json	/^  "nvim-ufo": { "branch": "main", "commit": "1b5f2838099f283857729e820cc05e2b19df7a2c" },$/;"	s	object:nvim-ufo
branch	nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "c0cfc1738361b5da1cd0a962dd6f774cc444f856/;"	s	object:nvim-web-devicons
branch	nvim/lazy-lock.json	/^  "oxocarbon.nvim": { "branch": "main", "commit": "c5846d10cbe4131cc5e32c6d00beaf59cb60f6a2" },$/;"	s	object:oxocarbon.nvim
branch	nvim/lazy-lock.json	/^  "persistence.nvim": { "branch": "main", "commit": "40a137dd9240c9c6760c53df48d2b155f52c252b" }/;"	s	object:persistence.nvim
branch	nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	s	object:plenary.nvim
branch	nvim/lazy-lock.json	/^  "pretty-fold.nvim": { "branch": "master", "commit": "a7d8b424abe0eedf50116c460fbe6dfd5783b1d5"/;"	s	object:pretty-fold.nvim
branch	nvim/lazy-lock.json	/^  "promise-async": { "branch": "main", "commit": "28c1d5a295eb5310afa2523d4ae9aa41ec5a9de2" },$/;"	s	object:promise-async
branch	nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "b29da4a6061a88270e875b38367d82c04c/;"	s	object:rainbow-delimiters.nvim
branch	nvim/lazy-lock.json	/^  "srcery-vim": { "branch": "master", "commit": "c7398b0b32009406cf3918a655c364c44d7ab99b" },$/;"	s	object:srcery-vim
branch	nvim/lazy-lock.json	/^  "synthweave.nvim": { "branch": "master", "commit": "50cb17af14dbdf8a2af634c40b9b20298f67aba0" /;"	s	object:synthweave.nvim
branch	nvim/lazy-lock.json	/^  "tabnine-nvim": { "branch": "master", "commit": "d6e22ec567d26460ea3ae8df2640c2c06b312b10" },$/;"	s	object:tabnine-nvim
branch	nvim/lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "a7ab9a957b17199183388c6f357d61/;"	s	object:telescope-file-browser.nvim
branch	nvim/lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "cf48d4dfce44e0b9a2e19a008d6ec6ea6f/;"	s	object:telescope-fzf-native.nvim
branch	nvim/lazy-lock.json	/^  "telescope-project.nvim": { "branch": "master", "commit": "1aaf16580a614601a7f7077d9639aeb457d/;"	s	object:telescope-project.nvim
branch	nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "bfcc7d5c6f12209139f175e6123a7b7de6d9c18a" }/;"	s	object:telescope.nvim
branch	nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "066cccf48a43553a80a210eb3be89a15d789d6e6" },$/;"	s	object:toggleterm.nvim
branch	nvim/lazy-lock.json	/^  "tokyonight.nvim": { "branch": "main", "commit": "6adfcde66e8af2f22dd5d76060980abd8daa0df8" },$/;"	s	object:tokyonight.nvim
branch	nvim/lazy-lock.json	/^  "tree-sitter-blade": { "branch": "main", "commit": "dead019eeabe612da7fb325caf72fdc7c744d19a" /;"	s	object:tree-sitter-blade
branch	nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "bf99ea71a39e322336b7f8be965f86dbf5c65540" },$/;"	s	object:trouble.nvim
branch	nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
branch	nvim/lazy-lock.json	/^  "vim-moonfly-colors": { "branch": "master", "commit": "31f65a1bbddd7de9a639d8d0e32b8066c0de1da/;"	s	object:vim-moonfly-colors
branch	nvim/lazy-lock.json	/^  "vim-sandwich": { "branch": "master", "commit": "74cf93d58ccc567d8e2310a69860f1b93af19403" }$/;"	s	object:vim-sandwich
branch	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string branch;$/;"	m	struct:gitstatus::Remote	typeref:typename:std::string
bufferline.nvim	nvim/lazy-lock.json	/^  "bufferline.nvim": { "branch": "main", "commit": "aa16dafdc642594c7ade7e88d31a6119feb189d6" },$/;"	o
build	zsh/powerlevel10k/gitstatus/mbuild	/^function build() ($/;"	f
build-unix	zsh/powerlevel10k/gitstatus/mbuild	/^function build-unix() {$/;"	f
build-windows	zsh/powerlevel10k/gitstatus/mbuild	/^function build-windows() {$/;"	f
c	zsh/alias.zsh	/^alias c="clear"$/;"	a
cStandard	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "cStandard": "c11",$/;"	s	object:configurations.0
cache_	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  Cache cache_;$/;"	m	class:gitstatus::RepoCache	typeref:typename:Cache
caps_	zsh/powerlevel10k/gitstatus/src/index.h	/^  RepoCaps caps_;$/;"	m	class:gitstatus::Index	typeref:typename:RepoCaps
case_sensitive	zsh/powerlevel10k/gitstatus/src/index.h	/^  bool case_sensitive;$/;"	m	struct:gitstatus::RepoCaps	typeref:typename:bool
case_sensitive	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  bool case_sensitive;$/;"	m	struct:gitstatus::Str	typeref:typename:bool
case_sensitive	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  bool case_sensitive;$/;"	m	struct:gitstatus::StrCmp	typeref:typename:bool
case_sensitive	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  static const bool case_sensitive = kCaseSensitive;$/;"	m	struct:gitstatus::Str	typeref:typename:const bool
case_sensitive	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^const bool Str<kCaseSensitive>::case_sensitive;$/;"	m	class:gitstatus::Str<kCaseSensitive>	typeref:typename:const bool
cat	zsh/alias.zsh	/^function cat()$/;"	f
catppuccin	nvim/lazy-lock.json	/^  "catppuccin": { "branch": "main", "commit": "7946d1a195c66fed38b3e34f9fa8e0c5a2da0700" },$/;"	o
cctype	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cctype": "cpp",$/;"	s	object:files.associations
change-the-color-palette-used-by-your-terminal	zsh/powerlevel10k/README.md	/^  #change-the-color-palette-used-by-your-terminal) or$/;"	h	subsection:Powerlevel10k""FAQ""How do I change prompt colors?
change_zshrc	zsh/powerlevel10k/internal/wizard.zsh	/^function change_zshrc() {$/;"	f
charconv	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "charconv": "cpp",$/;"	s	object:files.associations
check_sha256	zsh/powerlevel10k/gitstatus/install	/^      check_sha256() {$/;"	f
check_zshrc_integration	zsh/powerlevel10k/internal/wizard.zsh	/^function check_zshrc_integration() {$/;"	f
chrono	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "chrono": "cpp",$/;"	s	object:files.associations
cinttypes	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cinttypes": "cpp",$/;"	s	object:files.associations
clean	zsh/powerlevel10k/gitstatus/Makefile	/^clean:$/;"	t
cleanup	zsh/powerlevel10k/gitstatus/build	/^cleanup() {$/;"	f
clear	zsh/powerlevel10k/internal/wizard.zsh	/^function clear() {$/;"	f
clocale	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "clocale": "cpp",$/;"	s	object:files.associations
close_command	nvim/lua/configs/bufferline.lua	/^		close_command = "bdelete! %d", -- can be a string | function, see "Mouse actions"$/;"	f
cmath	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cmath": "cpp",$/;"	s	object:files.associations
cmp-buffer	nvim/lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	o
cmp-cmdline	nvim/lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	o
cmp-nvim-lsp	nvim/lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	o
cmp-path	nvim/lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	o
cmp_luasnip	nvim/lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "05a9ab28b53f71d1aece421ef32fee2cb857a843" },$/;"	o
commit	nvim/lazy-lock.json	/^  "Comment.nvim": { "branch": "master", "commit": "e30b7f2008e52442154b66f7c519bfd2f1e32acb" },$/;"	s	object:Comment.nvim
commit	nvim/lazy-lock.json	/^  "LuaSnip": { "branch": "master", "commit": "ce0a05ab4e2839e1c48d072c5236cce846a387bc" },$/;"	s	object:LuaSnip
commit	nvim/lazy-lock.json	/^  "align.nvim": { "branch": "master", "commit": "12ed24b34df81d57e777fea5a535611bab10a620" },$/;"	s	object:align.nvim
commit	nvim/lazy-lock.json	/^  "auto-save.nvim": { "branch": "main", "commit": "979b6c82f60cfa80f4cf437d77446d0ded0addf0" },$/;"	s	object:auto-save.nvim
commit	nvim/lazy-lock.json	/^  "better-escape.nvim": { "branch": "master", "commit": "62015330fc831306f5229f24b2db981d07f816c/;"	s	object:better-escape.nvim
commit	nvim/lazy-lock.json	/^  "bufferline.nvim": { "branch": "main", "commit": "aa16dafdc642594c7ade7e88d31a6119feb189d6" },$/;"	s	object:bufferline.nvim
commit	nvim/lazy-lock.json	/^  "catppuccin": { "branch": "main", "commit": "7946d1a195c66fed38b3e34f9fa8e0c5a2da0700" },$/;"	s	object:catppuccin
commit	nvim/lazy-lock.json	/^  "cmp-buffer": { "branch": "main", "commit": "3022dbc9166796b644a841a02de8dd1cc1d311fa" },$/;"	s	object:cmp-buffer
commit	nvim/lazy-lock.json	/^  "cmp-cmdline": { "branch": "main", "commit": "d250c63aa13ead745e3a40f61fdd3470efde3923" },$/;"	s	object:cmp-cmdline
commit	nvim/lazy-lock.json	/^  "cmp-nvim-lsp": { "branch": "main", "commit": "39e2eda76828d88b773cc27a3f61d2ad782c922d" },$/;"	s	object:cmp-nvim-lsp
commit	nvim/lazy-lock.json	/^  "cmp-path": { "branch": "main", "commit": "91ff86cd9c29299a64f968ebb45846c485725f23" },$/;"	s	object:cmp-path
commit	nvim/lazy-lock.json	/^  "cmp_luasnip": { "branch": "master", "commit": "05a9ab28b53f71d1aece421ef32fee2cb857a843" },$/;"	s	object:cmp_luasnip
commit	nvim/lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "1d1362b0261d06a0b91872e916c172320bbb988a" },$/;"	s	object:conform.nvim
commit	nvim/lazy-lock.json	/^  "cyberdream.nvim": { "branch": "main", "commit": "d96290af1c2cffcfdadb266144097e5496d08fd3" },$/;"	s	object:cyberdream.nvim
commit	nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	s	object:diffview.nvim
commit	nvim/lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "6741f1062d3dc6e4755367a7e9b347b553623f04" },$/;"	s	object:dressing.nvim
commit	nvim/lazy-lock.json	/^  "edge": { "branch": "master", "commit": "2de1aede94569f643de438391f6c8b1712038d35" },$/;"	s	object:edge
commit	nvim/lazy-lock.json	/^  "fidget.nvim": { "branch": "main", "commit": "0ba1e16d07627532b6cae915cc992ecac249fb97" },$/;"	s	object:fidget.nvim
commit	nvim/lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "00ebcaa159e817150bd83bfe2d51fa3b3377d5c4" /;"	s	object:friendly-snippets
commit	nvim/lazy-lock.json	/^  "garbage-day.nvim": { "branch": "main", "commit": "4a1160bfffb2f499fb55a54333f29d160ab3c8a1" }/;"	s	object:garbage-day.nvim
commit	nvim/lazy-lock.json	/^  "gentags.nvim": { "branch": "main", "commit": "e0ade1274fe8a94e993e7142dc19b5ddcc9ca38b" },$/;"	s	object:gentags.nvim
commit	nvim/lazy-lock.json	/^  "git-blame.nvim": { "branch": "master", "commit": "408d5487d908dfe5d48e5645d8b27ddcc16b11e0" }/;"	s	object:git-blame.nvim
commit	nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "2a7b39f4d282935f8b44cbe82879af69c7472f5c" },$/;"	s	object:gitsigns.nvim
commit	nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	s	object:gruvbox.nvim
commit	nvim/lazy-lock.json	/^  "hardtime.nvim": { "branch": "main", "commit": "9a4e24fb40482dc85a93bf6cf344a030b9bf9a39" },$/;"	s	object:hardtime.nvim
commit	nvim/lazy-lock.json	/^  "harpoon": { "branch": "harpoon2", "commit": "0378a6c428a0bed6a2781d459d7943843f374bce" },$/;"	s	object:harpoon
commit	nvim/lazy-lock.json	/^  "hlargs.nvim": { "branch": "main", "commit": "cc0d9ee75e5ffba730393049119361b9e3a5b1b6" },$/;"	s	object:hlargs.nvim
commit	nvim/lazy-lock.json	/^  "horizon.nvim": { "branch": "main", "commit": "414f887f9171e842196d595d25f7d1f020e61208" },$/;"	s	object:horizon.nvim
commit	nvim/lazy-lock.json	/^  "hydra.nvim": { "branch": "master", "commit": "55de54543d673824435930ecf533256eea2e565b" },$/;"	s	object:hydra.nvim
commit	nvim/lazy-lock.json	/^  "incline.nvim": { "branch": "main", "commit": "16fc9c073e3ea4175b66ad94375df6d73fc114c0" },$/;"	s	object:incline.nvim
commit	nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "65e20ab94a26d0e14acac5049b8641336819/;"	s	object:indent-blankline.nvim
commit	nvim/lazy-lock.json	/^  "kanagawa.nvim": { "branch": "master", "commit": "e5f7b8a804360f0a48e40d0083a97193ee4fcc87" },$/;"	s	object:kanagawa.nvim
commit	nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "9d445ebbd89401544a538c6af080e4d2785abb49" },$/;"	s	object:lazy.nvim
commit	nvim/lazy-lock.json	/^  "lazygit.nvim": { "branch": "main", "commit": "dc56df433bfbf107fee0139e187eb9750878fa84" },$/;"	s	object:lazygit.nvim
commit	nvim/lazy-lock.json	/^  "log-highlight.nvim": { "branch": "main", "commit": "c18d1fd20c411f9fd9702d6d0d09edf3faa2bb96"/;"	s	object:log-highlight.nvim
commit	nvim/lazy-lock.json	/^  "lspkind.nvim": { "branch": "master", "commit": "1735dd5a5054c1fb7feaf8e8658dbab925f4f0cf" },$/;"	s	object:lspkind.nvim
commit	nvim/lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "544dd1583f9bb27b393f598475c89809c4d5e86b" },$/;"	s	object:lualine.nvim
commit	nvim/lazy-lock.json	/^  "lush.nvim": { "branch": "main", "commit": "1b66ab197b177aabc2270a2c9cb8019fa5a367df" },$/;"	s	object:lush.nvim
commit	nvim/lazy-lock.json	/^  "mason-lspconfig.nvim": { "branch": "main", "commit": "37a336b653f8594df75c827ed589f1c91d91ff6/;"	s	object:mason-lspconfig.nvim
commit	nvim/lazy-lock.json	/^  "mason.nvim": { "branch": "main", "commit": "f96a31855fa8aea55599cea412fe611b85a874ed" },$/;"	s	object:mason.nvim
commit	nvim/lazy-lock.json	/^  "mini.ai": { "branch": "main", "commit": "45587078f323eaf41b9f701bbc04f8d1ab008979" },$/;"	s	object:mini.ai
commit	nvim/lazy-lock.json	/^  "mini.bufremove": { "branch": "main", "commit": "e6044aa28e61d4dd9ec86194d6f81743eced0c1c" },$/;"	s	object:mini.bufremove
commit	nvim/lazy-lock.json	/^  "monokai.nvim": { "branch": "master", "commit": "b8bd44d5796503173627d7a1fc51f77ec3a08a63" },$/;"	s	object:monokai.nvim
commit	nvim/lazy-lock.json	/^  "multicursors.nvim": { "branch": "main", "commit": "782820896b1691ed664e4c24f1cd9793dcb33dfb" /;"	s	object:multicursors.nvim
commit	nvim/lazy-lock.json	/^  "neo-tree.nvim": { "branch": "v3.x", "commit": "29f7c215332ba95e470811c380ddbce2cebe2af4" },$/;"	s	object:neo-tree.nvim
commit	nvim/lazy-lock.json	/^  "neodev.nvim": { "branch": "main", "commit": "46aa467dca16cf3dfe27098042402066d2ae242d" },$/;"	s	object:neodev.nvim
commit	nvim/lazy-lock.json	/^  "neogen": { "branch": "main", "commit": "6de0add4805165317ab7d3d36b5cef48b1b865f3" },$/;"	s	object:neogen
commit	nvim/lazy-lock.json	/^  "neoscroll.nvim": { "branch": "master", "commit": "a7f5953dbfbe7069568f2d0ed23a9709a56725ab" }/;"	s	object:neoscroll.nvim
commit	nvim/lazy-lock.json	/^  "neovim": { "branch": "main", "commit": "9e4320d0bab7f261921d6af7d1c1bbc1a1e3dc67" },$/;"	s	object:neovim
commit	nvim/lazy-lock.json	/^  "noctis.nvim": { "branch": "main", "commit": "0b9336e39c686a7e58de06e4dd38c2bd862a7b33" },$/;"	s	object:noctis.nvim
commit	nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	s	object:nui.nvim
commit	nvim/lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "78a4507bb9ffc9b00f11ae0ac48243d00cb9194d" }/;"	s	object:nvim-autopairs
commit	nvim/lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "d818fd0624205b34e14888358037fb6f5dc51234" },$/;"	s	object:nvim-cmp
commit	nvim/lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "08bd34bf0ed79723f62764c7f9ca70516d461d0/;"	s	object:nvim-colorizer.lua
commit	nvim/lazy-lock.json	/^  "nvim-cursorline": { "branch": "main", "commit": "804f0023692653b2b2368462d67d2a87056947f9" },$/;"	s	object:nvim-cursorline
commit	nvim/lazy-lock.json	/^  "nvim-hlslens": { "branch": "main", "commit": "1db56afda3e85791a14b096e483dfda699dd9163" },$/;"	s	object:nvim-hlslens
commit	nvim/lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "216deb2d1b5fbf24398919228208649bbf5cbadf" }/;"	s	object:nvim-lspconfig
commit	nvim/lazy-lock.json	/^  "nvim-navic": { "branch": "master", "commit": "8649f694d3e76ee10c19255dece6411c29206a54" },$/;"	s	object:nvim-navic
commit	nvim/lazy-lock.json	/^  "nvim-notify": { "branch": "master", "commit": "d333b6f167900f6d9d42a59005d82919830626bf" },$/;"	s	object:nvim-notify
commit	nvim/lazy-lock.json	/^  "nvim-surround": { "branch": "main", "commit": "ec2dc7671067e0086cdf29c2f5df2dd909d5f71f" },$/;"	s	object:nvim-surround
commit	nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "a6b2f4ecc8a47011868632142a9b687d7e0f9aaf" /;"	s	object:nvim-treesitter
commit	nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "2aba92ceb1479485953007f4d5adf34d0b/;"	s	object:nvim-treesitter-context
commit	nvim/lazy-lock.json	/^  "nvim-treesitter-endwise": { "branch": "master", "commit": "8b34305ffc28bd75a22f5a0a9928ee726a/;"	s	object:nvim-treesitter-endwise
commit	nvim/lazy-lock.json	/^  "nvim-ts-autotag": { "branch": "main", "commit": "26c365cc7d58d0da17b13e747855d331eb26fcf0" },$/;"	s	object:nvim-ts-autotag
commit	nvim/lazy-lock.json	/^  "nvim-ts-context-commentstring": { "branch": "main", "commit": "6b5f95aa4d24f2c629a74f2c935c70/;"	s	object:nvim-ts-context-commentstring
commit	nvim/lazy-lock.json	/^  "nvim-ufo": { "branch": "main", "commit": "1b5f2838099f283857729e820cc05e2b19df7a2c" },$/;"	s	object:nvim-ufo
commit	nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "c0cfc1738361b5da1cd0a962dd6f774cc444f856/;"	s	object:nvim-web-devicons
commit	nvim/lazy-lock.json	/^  "oxocarbon.nvim": { "branch": "main", "commit": "c5846d10cbe4131cc5e32c6d00beaf59cb60f6a2" },$/;"	s	object:oxocarbon.nvim
commit	nvim/lazy-lock.json	/^  "persistence.nvim": { "branch": "main", "commit": "40a137dd9240c9c6760c53df48d2b155f52c252b" }/;"	s	object:persistence.nvim
commit	nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	s	object:plenary.nvim
commit	nvim/lazy-lock.json	/^  "pretty-fold.nvim": { "branch": "master", "commit": "a7d8b424abe0eedf50116c460fbe6dfd5783b1d5"/;"	s	object:pretty-fold.nvim
commit	nvim/lazy-lock.json	/^  "promise-async": { "branch": "main", "commit": "28c1d5a295eb5310afa2523d4ae9aa41ec5a9de2" },$/;"	s	object:promise-async
commit	nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "b29da4a6061a88270e875b38367d82c04c/;"	s	object:rainbow-delimiters.nvim
commit	nvim/lazy-lock.json	/^  "srcery-vim": { "branch": "master", "commit": "c7398b0b32009406cf3918a655c364c44d7ab99b" },$/;"	s	object:srcery-vim
commit	nvim/lazy-lock.json	/^  "synthweave.nvim": { "branch": "master", "commit": "50cb17af14dbdf8a2af634c40b9b20298f67aba0" /;"	s	object:synthweave.nvim
commit	nvim/lazy-lock.json	/^  "tabnine-nvim": { "branch": "master", "commit": "d6e22ec567d26460ea3ae8df2640c2c06b312b10" },$/;"	s	object:tabnine-nvim
commit	nvim/lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "a7ab9a957b17199183388c6f357d61/;"	s	object:telescope-file-browser.nvim
commit	nvim/lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "cf48d4dfce44e0b9a2e19a008d6ec6ea6f/;"	s	object:telescope-fzf-native.nvim
commit	nvim/lazy-lock.json	/^  "telescope-project.nvim": { "branch": "master", "commit": "1aaf16580a614601a7f7077d9639aeb457d/;"	s	object:telescope-project.nvim
commit	nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "bfcc7d5c6f12209139f175e6123a7b7de6d9c18a" }/;"	s	object:telescope.nvim
commit	nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "066cccf48a43553a80a210eb3be89a15d789d6e6" },$/;"	s	object:toggleterm.nvim
commit	nvim/lazy-lock.json	/^  "tokyonight.nvim": { "branch": "main", "commit": "6adfcde66e8af2f22dd5d76060980abd8daa0df8" },$/;"	s	object:tokyonight.nvim
commit	nvim/lazy-lock.json	/^  "tree-sitter-blade": { "branch": "main", "commit": "dead019eeabe612da7fb325caf72fdc7c744d19a" /;"	s	object:tree-sitter-blade
commit	nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "bf99ea71a39e322336b7f8be965f86dbf5c65540" },$/;"	s	object:trouble.nvim
commit	nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	s	object:vim-gutentags
commit	nvim/lazy-lock.json	/^  "vim-moonfly-colors": { "branch": "master", "commit": "31f65a1bbddd7de9a639d8d0e32b8066c0de1da/;"	s	object:vim-moonfly-colors
commit	nvim/lazy-lock.json	/^  "vim-sandwich": { "branch": "master", "commit": "74cf93d58ccc567d8e2310a69860f1b93af19403" }$/;"	s	object:vim-sandwich
common	zsh/z.sh	/^            function common(matches) {$/;"	f
compilerPath	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "compilerPath": "\/usr\/bin\/g++",$/;"	s	object:configurations.0
complex	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "complex": "cpp",$/;"	s	object:files.associations
condition_variable	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "condition_variable": "cpp",$/;"	s	object:files.associations
config	nvim/lua/plugins.lua	/^    config = function()$/;"	f
config	nvim/lua/plugins.lua	/^    config = function(_, opts)$/;"	f
configurations	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^    "configurations": [$/;"	a
conflicted_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> conflicted_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
conform.nvim	nvim/lazy-lock.json	/^  "conform.nvim": { "branch": "master", "commit": "1d1362b0261d06a0b91872e916c172320bbb988a" },$/;"	o
const_pointer	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using const_pointer = const T*;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:const T *
const_reference	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using const_reference = const T&;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:const T &
construct	zsh/powerlevel10k/gitstatus/src/arena.h	/^  void construct(U* p, Args&&... args) {$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:void
consume_input	zsh/powerlevel10k/internal/wizard.zsh	/^function consume_input() {$/;"	f
core	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "core": true,$/;"	b	object:files.exclude
cppStandard	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "cppStandard": "c++17",$/;"	s	object:configurations.0
cpu_	zsh/powerlevel10k/gitstatus/src/timer.h	/^  double cpu_;$/;"	m	class:gitstatus::Timer	typeref:typename:double
cstdarg	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstdarg": "cpp",$/;"	s	object:files.associations
cstddef	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstddef": "cpp",$/;"	s	object:files.associations
cstdint	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstdint": "cpp",$/;"	s	object:files.associations
cstdio	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstdio": "cpp",$/;"	s	object:files.associations
cstdlib	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstdlib": "cpp",$/;"	s	object:files.associations
cstring	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cstring": "cpp",$/;"	s	object:files.associations
ctime	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "ctime": "cpp",$/;"	s	object:files.associations
cv_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::condition_variable cv_;$/;"	m	class:gitstatus::Repo	typeref:typename:std::condition_variable
cv_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  std::condition_variable cv_;$/;"	m	class:gitstatus::TagDb	typeref:typename:std::condition_variable
cv_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::condition_variable cv_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::condition_variable
cwchar	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cwchar": "cpp",$/;"	s	object:files.associations
cwctype	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "cwctype": "cpp",$/;"	s	object:files.associations
cyberdream.nvim	nvim/lazy-lock.json	/^  "cyberdream.nvim": { "branch": "main", "commit": "d96290af1c2cffcfdadb266144097e5496d08fd3" },$/;"	o
d_ino	zsh/powerlevel10k/gitstatus/src/dir.cc	/^    ino64_t d_ino;$/;"	m	struct:gitstatus::ListDir::linux_dirent64	typeref:typename:ino64_t	file:
d_name	zsh/powerlevel10k/gitstatus/src/dir.cc	/^    char d_name[];$/;"	m	struct:gitstatus::ListDir::linux_dirent64	typeref:typename:char[]	file:
d_off	zsh/powerlevel10k/gitstatus/src/dir.cc	/^    off64_t d_off;$/;"	m	struct:gitstatus::ListDir::linux_dirent64	typeref:typename:off64_t	file:
d_reclen	zsh/powerlevel10k/gitstatus/src/dir.cc	/^    unsigned short d_reclen;$/;"	m	struct:gitstatus::ListDir::linux_dirent64	typeref:typename:unsigned short	file:
d_type	zsh/powerlevel10k/gitstatus/src/dir.cc	/^    unsigned char d_type;$/;"	m	struct:gitstatus::ListDir::linux_dirent64	typeref:typename:unsigned char	file:
deallocate	zsh/powerlevel10k/gitstatus/src/arena.h	/^  void deallocate(T* p, std::size_t n) {}$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:void
defines	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "defines": [$/;"	a	object:configurations.0
depth	zsh/powerlevel10k/gitstatus/src/index.h	/^  size_t depth = 0;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:size_t
deque	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "deque": "cpp",$/;"	s	object:files.associations
destroy	zsh/powerlevel10k/gitstatus/src/arena.h	/^  void destroy(U* p) {$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:void
dev	zsh/alias.zsh	/^function dev()$/;"	f
diff	zsh/powerlevel10k/gitstatus/src/request.h	/^  bool diff = true;$/;"	m	struct:gitstatus::Request	typeref:typename:bool
difference_type	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using difference_type = ptrdiff_t;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:ptrdiff_t
diffview.nvim	nvim/lazy-lock.json	/^  "diffview.nvim": { "branch": "main", "commit": "4516612fe98ff56ae0415a259ff6361a89419b0a" },$/;"	o
dir	zsh/powerlevel10k/gitstatus/src/request.h	/^  std::string dir;$/;"	m	struct:gitstatus::Request	typeref:typename:std::string
directory-is-difficult-to-see-in-prompt-when-using-rainbow-style	zsh/powerlevel10k/README.md	/^  #directory-is-difficult-to-see-in-prompt-when-using-rainbow-style)$/;"	h	subsection:Powerlevel10k""Features""Current directory that just works
dirs_	zsh/powerlevel10k/gitstatus/src/index.h	/^  WithArena<std::vector<IndexDir*>> dirs_;$/;"	m	class:gitstatus::Index	typeref:typename:WithArena<std::vector<IndexDir * >>
dirty_max_index_size	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t dirty_max_index_size = -1;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-config	zsh/powerlevel10k/README.md	/^  #does-powerlevel10k-always-render-exactly-the-same-prompt-as-powerlevel9k-given-the-same-confi/;"	h	subsection:Powerlevel10k""Features""Powerlevel9k compatibility
done_	zsh/powerlevel10k/gitstatus/src/response.h	/^  bool done_ = false;$/;"	m	class:gitstatus::ResponseWriter	typeref:typename:bool
dressing.nvim	nvim/lazy-lock.json	/^  "dressing.nvim": { "branch": "master", "commit": "6741f1062d3dc6e4755367a7e9b347b553623f04" },$/;"	o
edge	nvim/lazy-lock.json	/^  "edge": { "branch": "master", "commit": "2de1aede94569f643de438391f6c8b1712038d35" },$/;"	o
enabled	nvim/lua/configs/cmp.lua	/^	enabled = function()$/;"	f
encoding	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string encoding;$/;"	m	struct:gitstatus::CommitMessage	typeref:typename:std::string
end	zsh/powerlevel10k/gitstatus/src/arena.h	/^    uintptr_t end;$/;"	m	struct:gitstatus::Arena::Block	typeref:typename:uintptr_t
end_i	zsh/powerlevel10k/gitstatus/src/repo.h	/^    size_t end_i;$/;"	m	struct:gitstatus::Repo::Shard	typeref:typename:size_t
end_s	zsh/powerlevel10k/gitstatus/src/repo.h	/^    std::string end_s;$/;"	m	struct:gitstatus::Repo::Shard	typeref:typename:std::string
ensure_config_dir_exists	install_programs.sh	/^ensure_config_dir_exists() {$/;"	f
err	zsh/powerlevel10k/gitstatus/src/logging.h	/^  int err;$/;"	m	struct:gitstatus::internal_logging::Errno	typeref:typename:int
errno_	zsh/powerlevel10k/gitstatus/src/logging.h	/^  int errno_;$/;"	m	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:int
error_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<bool> error_{false};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<bool>
exception	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "exception": "cpp",$/;"	s	object:files.associations
exit_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  bool exit_ = false;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:bool
expand	nvim/lua/configs/cmp.lua	/^		expand = function(args)$/;"	f
extra-or-missing-spaces-in-prompt-compared-to-powerlevel9k	zsh/powerlevel10k/README.md	/^  #extra-or-missing-spaces-in-prompt-compared-to-powerlevel9k).$/;"	h	subsection:Powerlevel10k""Configuration""For Powerlevel9k users
f	nvim/lua/plugins.lua	/^          f = ai.gen_spec.treesitter({ a = "@function.outer", i = "@function.inner" }, {}),$/;"	f
f	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^    mutable std::function<void()> f;$/;"	m	struct:gitstatus::ThreadPool::Work	typeref:typename:std::function<void ()>
f_	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^  F f_;$/;"	m	class:gitstatus::internal_scope_guard::ScopeGuard	typeref:typename:F
fd_	zsh/powerlevel10k/gitstatus/src/request.h	/^  int fd_;$/;"	m	class:gitstatus::RequestReader	typeref:typename:int
fetch	zsh/powerlevel10k/gitstatus/install	/^      fetch() {$/;"	f
fidget.nvim	nvim/lazy-lock.json	/^  "fidget.nvim": { "branch": "main", "commit": "0ba1e16d07627532b6cae915cc992ecac249fb97" },$/;"	o
file_	zsh/powerlevel10k/gitstatus/src/logging.h	/^  const char* file_;$/;"	m	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:const char *
files	zsh/powerlevel10k/gitstatus/src/index.h	/^  WithArena<std::vector<const git_index_entry*>> files;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:WithArena<std::vector<const git_index_entry * >>
files.associations	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^  "files.associations": {$/;"	o
files.exclude	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^  "files.exclude": {$/;"	o
filesize_hook	nvim/lua/configs/telescope.lua	/^			filesize_hook = function(filepath, bufnr, opts)$/;"	f
flock	zsh/powerlevel10k/gitstatus/mbuild	/^  function flock() {$/;"	f
flowing	zsh/powerlevel10k/internal/wizard.zsh	/^function flowing() {$/;"	f
fold_virt_text_handler	nvim/lua/configs/lsp.lua	/^  fold_virt_text_handler = function(virtText, lnum, endLnum, width, truncate)$/;"	f
frecent	zsh/z.sh	/^            function frecent(rank, time) {$/;"	f
friendly-snippets	nvim/lazy-lock.json	/^  "friendly-snippets": { "branch": "main", "commit": "00ebcaa159e817150bd83bfe2d51fa3b3377d5c4" /;"	o
from_dotgit	zsh/powerlevel10k/gitstatus/src/request.h	/^  bool from_dotgit = false;$/;"	m	struct:gitstatus::Request	typeref:typename:bool
fstream	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "fstream": "cpp",$/;"	s	object:files.associations
fsuf	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^        function _gitstatus_cleanup_$name-$fsuf() {$/;"	f
fsuf	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^        function _gitstatus_process_response_$name-$fsuf() {$/;"	f
fsuf	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^      function _gitstatus_set_daemon$fsuf() {$/;"	f
functional	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "functional": "cpp",$/;"	s	object:files.associations
future	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "future": "cpp",$/;"	s	object:files.associations
g_empty_block	zsh/powerlevel10k/gitstatus/src/arena.cc	/^Arena::Block Arena::g_empty_block = {kSingularity, kSingularity, kSingularity};$/;"	m	class:gitstatus::Arena	typeref:typename:Arena::Block
g_empty_block	zsh/powerlevel10k/gitstatus/src/arena.h	/^  static Block g_empty_block;$/;"	m	class:gitstatus::Arena	typeref:typename:Block
g_log_mutex	zsh/powerlevel10k/gitstatus/src/logging.cc	/^std::mutex g_log_mutex;$/;"	v	namespace:gitstatus::internal_logging::__anon10351f120111	typeref:typename:std::mutex
g_min_log_level	zsh/powerlevel10k/gitstatus/src/logging.cc	/^LogLevel g_min_log_level = INFO;$/;"	v	namespace:gitstatus	typeref:typename:LogLevel
g_thread_pool	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^static ThreadPool* g_thread_pool = nullptr;$/;"	v	namespace:gitstatus	typeref:typename:ThreadPool *	file:
garbage-day.nvim	nvim/lazy-lock.json	/^  "garbage-day.nvim": { "branch": "main", "commit": "4a1160bfffb2f499fb55a54333f29d160ab3c8a1" }/;"	o
generate_config	zsh/powerlevel10k/internal/wizard.zsh	/^function generate_config() {$/;"	f
gentags.nvim	nvim/lazy-lock.json	/^  "gentags.nvim": { "branch": "main", "commit": "e0ade1274fe8a94e993e7142dc19b5ddcc9ca38b" },$/;"	o
getColorCode	zsh/powerlevel10k/internal/p10k.zsh	/^function getColorCode() {$/;"	f
get_columns	zsh/powerlevel10k/internal/wizard.zsh	/^        while (( get_columns() == wizard_columns && LINES == wizard_lines )); do$/;"	f
get_columns	zsh/powerlevel10k/internal/wizard.zsh	/^      while (( get_columns() == wizard_columns && LINES == wizard_lines )); do$/;"	f
get_columns	zsh/powerlevel10k/internal/wizard.zsh	/^    if (( LINES != lines || get_columns() != columns )); then$/;"	f
get_columns	zsh/powerlevel10k/internal/wizard.zsh	/^function get_columns() { return 'COLUMNS > 88 ? 88 : COLUMNS' }$/;"	f
get_icon_names	zsh/powerlevel10k/internal/icons.zsh	/^function get_icon_names() {$/;"	f
get_latest_github_release	install_programs.sh	/^get_latest_github_release() {$/;"	f
get_latest_node_version	install_programs.sh	/^get_latest_node_version() {$/;"	f
get_latest_nvm_version	install_programs.sh	/^get_latest_nvm_version() {$/;"	f
get_latest_rust_version	install_programs.sh	/^get_latest_rust_version() {$/;"	f
get_latest_website_version	install_programs.sh	/^get_latest_website_version() {$/;"	f
git-blame.nvim	nvim/lazy-lock.json	/^  "git-blame.nvim": { "branch": "master", "commit": "408d5487d908dfe5d48e5645d8b27ddcc16b11e0" }/;"	o
git_index_	zsh/powerlevel10k/gitstatus/src/index.h	/^  git_index* git_index_;$/;"	m	class:gitstatus::Index	typeref:typename:git_index *
git_index_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  git_index* git_index_ = nullptr;$/;"	m	class:gitstatus::Repo	typeref:typename:git_index *
gitsigns.nvim	nvim/lazy-lock.json	/^  "gitsigns.nvim": { "branch": "main", "commit": "2a7b39f4d282935f8b44cbe82879af69c7472f5c" },$/;"	o
gitstatus	zsh/powerlevel10k/gitstatus/README.md	/^# gitstatus$/;"	c
gitstatus	zsh/powerlevel10k/gitstatus/src/algorithm.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/arena.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/arena.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/bits.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/check.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/dir.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/dir.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/git.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/git.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/index.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/index.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/logging.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/logging.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/options.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/options.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/print.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/repo.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/repo.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/repo_cache.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/request.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/request.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/response.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/response.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/serialization.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/stat.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/string_view.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/strings.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/strings.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/time.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/timer.cc	/^namespace gitstatus {$/;"	n	file:
gitstatus	zsh/powerlevel10k/gitstatus/src/timer.h	/^namespace gitstatus {$/;"	n
gitstatus	zsh/powerlevel10k/gitstatus/src/tribool.h	/^namespace gitstatus {$/;"	n
gitstatus_check	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^function gitstatus_check() {$/;"	f
gitstatus_check	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function gitstatus_check"${1:-}"() {$/;"	f
gitstatus_process_results	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function gitstatus_process_results"${1:-}"() {$/;"	f
gitstatus_prompt_update	zsh/powerlevel10k/gitstatus/gitstatus.prompt.sh	/^function gitstatus_prompt_update() {$/;"	f
gitstatus_prompt_update	zsh/powerlevel10k/gitstatus/gitstatus.prompt.zsh	/^function gitstatus_prompt_update() {$/;"	f
gitstatus_query	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^function gitstatus_query() {$/;"	f
gitstatus_query	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function gitstatus_query"${1:-}"() {$/;"	f
gitstatus_start	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^function gitstatus_start() {$/;"	f
gitstatus_start	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function gitstatus_start"${1:-}"() {$/;"	f
gitstatus_start_impl	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^  function gitstatus_start_impl() {$/;"	f
gitstatus_stop	zsh/powerlevel10k/gitstatus/gitstatus.plugin.sh	/^function gitstatus_stop() {$/;"	f
gitstatus_stop	zsh/powerlevel10k/gitstatus/gitstatus.plugin.zsh	/^function gitstatus_stop"${1:-}"() {$/;"	f
gruvbox.nvim	nvim/lazy-lock.json	/^  "gruvbox.nvim": { "branch": "main", "commit": "7a1b23e4edf73a39642e77508ee6b9cbb8c60f9e" },$/;"	o
gz	zsh/alias.zsh	/^alias gz="gzip"$/;"	a
hardtime.nvim	nvim/lazy-lock.json	/^  "hardtime.nvim": { "branch": "main", "commit": "9a4e24fb40482dc85a93bf6cf344a030b9bf9a39" },$/;"	o
harpoon	nvim/lazy-lock.json	/^  "harpoon": { "branch": "harpoon2", "commit": "0378a6c428a0bed6a2781d459d7943843f374bce" },$/;"	o
has_symlinks	zsh/powerlevel10k/gitstatus/src/index.h	/^  bool has_symlinks;$/;"	m	struct:gitstatus::RepoCaps	typeref:typename:bool
has_words_before	nvim/lua/configs/cmp.lua	/^local has_words_before = function()$/;"	f
have_sleeper_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  bool have_sleeper_ = false;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:bool
head_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  git_oid head_ = {};$/;"	m	class:gitstatus::Repo	typeref:typename:git_oid
help	zsh/powerlevel10k/gitstatus/Makefile	/^help:$/;"	t
hide_cursor	zsh/powerlevel10k/internal/wizard.zsh	/^function hide_cursor() {$/;"	f
hlargs.nvim	nvim/lazy-lock.json	/^  "hlargs.nvim": { "branch": "main", "commit": "cc0d9ee75e5ffba730393049119361b9e3a5b1b6" },$/;"	o
horizon.nvim	nvim/lazy-lock.json	/^  "horizon.nvim": { "branch": "main", "commit": "414f887f9171e842196d595d25f7d1f020e61208" },$/;"	o
how-do-i-export-gpg_tty-when-using-instant-prompt	zsh/powerlevel10k/README.md	/^  #how-do-i-export-gpg_tty-when-using-instant-prompt)$/;"	h	subsection:Powerlevel10k""FAQ""How do I initialize direnv when using instant prompt?
how-do-i-initialize-direnv-when-using-instant-prompt	zsh/powerlevel10k/README.md	/^  #how-do-i-initialize-direnv-when-using-instant-prompt)$/;"	h	subsection:Powerlevel10k""FAQ""How do I export GPG_TTY when using instant prompt?
how-to-make-powerlevel10k-look-like-robbyrussell-oh-my-zsh-theme	zsh/powerlevel10k/README.md	/^  #how-to-make-powerlevel10k-look-like-robbyrussell-oh-my-zsh-theme) emulations are built-in.$/;"	h	subsection:Powerlevel10k""Features""Extremely customizable
href	zsh/powerlevel10k/internal/wizard.zsh	/^function href() {$/;"	f
hydra.nvim	nvim/lazy-lock.json	/^  "hydra.nvim": { "branch": "master", "commit": "55de54543d673824435930ecf533256eea2e565b" },$/;"	o
icons-glyphs-or-powerline-symbols-dont-render	zsh/powerlevel10k/README.md	/^  #icons-glyphs-or-powerline-symbols-dont-render).$/;"	h	subsection:Powerlevel10k""Troubleshooting""Question mark in prompt
id	zsh/powerlevel10k/gitstatus/src/request.h	/^  std::string id;$/;"	m	struct:gitstatus::Request	typeref:typename:std::string
id	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  git_oid id;$/;"	m	struct:gitstatus::Tag	typeref:typename:git_oid
id2name_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  WithArena<std::vector<const Tag*>> id2name_;$/;"	m	class:gitstatus::TagDb	typeref:typename:WithArena<std::vector<const Tag * >>
id2name_dirty_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  bool id2name_dirty_ = false;$/;"	m	class:gitstatus::TagDb	typeref:typename:bool
idle_cv_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::condition_variable idle_cv_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::condition_variable
idx	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^    int64_t idx;$/;"	m	struct:gitstatus::ThreadPool::Work	typeref:typename:int64_t
ignore_bash_show_dirty_state	zsh/powerlevel10k/gitstatus/src/options.h	/^  bool ignore_bash_show_dirty_state = false;$/;"	m	struct:gitstatus::Limits	typeref:typename:bool
ignore_bash_show_untracked_files	zsh/powerlevel10k/gitstatus/src/options.h	/^  bool ignore_bash_show_untracked_files = false;$/;"	m	struct:gitstatus::Limits	typeref:typename:bool
ignore_status_show_untracked_files	zsh/powerlevel10k/gitstatus/src/options.h	/^  bool ignore_status_show_untracked_files = false;$/;"	m	struct:gitstatus::Limits	typeref:typename:bool
incline.nvim	nvim/lazy-lock.json	/^  "incline.nvim": { "branch": "main", "commit": "16fc9c073e3ea4175b66ad94375df6d73fc114c0" },$/;"	o
includePath	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "includePath": [$/;"	a	object:configurations.0
include_untracked	zsh/powerlevel10k/gitstatus/src/index.h	/^  bool include_untracked;$/;"	m	struct:gitstatus::ScanOpts	typeref:typename:bool
indent-blankline.nvim	nvim/lazy-lock.json	/^  "indent-blankline.nvim": { "branch": "master", "commit": "65e20ab94a26d0e14acac5049b8641336819/;"	o
index_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::unique_ptr<Index> index_;$/;"	m	class:gitstatus::Repo	typeref:typename:std::unique_ptr<Index>
index_size	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t index_size = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
inflight_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> inflight_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
initializer_list	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "initializer_list": "cpp",$/;"	s	object:files.associations
install_bat	install_programs.sh	/^install_bat() {$/;"	f
install_composer	install_programs.sh	/^install_composer() {$/;"	f
install_dependencies	install_programs.sh	/^install_dependencies() {$/;"	f
install_exa	install_programs.sh	/^install_exa() {$/;"	f
install_font	zsh/powerlevel10k/internal/wizard.zsh	/^function install_font() {$/;"	f
install_go	install_programs.sh	/^install_go() {$/;"	f
install_lazygit	install_programs.sh	/^install_lazygit() {$/;"	f
install_nala	install_programs.sh	/^install_nala() {$/;"	f
install_neovim	install_programs.sh	/^install_neovim() {$/;"	f
install_nodejs	install_programs.sh	/^install_nodejs() {$/;"	f
install_nvm	install_programs.sh	/^install_nvm() {$/;"	f
install_php	install_programs.sh	/^install_php() {$/;"	f
install_programs	install_programs.sh	/^install_programs() {$/;"	f
install_python	install_programs.sh	/^install_python() {$/;"	f
install_rust	install_programs.sh	/^install_rust() {$/;"	f
install_wget	install_programs.sh	/^install_wget() {$/;"	f
install_zoxide	install_programs.sh	/^install_zoxide() {$/;"	f
instant_prompt__p9k_internal_nothing	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt__p9k_internal_nothing() { prompt__p9k_internal_nothing; }$/;"	f
instant_prompt_chezmoi_shell	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_chezmoi_shell() {$/;"	f
instant_prompt_context	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_context() {$/;"	f
instant_prompt_date	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_date() {$/;"	f
instant_prompt_dir	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_dir() { prompt_dir; }$/;"	f
instant_prompt_dir_writable	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_dir_writable() { prompt_dir_writable; }$/;"	f
instant_prompt_direnv	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_direnv() {$/;"	f
instant_prompt_example	zsh/powerlevel10k/config/p10k-classic.zsh	/^  function instant_prompt_example() {$/;"	f
instant_prompt_example	zsh/powerlevel10k/config/p10k-lean-8colors.zsh	/^  function instant_prompt_example() {$/;"	f
instant_prompt_example	zsh/powerlevel10k/config/p10k-lean.zsh	/^  function instant_prompt_example() {$/;"	f
instant_prompt_example	zsh/powerlevel10k/config/p10k-rainbow.zsh	/^  function instant_prompt_example() {$/;"	f
instant_prompt_host	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_host() { prompt_host; }$/;"	f
instant_prompt_lf	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_lf() {$/;"	f
instant_prompt_midnight_commander	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_midnight_commander() {$/;"	f
instant_prompt_nix_shell	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_nix_shell() {$/;"	f
instant_prompt_nnn	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_nnn() {$/;"	f
instant_prompt_os_icon	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_os_icon() { prompt_os_icon; }$/;"	f
instant_prompt_per_directory_history	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_per_directory_history() {$/;"	f
instant_prompt_prompt_char	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_prompt_char() {$/;"	f
instant_prompt_ranger	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_ranger() {$/;"	f
instant_prompt_root_indicator	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_root_indicator() { prompt_root_indicator; }$/;"	f
instant_prompt_ssh	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_ssh() {$/;"	f
instant_prompt_status	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_status() {$/;"	f
instant_prompt_time	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_time() {$/;"	f
instant_prompt_toolbox	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_toolbox() {$/;"	f
instant_prompt_user	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_user() {$/;"	f
instant_prompt_vi_mode	zsh/powerlevel10k/internal/p10k.zsh	/^instant_prompt_vi_mode() {$/;"	f
instant_prompt_vim_shell	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_vim_shell() {$/;"	f
instant_prompt_xplr	zsh/powerlevel10k/internal/p10k.zsh	/^function instant_prompt_xplr() {$/;"	f
intelliSenseMode	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "intelliSenseMode": "gcc-x64"$/;"	s	object:configurations.0
internal_check	zsh/powerlevel10k/gitstatus/src/check.h	/^namespace internal_check {$/;"	n	namespace:gitstatus
internal_logging	zsh/powerlevel10k/gitstatus/src/logging.cc	/^namespace internal_logging {$/;"	n	namespace:gitstatus	file:
internal_logging	zsh/powerlevel10k/gitstatus/src/logging.h	/^namespace internal_logging {$/;"	n	namespace:gitstatus
internal_scope_guard	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^namespace internal_scope_guard {$/;"	n	namespace:gitstatus
iomanip	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "iomanip": "cpp",$/;"	s	object:files.associations
iosfwd	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "iosfwd": "cpp",$/;"	s	object:files.associations
iostream	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "iostream": "cpp",$/;"	s	object:files.associations
is_always_equal	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using is_always_equal = std::false_type;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:std::false_type
is_installed	install_programs.sh	/^is_installed() {$/;"	f
istream	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "istream": "cpp",$/;"	s	object:files.associations
iterator	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "iterator": "cpp",$/;"	s	object:files.associations
iterm2_decorate_prompt	zsh/powerlevel10k/internal/p10k.zsh	/^    function iterm2_decorate_prompt() {$/;"	f
iterm_get	zsh/powerlevel10k/internal/wizard.zsh	/^function iterm_get() {$/;"	f
kDirPrefix	zsh/powerlevel10k/gitstatus/src/check_dir_mtime.cc	/^constexpr char kDirPrefix[] = ".gitstatus.";$/;"	v	namespace:gitstatus::__anon89c473e20111	typeref:typename:char[]
kFalse	zsh/powerlevel10k/gitstatus/src/tribool.h	/^enum class Tribool : int { kFalse = 0, kTrue = 1, kUnknown = -1 };$/;"	e	enum:gitstatus::Tribool
kFieldSep	zsh/powerlevel10k/gitstatus/src/serialization.h	/^constexpr char kFieldSep = 31;  \/\/ ascii 31 is unit separator$/;"	v	namespace:gitstatus	typeref:typename:char
kHexLower	zsh/powerlevel10k/gitstatus/src/logging.cc	/^constexpr char kHexLower[] = {'0', '1', '2', '3', '4', '5', '6', '7',$/;"	v	namespace:gitstatus::internal_logging::__anon10351f120111	typeref:typename:char[]
kMsgSep	zsh/powerlevel10k/gitstatus/src/serialization.h	/^constexpr char kMsgSep = 30;    \/\/ ascii 30 is record separator$/;"	v	namespace:gitstatus	typeref:typename:char
kSingularity	zsh/powerlevel10k/gitstatus/src/arena.cc	/^static const uintptr_t kSingularity = reinterpret_cast<uintptr_t>(&kSingularity);$/;"	v	namespace:gitstatus::__anona1991e320111	typeref:typename:const uintptr_t	file:
kTagPrefix	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^static constexpr char kTagPrefix[] = "refs\/tags\/";$/;"	v	namespace:gitstatus::__anon40e328cc0111	typeref:typename:char[]	file:
kTrue	zsh/powerlevel10k/gitstatus/src/tribool.h	/^enum class Tribool : int { kFalse = 0, kTrue = 1, kUnknown = -1 };$/;"	e	enum:gitstatus::Tribool
kUnhex	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^constexpr int8_t kUnhex[256] = {$/;"	v	namespace:gitstatus::__anon40e328cc0111	typeref:typename:int8_t[256]
kUnknown	zsh/powerlevel10k/gitstatus/src/tribool.h	/^enum class Tribool : int { kFalse = 0, kTrue = 1, kUnknown = -1 };$/;"	e	enum:gitstatus::Tribool
kUnreadable	zsh/powerlevel10k/gitstatus/src/response.cc	/^constexpr char kUnreadable = '?';$/;"	v	namespace:gitstatus::__anona19537da0111	typeref:typename:char
kanagawa.nvim	nvim/lazy-lock.json	/^  "kanagawa.nvim": { "branch": "master", "commit": "e5f7b8a804360f0a48e40d0083a97193ee4fcc87" },$/;"	o
last_idx_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  int64_t last_idx_ = 0;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:int64_t
lazy.nvim	nvim/lazy-lock.json	/^  "lazy.nvim": { "branch": "main", "commit": "9d445ebbd89401544a538c6af080e4d2785abb49" },$/;"	o
lazygit.nvim	nvim/lazy-lock.json	/^  "lazygit.nvim": { "branch": "main", "commit": "dc56df433bfbf107fee0139e187eb9750878fa84" },$/;"	o
ld	zsh/alias.zsh	/^alias ld="lazydocker"$/;"	a
left_mouse_command	nvim/lua/configs/bufferline.lua	/^		left_mouse_command = "buffer %d", -- can be a string | function, see "Mouse actions"$/;"	f
len	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  size_t len;$/;"	m	struct:gitstatus::StringView	typeref:typename:size_t
lg	zsh/alias.zsh	/^alias lg="lazygit"$/;"	a
lim_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  Limits lim_;$/;"	m	class:gitstatus::Repo	typeref:typename:Limits
lim_	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  Limits lim_;$/;"	m	class:gitstatus::RepoCache	typeref:typename:Limits
limits	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "limits": "cpp",$/;"	s	object:files.associations
line_	zsh/powerlevel10k/gitstatus/src/logging.h	/^  int line_;$/;"	m	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:int
linux_dirent64	zsh/powerlevel10k/gitstatus/src/dir.cc	/^  struct linux_dirent64 {$/;"	s	function:gitstatus::ListDir	file:
ll	zsh/alias.zsh	/^alias ll="exa -aFghl --no-icons --group-directories-first --time-style=long-iso"$/;"	a
lock_fd	zsh/powerlevel10k/gitstatus/src/options.h	/^  int lock_fd = -1;$/;"	m	struct:gitstatus::Options	typeref:typename:int
lock_fd_	zsh/powerlevel10k/gitstatus/src/request.h	/^  int lock_fd_;$/;"	m	class:gitstatus::RequestReader	typeref:typename:int
locks/	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "locks\/": true,$/;"	b	object:files.exclude
log-highlight.nvim	nvim/lazy-lock.json	/^  "log-highlight.nvim": { "branch": "main", "commit": "c18d1fd20c411f9fd9702d6d0d09edf3faa2bb96"/;"	o
log_level	zsh/powerlevel10k/gitstatus/src/options.h	/^  LogLevel log_level = INFO;$/;"	m	struct:gitstatus::Options	typeref:typename:LogLevel
logs/	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "logs\/": true,$/;"	b	object:files.exclude
loose_arena_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  Arena loose_arena_;$/;"	m	class:gitstatus::TagDb	typeref:typename:Arena
loose_tags_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  std::vector<char*> loose_tags_;$/;"	m	class:gitstatus::TagDb	typeref:typename:std::vector<char * >
lru	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^    LRU::iterator lru;$/;"	m	struct:gitstatus::RepoCache::Entry	typeref:typename:LRU::iterator
lru_	zsh/powerlevel10k/gitstatus/src/repo_cache.h	/^  LRU lru_;$/;"	m	class:gitstatus::RepoCache	typeref:typename:LRU
ls	zsh/alias.zsh	/^alias ls="exa -aFghl --no-icons --group-directories-first --time-style=long-iso"$/;"	a
lspkind.nvim	nvim/lazy-lock.json	/^  "lspkind.nvim": { "branch": "master", "commit": "1735dd5a5054c1fb7feaf8e8658dbab925f4f0cf" },$/;"	o
lualine.nvim	nvim/lazy-lock.json	/^  "lualine.nvim": { "branch": "master", "commit": "544dd1583f9bb27b393f598475c89809c4d5e86b" },$/;"	o
lush.nvim	nvim/lazy-lock.json	/^  "lush.nvim": { "branch": "main", "commit": "1b66ab197b177aabc2270a2c9cb8019fa5a367df" },$/;"	o
lvl_	zsh/powerlevel10k/gitstatus/src/logging.h	/^  const char* lvl_;$/;"	m	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:const char *
main	zsh/powerlevel10k/gitstatus/src/gitstatus.cc	/^int main(int argc, char** argv) { gitstatus::GitStatus(argc, argv); }$/;"	f	typeref:typename:int
map	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "map": "cpp",$/;"	s	object:files.associations
mason-lspconfig.nvim	nvim/lazy-lock.json	/^  "mason-lspconfig.nvim": { "branch": "main", "commit": "37a336b653f8594df75c827ed589f1c91d91ff6/;"	o
mason.nvim	nvim/lazy-lock.json	/^  "mason.nvim": { "branch": "main", "commit": "f96a31855fa8aea55599cea412fe611b85a874ed" },$/;"	o
max_alloc_threshold	zsh/powerlevel10k/gitstatus/src/arena.h	/^    size_t max_alloc_threshold = 1 << 10;$/;"	m	struct:gitstatus::Arena::Options	typeref:typename:size_t
max_block_size	zsh/powerlevel10k/gitstatus/src/arena.h	/^    size_t max_block_size = 8 << 10;$/;"	m	struct:gitstatus::Arena::Options	typeref:typename:size_t
max_commit_summary_length	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t max_commit_summary_length = 256;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
max_num_conflicted	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t max_num_conflicted = 1;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
max_num_staged	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t max_num_staged = 1;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
max_num_unstaged	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t max_num_unstaged = 1;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
max_num_untracked	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t max_num_untracked = 1;$/;"	m	struct:gitstatus::Limits	typeref:typename:size_t
max_size	zsh/powerlevel10k/gitstatus/src/arena.h	/^  size_type max_size() const { return std::numeric_limits<size_type>::max() \/ sizeof(value_type/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:size_type
mbuild	zsh/powerlevel10k/gitstatus/mbuild	/^function mbuild() {$/;"	f
memory	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "memory": "cpp",$/;"	s	object:files.associations
memory_resource	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "memory_resource": "cpp",$/;"	s	object:files.associations
middle_mouse_command	nvim/lua/configs/bufferline.lua	/^		middle_mouse_command = nil, -- can be a string | function, see "Mouse actions"$/;"	f
min_block_size	zsh/powerlevel10k/gitstatus/src/arena.h	/^    size_t min_block_size = 64;$/;"	m	struct:gitstatus::Arena::Options	typeref:typename:size_t
mini.ai	nvim/lazy-lock.json	/^  "mini.ai": { "branch": "main", "commit": "45587078f323eaf41b9f701bbc04f8d1ab008979" },$/;"	o
mini.bufremove	nvim/lazy-lock.json	/^  "mini.bufremove": { "branch": "main", "commit": "e6044aa28e61d4dd9ec86194d6f81743eced0c1c" },$/;"	o
minify	zsh/powerlevel10k/Makefile	/^minify:$/;"	t
minify	zsh/powerlevel10k/gitstatus/Makefile	/^minify:$/;"	t
monokai.nvim	nvim/lazy-lock.json	/^  "monokai.nvim": { "branch": "master", "commit": "b8bd44d5796503173627d7a1fc51f77ec3a08a63" },$/;"	o
multicursors.nvim	nvim/lazy-lock.json	/^  "multicursors.nvim": { "branch": "main", "commit": "782820896b1691ed664e4c24f1cd9793dcb33dfb" /;"	o
mutex	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "mutex": "cpp",$/;"	s	object:files.associations
mutex_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::mutex mutex_;$/;"	m	class:gitstatus::Repo	typeref:typename:std::mutex
mutex_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  std::mutex mutex_;$/;"	m	class:gitstatus::TagDb	typeref:typename:std::mutex
mutex_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::mutex mutex_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::mutex
my_git_formatter	zsh/powerlevel10k/config/p10k-classic.zsh	/^  function my_git_formatter() {$/;"	f
my_git_formatter	zsh/powerlevel10k/config/p10k-lean-8colors.zsh	/^  function my_git_formatter() {$/;"	f
my_git_formatter	zsh/powerlevel10k/config/p10k-lean.zsh	/^  function my_git_formatter() {$/;"	f
my_git_formatter	zsh/powerlevel10k/config/p10k-rainbow.zsh	/^  function my_git_formatter() {$/;"	f
my_git_formatter	zsh/powerlevel10k/config/p10k-robbyrussell.zsh	/^  function my_git_formatter() {$/;"	f
name	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^            "name": "Linux",$/;"	s	object:configurations.0
name	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string name;$/;"	m	struct:gitstatus::PushRemote	typeref:typename:std::string
name	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string name;$/;"	m	struct:gitstatus::Remote	typeref:typename:std::string
name	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  const char* name;$/;"	m	struct:gitstatus::Tag	typeref:typename:const char *
name2id_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  WithArena<std::vector<const Tag*>> name2id_;$/;"	m	class:gitstatus::TagDb	typeref:typename:WithArena<std::vector<const Tag * >>
narg	zsh/powerlevel10k/gitstatus/build	/^narg() { echo $#; }$/;"	f
neo-tree.nvim	nvim/lazy-lock.json	/^  "neo-tree.nvim": { "branch": "v3.x", "commit": "29f7c215332ba95e470811c380ddbce2cebe2af4" },$/;"	o
neodev.nvim	nvim/lazy-lock.json	/^  "neodev.nvim": { "branch": "main", "commit": "46aa467dca16cf3dfe27098042402066d2ae242d" },$/;"	o
neogen	nvim/lazy-lock.json	/^  "neogen": { "branch": "main", "commit": "6de0add4805165317ab7d3d36b5cef48b1b865f3" },$/;"	o
neoscroll.nvim	nvim/lazy-lock.json	/^  "neoscroll.nvim": { "branch": "master", "commit": "a7f5953dbfbe7069568f2d0ed23a9709a56725ab" }/;"	o
neovim	nvim/lazy-lock.json	/^  "neovim": { "branch": "main", "commit": "9e4320d0bab7f261921d6af7d1c1bbc1a1e3dc67" },$/;"	o
netfwd	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "netfwd": "cpp"$/;"	s	object:files.associations
new	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "new": "cpp",$/;"	s	object:files.associations
noctis.nvim	nvim/lazy-lock.json	/^  "noctis.nvim": { "branch": "main", "commit": "0b9336e39c686a7e58de06e4dd38c2bd862a7b33" },$/;"	o
nui.nvim	nvim/lazy-lock.json	/^  "nui.nvim": { "branch": "main", "commit": "61574ce6e60c815b0a0c4b5655b8486ba58089a1" },$/;"	o
num_assume_unchanged	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_assume_unchanged = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_conflicted	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_conflicted = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_inflight_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  int64_t num_inflight_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:int64_t
num_skip_worktree	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_skip_worktree = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_staged	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_staged = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_staged_deleted	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_staged_deleted = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_staged_new	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_staged_new = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_threads	zsh/powerlevel10k/gitstatus/src/options.h	/^  size_t num_threads = 1;$/;"	m	struct:gitstatus::Options	typeref:typename:size_t
num_threads	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  size_t num_threads() const { return threads_.size(); }$/;"	f	class:gitstatus::ThreadPool	typeref:typename:size_t
num_unstaged	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_unstaged = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_unstaged_deleted	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_unstaged_deleted = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
num_untracked	zsh/powerlevel10k/gitstatus/src/repo.h	/^  size_t num_untracked = 0;$/;"	m	struct:gitstatus::IndexStats	typeref:typename:size_t
numeric	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "numeric": "cpp",$/;"	s	object:files.associations
nvim-autopairs	nvim/lazy-lock.json	/^  "nvim-autopairs": { "branch": "master", "commit": "78a4507bb9ffc9b00f11ae0ac48243d00cb9194d" }/;"	o
nvim-cmp	nvim/lazy-lock.json	/^  "nvim-cmp": { "branch": "main", "commit": "d818fd0624205b34e14888358037fb6f5dc51234" },$/;"	o
nvim-colorizer.lua	nvim/lazy-lock.json	/^  "nvim-colorizer.lua": { "branch": "master", "commit": "08bd34bf0ed79723f62764c7f9ca70516d461d0/;"	o
nvim-cursorline	nvim/lazy-lock.json	/^  "nvim-cursorline": { "branch": "main", "commit": "804f0023692653b2b2368462d67d2a87056947f9" },$/;"	o
nvim-hlslens	nvim/lazy-lock.json	/^  "nvim-hlslens": { "branch": "main", "commit": "1db56afda3e85791a14b096e483dfda699dd9163" },$/;"	o
nvim-lspconfig	nvim/lazy-lock.json	/^  "nvim-lspconfig": { "branch": "master", "commit": "216deb2d1b5fbf24398919228208649bbf5cbadf" }/;"	o
nvim-navic	nvim/lazy-lock.json	/^  "nvim-navic": { "branch": "master", "commit": "8649f694d3e76ee10c19255dece6411c29206a54" },$/;"	o
nvim-notify	nvim/lazy-lock.json	/^  "nvim-notify": { "branch": "master", "commit": "d333b6f167900f6d9d42a59005d82919830626bf" },$/;"	o
nvim-surround	nvim/lazy-lock.json	/^  "nvim-surround": { "branch": "main", "commit": "ec2dc7671067e0086cdf29c2f5df2dd909d5f71f" },$/;"	o
nvim-treesitter	nvim/lazy-lock.json	/^  "nvim-treesitter": { "branch": "master", "commit": "a6b2f4ecc8a47011868632142a9b687d7e0f9aaf" /;"	o
nvim-treesitter-context	nvim/lazy-lock.json	/^  "nvim-treesitter-context": { "branch": "master", "commit": "2aba92ceb1479485953007f4d5adf34d0b/;"	o
nvim-treesitter-endwise	nvim/lazy-lock.json	/^  "nvim-treesitter-endwise": { "branch": "master", "commit": "8b34305ffc28bd75a22f5a0a9928ee726a/;"	o
nvim-ts-autotag	nvim/lazy-lock.json	/^  "nvim-ts-autotag": { "branch": "main", "commit": "26c365cc7d58d0da17b13e747855d331eb26fcf0" },$/;"	o
nvim-ts-context-commentstring	nvim/lazy-lock.json	/^  "nvim-ts-context-commentstring": { "branch": "main", "commit": "6b5f95aa4d24f2c629a74f2c935c70/;"	o
nvim-ufo	nvim/lazy-lock.json	/^  "nvim-ufo": { "branch": "main", "commit": "1b5f2838099f283857729e820cc05e2b19df7a2c" },$/;"	o
nvim-web-devicons	nvim/lazy-lock.json	/^  "nvim-web-devicons": { "branch": "master", "commit": "c0cfc1738361b5da1cd0a962dd6f774cc444f856/;"	o
obj/	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "obj\/": true,$/;"	b	object:files.exclude
on_attach	nvim/lua/configs/lsp.lua	/^local on_attach = function(client, bufnr)$/;"	f
operator !=	zsh/powerlevel10k/gitstatus/src/arena.h	/^  bool operator!=(const ArenaAllocator& other) const { return &arena_ != &other.arena_; }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:bool
operator ()	zsh/powerlevel10k/gitstatus/src/git.h	/^    void operator()(const PushRemote* p) const {$/;"	f	struct:gitstatus::PushRemote::Free	typeref:typename:void
operator ()	zsh/powerlevel10k/gitstatus/src/git.h	/^    void operator()(const Remote* p) const {$/;"	f	struct:gitstatus::Remote::Free	typeref:typename:void
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  bool operator()(const StringView& x, const StringView& y) const {$/;"	f	struct:gitstatus::StrEq	typeref:typename:bool
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  bool operator()(const X& x, const Y& y) const {$/;"	f	struct:gitstatus::StrEq	typeref:typename:bool
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  bool operator()(const X& x, const Y& y) const {$/;"	f	struct:gitstatus::StrLt	typeref:typename:bool
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(StringView x, StringView y) const {$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(StringView x, const char* y) const {$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(char x, char y) const { return std::tolower(x) - std::tolower(y); }$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(char x, char y) const { return x - y; }$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(const X& x, const Y& y) const {$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(const char* x, StringView y) const { return -operator()(y, x); }$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(const char* x, const char* y) const { return std::strcmp(x, y); }$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/string_cmp.h	/^  int operator()(const char* x, const char* y) const { return strcasecmp(x, y); }$/;"	f	struct:gitstatus::StrCmp	typeref:typename:int
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const Tag* x, const Tag* y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0208	typeref:typename:bool	file:
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const Tag* x, const Tag* y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0308	typeref:typename:bool	file:
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const Tag* x, const char* y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0308	typeref:typename:bool	file:
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const Tag* x, const git_oid& y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0208	typeref:typename:bool	file:
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const char* x, const Tag* y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0308	typeref:typename:bool	file:
operator ()	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^  bool operator()(const git_oid& x, const Tag* y) const {$/;"	f	struct:gitstatus::__anon40e328cc0111::__anon40e328cc0208	typeref:typename:bool	file:
operator <	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^    bool operator<(const Work& w) const { return std::tie(w.t, w.idx) < std::tie(t, idx); }$/;"	f	struct:gitstatus::ThreadPool::Work	typeref:typename:bool
operator <<	zsh/powerlevel10k/gitstatus/src/logging.cc	/^std::ostream& operator<<(std::ostream& strm, Errno e) {$/;"	f	namespace:gitstatus::internal_logging	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/logging.h	/^LogStreamBase& operator<<(LogStreamBase& strm, const T& val) {$/;"	f	namespace:gitstatus::internal_logging	typeref:typename:LogStreamBase &
operator <<	zsh/powerlevel10k/gitstatus/src/logging.h	/^inline LogStreamBase& operator<<(LogStreamBase& strm, StashedErrno) {$/;"	f	namespace:gitstatus::internal_logging	typeref:typename:LogStreamBase &
operator <<	zsh/powerlevel10k/gitstatus/src/logging.h	/^inline LogStreamBase& operator<<(LogStreamBase& strm, std::ostream& (*manip)(std::ostream&)) {$/;"	f	namespace:gitstatus::internal_logging	typeref:typename:LogStreamBase &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<StringView>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<char*>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<const char*>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<git_index_time>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<std::string>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^inline std::ostream& operator<<(std::ostream& strm, const Printable<struct timespec>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^std::ostream& operator<<(std::ostream& strm, const Printable<T>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^std::ostream& operator<<(std::ostream& strm, const Printable<std::pair<T, U>>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/print.h	/^std::ostream& operator<<(std::ostream& strm, const Printable<std::vector<T>>& p) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/request.cc	/^std::ostream& operator<<(std::ostream& strm, const Request& req) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator <<	zsh/powerlevel10k/gitstatus/src/string_view.h	/^inline std::ostream& operator<<(std::ostream& strm, StringView s) {$/;"	f	namespace:gitstatus	typeref:typename:std::ostream &
operator =	zsh/powerlevel10k/gitstatus/src/arena.cc	/^Arena& Arena::operator=(Arena&& other) {$/;"	f	class:gitstatus::Arena	typeref:typename:Arena &
operator =	zsh/powerlevel10k/gitstatus/src/logging.h	/^  void operator=(const T&) const {}$/;"	f	struct:gitstatus::internal_logging::Assignable	typeref:typename:void
operator =	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^  ScopeGuard<F> operator=(F f) const {$/;"	f	struct:gitstatus::internal_scope_guard::ScopeGuardGenerator	typeref:typename:ScopeGuard<F>
operator ==	zsh/powerlevel10k/gitstatus/src/arena.h	/^  bool operator==(const ArenaAllocator& other) const { return &arena_ == &other.arena_; }$/;"	f	class:gitstatus::ArenaAllocator	typeref:typename:bool
operator bool	zsh/powerlevel10k/gitstatus/src/check.h	/^  explicit operator bool() const { return !throw_; }$/;"	f	class:gitstatus::internal_check::Thrower
opt_	zsh/powerlevel10k/gitstatus/src/arena.h	/^  Options opt_;$/;"	m	class:gitstatus::Arena	typeref:typename:Options
optional	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "optional": "cpp",$/;"	s	object:files.associations
opts	nvim/lua/plugins.lua	/^    opts = function()$/;"	f
os_icon_name	zsh/powerlevel10k/internal/wizard.zsh	/^function os_icon_name() {$/;"	f
ostream	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "ostream": "cpp",$/;"	s	object:files.associations
other	zsh/powerlevel10k/gitstatus/src/arena.h	/^    using other = ArenaAllocator<U>;$/;"	t	struct:gitstatus::ArenaAllocator::rebind	typeref:typename:ArenaAllocator<U>
output	zsh/z.sh	/^            function output(matches, best_match, common) {$/;"	f
oxocarbon.nvim	nvim/lazy-lock.json	/^  "oxocarbon.nvim": { "branch": "main", "commit": "c5846d10cbe4131cc5e32c6d00beaf59cb60f6a2" },$/;"	o
p10k	zsh/powerlevel10k/internal/p10k.zsh	/^  function p10k() {$/;"	f
p10k	zsh/powerlevel10k/internal/p10k.zsh	/^function p10k() {$/;"	f
p10k-instant-prompt-finalize	zsh/powerlevel10k/internal/p10k.zsh	/^function p10k-instant-prompt-finalize() {$/;"	f
p10k-on-init	zsh/powerlevel10k/internal/p10k.zsh	/^  p10k-on-init() { '$functions[p10k-on-init]' }'$/;"	f
p10k-on-post-prompt	zsh/powerlevel10k/internal/p10k.zsh	/^  p10k-on-post-prompt() { '$functions[p10k-on-post-prompt]' }'$/;"	f
p10k-on-post-widget	zsh/powerlevel10k/internal/p10k.zsh	/^  p10k-on-post-widget() { '$functions[p10k-on-post-widget]' }'$/;"	f
p10k-on-pre-prompt	zsh/powerlevel10k/internal/p10k.zsh	/^  p10k-on-pre-prompt() { '$functions[p10k-on-pre-prompt]' }'$/;"	f
p9k_configure	zsh/powerlevel10k/internal/configure.zsh	/^function p9k_configure() {$/;"	f
p9k_prompt_segment	zsh/powerlevel10k/internal/p10k.zsh	/^function p9k_prompt_segment() { p10k segment "$@" }$/;"	f
pack_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  WithArena<std::string> pack_;$/;"	m	class:gitstatus::TagDb	typeref:typename:WithArena<std::string>
pack_arena_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  Arena pack_arena_;$/;"	m	class:gitstatus::TagDb	typeref:typename:Arena
pack_stat_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  struct stat pack_stat_ = {};$/;"	m	class:gitstatus::TagDb	typeref:struct:stat
parent_pid	zsh/powerlevel10k/gitstatus/src/options.h	/^  int parent_pid = -1;$/;"	m	struct:gitstatus::Options	typeref:typename:int
parent_pid_	zsh/powerlevel10k/gitstatus/src/request.h	/^  int parent_pid_;$/;"	m	class:gitstatus::RequestReader	typeref:typename:int
path	zsh/powerlevel10k/gitstatus/src/index.h	/^  StringView path;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:StringView
persistence.nvim	nvim/lazy-lock.json	/^  "persistence.nvim": { "branch": "main", "commit": "40a137dd9240c9c6760c53df48d2b155f52c252b" }/;"	o
pip	zsh/alias.zsh	/^alias pip="pip3"$/;"	a
pkg	zsh/powerlevel10k/Makefile	/^pkg: zwc$/;"	t
pkg	zsh/powerlevel10k/gitstatus/Makefile	/^pkg: zwc$/;"	t
plenary.nvim	nvim/lazy-lock.json	/^  "plenary.nvim": { "branch": "master", "commit": "a3e3bc82a3f95c5ed0d7201546d5d2c19b20d683" },$/;"	o
pointer	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using pointer = T*;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:T *
powerlevel10k_plugin_unload	zsh/powerlevel10k/internal/p10k.zsh	/^powerlevel10k_plugin_unload() { prompt_powerlevel9k_teardown; }$/;"	f
precompose_unicode	zsh/powerlevel10k/gitstatus/src/index.h	/^  bool precompose_unicode;$/;"	m	struct:gitstatus::RepoCaps	typeref:typename:bool
pretty-fold.nvim	nvim/lazy-lock.json	/^  "pretty-fold.nvim": { "branch": "master", "commit": "a7d8b424abe0eedf50116c460fbe6dfd5783b1d5"/;"	o
print_file_path	zsh/powerlevel10k/internal/wizard.zsh	/^function print_file_path() {$/;"	f
print_frame_marker	zsh/powerlevel10k/internal/wizard.zsh	/^function print_frame_marker() {$/;"	f
print_greeting	zsh/powerlevel10k/internal/wizard.zsh	/^function print_greeting() {$/;"	f
print_icon	zsh/powerlevel10k/internal/icons.zsh	/^function print_icon() {$/;"	f
print_indented	zsh/powerlevel10k/internal/wizard.zsh	/^function print_indented() {$/;"	f
print_instant_prompt_link	zsh/powerlevel10k/internal/wizard.zsh	/^function print_instant_prompt_link() {$/;"	f
print_prompt	zsh/powerlevel10k/internal/wizard.zsh	/^function print_prompt() {$/;"	f
print_tail_marker	zsh/powerlevel10k/internal/wizard.zsh	/^function print_tail_marker() {$/;"	f
promise-async	nvim/lazy-lock.json	/^  "promise-async": { "branch": "main", "commit": "28c1d5a295eb5310afa2523d4ae9aa41ec5a9de2" },$/;"	o
prompt__p9k_internal_nothing	zsh/powerlevel10k/internal/p10k.zsh	/^prompt__p9k_internal_nothing() { _p9k__prompt+='${_p9k__sss::=}'; }$/;"	f
prompt_anaconda	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_anaconda() {$/;"	f
prompt_asdf	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_asdf() {$/;"	f
prompt_aws	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_aws() {$/;"	f
prompt_aws_eb_env	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_aws_eb_env() {$/;"	f
prompt_azure	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_azure() {$/;"	f
prompt_background_jobs	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_background_jobs() {$/;"	f
prompt_battery	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_battery() {$/;"	f
prompt_chezmoi_shell	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_chezmoi_shell() {$/;"	f
prompt_chruby	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_chruby() {$/;"	f
prompt_command_execution_time	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_command_execution_time() {$/;"	f
prompt_context	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_context() {$/;"	f
prompt_core	zsh/powerlevel10k/internal/p10k.zsh	/^  function prompt_core() {$/;"	f
prompt_cpu_arch	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_cpu_arch() {$/;"	f
prompt_date	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_date() {$/;"	f
prompt_detect_virt	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_detect_virt() {$/;"	f
prompt_dir	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_dir() {$/;"	f
prompt_dir_writable	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_dir_writable() {$/;"	f
prompt_direnv	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_direnv() {$/;"	f
prompt_disk_usage	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_disk_usage() {$/;"	f
prompt_docker_machine	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_docker_machine() {$/;"	f
prompt_dotnet_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_dotnet_version() {$/;"	f
prompt_dropbox	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_dropbox() {$/;"	f
prompt_example	zsh/powerlevel10k/config/p10k-classic.zsh	/^  function prompt_example() {$/;"	f
prompt_example	zsh/powerlevel10k/config/p10k-lean-8colors.zsh	/^  function prompt_example() {$/;"	f
prompt_example	zsh/powerlevel10k/config/p10k-lean.zsh	/^  function prompt_example() {$/;"	f
prompt_example	zsh/powerlevel10k/config/p10k-rainbow.zsh	/^  function prompt_example() {$/;"	f
prompt_fvm	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_fvm() {$/;"	f
prompt_gcloud	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_gcloud() {$/;"	f
prompt_go_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_go_version() {$/;"	f
prompt_goenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_goenv() {$/;"	f
prompt_google_app_cred	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_google_app_cred() {$/;"	f
prompt_haskell_stack	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_haskell_stack() {$/;"	f
prompt_history	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_history() {$/;"	f
prompt_host	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_host() {$/;"	f
prompt_ip	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_ip() {$/;"	f
prompt_java_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_java_version() {$/;"	f
prompt_jenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_jenv() {$/;"	f
prompt_kubecontext	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_kubecontext() {$/;"	f
prompt_laravel_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_laravel_version() {$/;"	f
prompt_length	zsh/powerlevel10k/internal/wizard.zsh	/^function prompt_length() {$/;"	f
prompt_lf	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_lf() {$/;"	f
prompt_load	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_load() {$/;"	f
prompt_luaenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_luaenv() {$/;"	f
prompt_midnight_commander	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_midnight_commander() {$/;"	f
prompt_nix_shell	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_nix_shell() {$/;"	f
prompt_nnn	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_nnn() {$/;"	f
prompt_node_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_node_version() {$/;"	f
prompt_nodeenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_nodeenv() {$/;"	f
prompt_nodenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_nodenv() {$/;"	f
prompt_nordvpn	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_nordvpn() {$/;"	f
prompt_nvm	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_nvm() {$/;"	f
prompt_openfoam	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_openfoam() {$/;"	f
prompt_os_icon	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_os_icon() {$/;"	f
prompt_package	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_package() {$/;"	f
prompt_per_directory_history	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_per_directory_history() {$/;"	f
prompt_perlbrew	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_perlbrew() {$/;"	f
prompt_php_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_php_version() {$/;"	f
prompt_phpenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_phpenv() {$/;"	f
prompt_plenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_plenv() {$/;"	f
prompt_powerlevel9k_setup	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_powerlevel9k_setup() {$/;"	f
prompt_powerlevel9k_teardown	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_powerlevel9k_teardown() {$/;"	f
prompt_prompt_char	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_prompt_char() {$/;"	f
prompt_proxy	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_proxy() {$/;"	f
prompt_public_ip	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_public_ip() {$/;"	f
prompt_pyenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_pyenv() {$/;"	f
prompt_ram	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_ram() {$/;"	f
prompt_ranger	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_ranger() {$/;"	f
prompt_rbenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_rbenv() {$/;"	f
prompt_root_indicator	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_root_indicator() {$/;"	f
prompt_rspec_stats	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_rspec_stats() {$/;"	f
prompt_rust_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_rust_version() {$/;"	f
prompt_rvm	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_rvm() {$/;"	f
prompt_scalaenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_scalaenv() {$/;"	f
prompt_ssh	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_ssh() {$/;"	f
prompt_status	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_status() {$/;"	f
prompt_swap	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_swap() {$/;"	f
prompt_swift_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_swift_version() {$/;"	f
prompt_symfony2_tests	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_symfony2_tests() {$/;"	f
prompt_symfony2_version	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_symfony2_version() {$/;"	f
prompt_taskwarrior	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_taskwarrior() {$/;"	f
prompt_terraform	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_terraform() {$/;"	f
prompt_terraform_version	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_terraform_version() {$/;"	f
prompt_time	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_time() {$/;"	f
prompt_timewarrior	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_timewarrior() {$/;"	f
prompt_todo	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_todo() {$/;"	f
prompt_toolbox	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_toolbox() {$/;"	f
prompt_user	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_user() {$/;"	f
prompt_vcs	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_vcs() {$/;"	f
prompt_vi_mode	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_vi_mode() {$/;"	f
prompt_vim_shell	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_vim_shell() {$/;"	f
prompt_virtualenv	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_virtualenv() {$/;"	f
prompt_vpn_ip	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_vpn_ip() {$/;"	f
prompt_wifi	zsh/powerlevel10k/internal/p10k.zsh	/^prompt_wifi() {$/;"	f
prompt_xplr	zsh/powerlevel10k/internal/p10k.zsh	/^function prompt_xplr() {$/;"	f
propagate_on_container_move_assignment	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using propagate_on_container_move_assignment = std::true_type;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:std::true_type
ptr	zsh/powerlevel10k/gitstatus/src/string_view.h	/^  const char* ptr;$/;"	m	struct:gitstatus::StringView	typeref:typename:const char *
quit	zsh/powerlevel10k/internal/wizard.zsh	/^  function quit() {}$/;"	f
quit	zsh/powerlevel10k/internal/wizard.zsh	/^function quit() {$/;"	f
r	zsh/alias.zsh	/^alias r="source ~\/.zshrc"$/;"	a
rainbow-delimiters.nvim	nvim/lazy-lock.json	/^  "rainbow-delimiters.nvim": { "branch": "master", "commit": "b29da4a6061a88270e875b38367d82c04c/;"	o
random	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "random": "cpp",$/;"	s	object:files.associations
ratio	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "ratio": "cpp",$/;"	s	object:files.associations
read_	zsh/powerlevel10k/gitstatus/src/request.h	/^  std::deque<char> read_;$/;"	m	class:gitstatus::RequestReader	typeref:typename:std::deque<char>
rebind	zsh/powerlevel10k/gitstatus/src/arena.h	/^  struct rebind {$/;"	s	class:gitstatus::ArenaAllocator
recurse_untracked_dirs	zsh/powerlevel10k/gitstatus/src/options.h	/^  bool recurse_untracked_dirs = false;$/;"	m	struct:gitstatus::Limits	typeref:typename:bool
ref	zsh/powerlevel10k/gitstatus/src/git.h	/^  git_reference* ref;$/;"	m	struct:gitstatus::PushRemote	typeref:typename:git_reference *
ref	zsh/powerlevel10k/gitstatus/src/git.h	/^  git_reference* ref;$/;"	m	struct:gitstatus::Remote	typeref:typename:git_reference *
ref	zsh/powerlevel10k/gitstatus/src/logging.h	/^  LogStreamBase& ref() { return *this; }$/;"	f	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:LogStreamBase &
refdb_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  git_refdb* const refdb_;$/;"	m	class:gitstatus::TagDb	typeref:typename:git_refdb * const
reference	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using reference = T&;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:T &
render_screen	zsh/powerlevel10k/internal/wizard.zsh	/^function render_screen() {$/;"	f
render_screen_pass	zsh/powerlevel10k/internal/wizard.zsh	/^function render_screen_pass() {$/;"	f
rep	zsh/powerlevel10k/internal/wizard.zsh	/^  function rep() {$/;"	f
repo	zsh/powerlevel10k/gitstatus/src/repo.h	/^  git_repository* repo() const { return repo_; }$/;"	f	class:gitstatus::Repo	typeref:typename:git_repository *
repo_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  git_repository* const repo_;$/;"	m	class:gitstatus::Repo	typeref:typename:git_repository * const
repo_	zsh/powerlevel10k/gitstatus/src/tag_db.h	/^  git_repository* const repo_;$/;"	m	class:gitstatus::TagDb	typeref:typename:git_repository * const
repo_ttl	zsh/powerlevel10k/gitstatus/src/options.h	/^  Duration repo_ttl = std::chrono::seconds(3600);$/;"	m	struct:gitstatus::Options	typeref:typename:Duration
request_id_	zsh/powerlevel10k/gitstatus/src/response.h	/^  std::string request_id_;$/;"	m	class:gitstatus::ResponseWriter	typeref:typename:std::string
restore_screen	zsh/powerlevel10k/internal/wizard.zsh	/^    function restore_screen() {}$/;"	f
restore_screen	zsh/powerlevel10k/internal/wizard.zsh	/^  function restore_screen() {$/;"	f
restore_screen	zsh/powerlevel10k/internal/wizard.zsh	/^  function restore_screen() {}$/;"	f
reusable_	zsh/powerlevel10k/gitstatus/src/arena.h	/^  size_t reusable_ = 0;$/;"	m	class:gitstatus::Arena	typeref:typename:size_t
right_mouse_command	nvim/lua/configs/bufferline.lua	/^		right_mouse_command = "bdelete! %d", -- can be a string | function, see "Mouse actions"$/;"	f
rip	zsh/alias.zsh	/^alias rip="rip --graveyard \/home\/stefanlionel\/.local\/share\/Tras"$/;"	a
root_dir_	zsh/powerlevel10k/gitstatus/src/index.h	/^  const char* root_dir_;$/;"	m	class:gitstatus::Index	typeref:typename:const char *
run-process-tree	zsh/powerlevel10k/gitstatus/mbuild	/^function run-process-tree() {$/;"	f
run_cmd	zsh/powerlevel10k/gitstatus/install	/^      run_cmd() {$/;"	f
run_command	zsh/powerlevel10k/internal/wizard.zsh	/^function run_command() {$/;"	f
run_install	install_programs.sh	/^run_install() {$/;"	f
serve	zsh/alias.zsh	/^alias serve="sudo rr serve -c .\/.rr.yaml"$/;"	a
serve	zsh/alias.zsh	/^function serve()$/;"	f
set-colors-through-Powerlevel10k-configuration-parameters	zsh/powerlevel10k/README.md	/^  #set-colors-through-Powerlevel10k-configuration-parameters).$/;"	h	subsection:Powerlevel10k""FAQ""How do I change prompt colors?
shards_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::vector<Shard> shards_;$/;"	m	class:gitstatus::Repo	typeref:typename:std::vector<Shard>
show_cursor	zsh/powerlevel10k/internal/wizard.zsh	/^function show_cursor() {$/;"	f
size	zsh/powerlevel10k/gitstatus/src/arena.h	/^    size_t size() const { return end - start; }$/;"	f	struct:gitstatus::Arena::Block	typeref:typename:size_t
size_type	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using size_type = size_t;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:size_t
skip_worktree_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> skip_worktree_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
sleeper_cv_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::condition_variable sleeper_cv_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::condition_variable
spinner	install_programs.sh	/^spinner() {$/;"	f
splits_	zsh/powerlevel10k/gitstatus/src/index.h	/^  WithArena<std::vector<size_t>> splits_;$/;"	m	class:gitstatus::Index	typeref:typename:WithArena<std::vector<size_t>>
srcery-vim	nvim/lazy-lock.json	/^  "srcery-vim": { "branch": "master", "commit": "c7398b0b32009406cf3918a655c364c44d7ab99b" },$/;"	o
sstream	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "sstream": "cpp",$/;"	s	object:files.associations
st	zsh/powerlevel10k/gitstatus/src/index.h	/^  struct stat st = {};$/;"	m	struct:gitstatus::IndexDir	typeref:struct:stat
staged_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> staged_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
staged_deleted_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> staged_deleted_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
staged_new_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> staged_new_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
start	zsh/powerlevel10k/gitstatus/src/arena.h	/^    uintptr_t start;$/;"	m	struct:gitstatus::Arena::Block	typeref:typename:uintptr_t
start_i	zsh/powerlevel10k/gitstatus/src/repo.h	/^    size_t start_i;$/;"	m	struct:gitstatus::Repo::Shard	typeref:typename:size_t
start_s	zsh/powerlevel10k/gitstatus/src/repo.h	/^    std::string start_s;$/;"	m	struct:gitstatus::Repo::Shard	typeref:typename:std::string
stashed_errno	zsh/powerlevel10k/gitstatus/src/logging.h	/^  int stashed_errno() const { return errno_; }$/;"	f	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:int
stdexcept	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "stdexcept": "cpp",$/;"	s	object:files.associations
streambuf	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "streambuf": "cpp",$/;"	s	object:files.associations
string	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "string": "cpp",$/;"	s	object:files.associations
string_view	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "string_view": "cpp",$/;"	s	object:files.associations
strm	zsh/powerlevel10k/gitstatus/src/logging.h	/^  std::ostream& strm() { return *strm_; }$/;"	f	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:std::ostream &
strm_	zsh/powerlevel10k/gitstatus/src/logging.h	/^  std::unique_ptr<std::ostringstream> strm_;$/;"	m	class:gitstatus::internal_logging::LogStreamBase	typeref:typename:std::unique_ptr<std::ostringstream>
strm_	zsh/powerlevel10k/gitstatus/src/response.h	/^  std::ostringstream strm_;$/;"	m	class:gitstatus::ResponseWriter	typeref:typename:std::ostringstream
style bg	tmux/tmux.conf	/^set-option -g message-command-style bg=colour239,fg=colour223 # bg=fg3, fg=bg1$/;"	k
style bg	tmux/tmux.conf	/^set-option -g message-style bg=colour239,fg=colour223 # bg=bg2, fg=fg1$/;"	k
style bg	tmux/tmux.conf	/^set-option -g status-style bg=colour237,fg=colour223 # bg=bg1, fg=fg1$/;"	k
style bg	tmux/tmux.conf	/^set-window-option -g window-status-activity-style bg=colour237,fg=colour248 # bg=bg1, fg=fg3$/;"	k
style bg	tmux/tmux.conf	/^set-window-option -g window-status-bell-style bg=colour167,fg=colour235 # bg=red, fg=bg$/;"	k
style bg	tmux/tmux.conf	/^set-window-option -g window-status-current-style bg=red,fg=colour237 # fg=bg1$/;"	k
style bg	tmux/tmux.conf	/^set-window-option -g window-status-style bg=colour214,fg=colour237 # bg=yellow, fg=bg1$/;"	k
style fg	tmux/tmux.conf	/^set-option -g pane-active-border-style fg=colour250 #fg2$/;"	k
style fg	tmux/tmux.conf	/^set-option -g pane-border-style fg=colour237 #bg1$/;"	k
sub	zsh/powerlevel10k/internal/wizard.zsh	/^  function sub() {$/;"	f
subdirs	zsh/powerlevel10k/gitstatus/src/index.h	/^  WithArena<std::vector<StringView>> subdirs;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:WithArena<std::vector<StringView>>
summary	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string summary;$/;"	m	struct:gitstatus::CommitMessage	typeref:typename:std::string
synthweave.nvim	nvim/lazy-lock.json	/^  "synthweave.nvim": { "branch": "master", "commit": "50cb17af14dbdf8a2af634c40b9b20298f67aba0" /;"	o
system_error	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "system_error": "cpp",$/;"	s	object:files.associations
t	tmux/tmux.conf	/^bind -r , select-window -t :-$/;"	k
t	tmux/tmux.conf	/^bind -r . select-window -t :+$/;"	k
t	zsh/alias.zsh	/^alias t="tmux -u -2"$/;"	a
t	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^    Time t;$/;"	m	struct:gitstatus::ThreadPool::Work	typeref:typename:Time
ta	zsh/alias.zsh	/^function ta()$/;"	f
tabnine-nvim	nvim/lazy-lock.json	/^  "tabnine-nvim": { "branch": "master", "commit": "d6e22ec567d26460ea3ae8df2640c2c06b312b10" },$/;"	o
tag_db_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  TagDb tag_db_;$/;"	m	class:gitstatus::Repo	typeref:typename:TagDb
telescope-file-browser.nvim	nvim/lazy-lock.json	/^  "telescope-file-browser.nvim": { "branch": "master", "commit": "a7ab9a957b17199183388c6f357d61/;"	o
telescope-fzf-native.nvim	nvim/lazy-lock.json	/^  "telescope-fzf-native.nvim": { "branch": "main", "commit": "cf48d4dfce44e0b9a2e19a008d6ec6ea6f/;"	o
telescope-project.nvim	nvim/lazy-lock.json	/^  "telescope-project.nvim": { "branch": "master", "commit": "1aaf16580a614601a7f7077d9639aeb457d/;"	o
telescope.nvim	nvim/lazy-lock.json	/^  "telescope.nvim": { "branch": "master", "commit": "bfcc7d5c6f12209139f175e6123a7b7de6d9c18a" }/;"	o
thread	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "thread": "cpp",$/;"	s	object:files.associations
threads_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::vector<std::thread> threads_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::vector<std::thread>
throw_	zsh/powerlevel10k/gitstatus/src/check.h	/^  bool throw_;$/;"	m	class:gitstatus::internal_check::Thrower	typeref:typename:bool
tip	zsh/powerlevel10k/gitstatus/src/arena.h	/^    uintptr_t tip;$/;"	m	struct:gitstatus::Arena::Block	typeref:typename:uintptr_t
tl	zsh/alias.zsh	/^alias tl="tmux list-session"$/;"	a
tm	zsh/alias.zsh	/^alias tm="tmux"$/;"	a
toggle-right-prompt	zsh/powerlevel10k/internal/p10k.zsh	/^  function toggle-right-prompt() { p10k display '*\/right'=hide,show; }$/;"	f
toggle_telescope	nvim/lua/configs/harpoon.lua	/^local function toggle_telescope(harpoon_files)$/;"	f
toggleterm.nvim	nvim/lazy-lock.json	/^  "toggleterm.nvim": { "branch": "main", "commit": "066cccf48a43553a80a210eb3be89a15d789d6e6" },$/;"	o
tokyonight.nvim	nvim/lazy-lock.json	/^  "tokyonight.nvim": { "branch": "main", "commit": "6adfcde66e8af2f22dd5d76060980abd8daa0df8" },$/;"	o
top_	zsh/powerlevel10k/gitstatus/src/arena.h	/^  Block* top_;$/;"	m	class:gitstatus::Arena	typeref:typename:Block *
tree-sitter-blade	nvim/lazy-lock.json	/^  "tree-sitter-blade": { "branch": "main", "commit": "dead019eeabe612da7fb325caf72fdc7c744d19a" /;"	o
trouble.nvim	nvim/lazy-lock.json	/^  "trouble.nvim": { "branch": "main", "commit": "bf99ea71a39e322336b7f8be965f86dbf5c65540" },$/;"	o
trust_filemode	zsh/powerlevel10k/gitstatus/src/index.h	/^  bool trust_filemode;$/;"	m	struct:gitstatus::RepoCaps	typeref:typename:bool
tuple	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "tuple": "cpp",$/;"	s	object:files.associations
type	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using type = C<T1, ArenaAllocator<typename C<T1, A>::value_type>>;$/;"	t	struct:gitstatus::LazyWithArena	typeref:typename:C<T1,ArenaAllocator<typename C<T1,A>::value_type>>
type	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using type = C<T1, T2, ArenaAllocator<typename C<T1, T2, A>::value_type>>;$/;"	t	struct:gitstatus::LazyWithArena	typeref:typename:C<T1,T2,ArenaAllocator<typename C<T1,T2,A>::value_type>>
type_traits	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "type_traits": "cpp",$/;"	s	object:files.associations
typeinfo	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "typeinfo": "cpp",$/;"	s	object:files.associations
uncomment	zsh/powerlevel10k/internal/wizard.zsh	/^  function uncomment() {$/;"	f
unmatched	zsh/powerlevel10k/gitstatus/src/index.h	/^  std::vector<const char*> unmatched;$/;"	m	struct:gitstatus::IndexDir	typeref:typename:std::vector<const char * >
unordered_map	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "unordered_map": "cpp",$/;"	s	object:files.associations
unordered_set	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "unordered_set": "cpp",$/;"	s	object:files.associations
unstaged_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> unstaged_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
unstaged_deleted_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> unstaged_deleted_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
untracked_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<size_t> untracked_{0};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<size_t>
untracked_cache	zsh/powerlevel10k/gitstatus/src/index.h	/^  Tribool untracked_cache;$/;"	m	struct:gitstatus::ScanOpts	typeref:typename:Tribool
untracked_cache_	zsh/powerlevel10k/gitstatus/src/repo.h	/^  std::atomic<Tribool> untracked_cache_{Tribool::kUnknown};$/;"	m	class:gitstatus::Repo	typeref:typename:std::atomic<Tribool>
url	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string url;$/;"	m	struct:gitstatus::PushRemote	typeref:typename:std::string
url	zsh/powerlevel10k/gitstatus/src/git.h	/^  std::string url;$/;"	m	struct:gitstatus::Remote	typeref:typename:std::string
usage	zsh/powerlevel10k/gitstatus/mbuild	/^function usage() {$/;"	f
usrbin/	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "usrbin\/": true,$/;"	b	object:files.exclude
usrbin/$(APPNAME)	zsh/powerlevel10k/gitstatus/Makefile	/^usrbin\/$(APPNAME): $(OBJS)$/;"	t
utility	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "utility": "cpp",$/;"	s	object:files.associations
v	zsh/alias.zsh	/^alias v="nvim"$/;"	a
v1	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## v1$/;"	s	chapter:Fast directory listing
v2	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## v2$/;"	s	chapter:Fast directory listing
v3	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## v3$/;"	s	chapter:Fast directory listing
v4	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## v4$/;"	s	chapter:Fast directory listing
v5	zsh/powerlevel10k/gitstatus/docs/listdir.md	/^## v5$/;"	s	chapter:Fast directory listing
value	zsh/powerlevel10k/gitstatus/src/print.h	/^  const T& value;$/;"	m	struct:gitstatus::Printable	typeref:typename:const T &
value_type	zsh/powerlevel10k/gitstatus/src/arena.h	/^  using value_type = T;$/;"	t	class:gitstatus::ArenaAllocator	typeref:typename:T
variant	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "variant": "cpp",$/;"	s	object:files.associations
vector	zsh/powerlevel10k/gitstatus/.vscode/settings.json	/^    "vector": "cpp",$/;"	s	object:files.associations
version	zsh/powerlevel10k/gitstatus/.vscode/c_cpp_properties.json	/^    "version": 4$/;"	n
vim	zsh/alias.zsh	/^alias vim="nvim"$/;"	a
vim-gutentags	nvim/lazy-lock.json	/^  "vim-gutentags": { "branch": "master", "commit": "aa47c5e29c37c52176c44e61c780032dfacef3dd" },$/;"	o
vim-moonfly-colors	nvim/lazy-lock.json	/^  "vim-moonfly-colors": { "branch": "master", "commit": "31f65a1bbddd7de9a639d8d0e32b8066c0de1da/;"	o
vim-sandwich	nvim/lazy-lock.json	/^  "vim-sandwich": { "branch": "master", "commit": "74cf93d58ccc567d8e2310a69860f1b93af19403" }$/;"	o
vsc	zsh/alias.zsh	/^alias vsc="code ."$/;"	a
wall_	zsh/powerlevel10k/gitstatus/src/timer.h	/^  double wall_;$/;"	m	class:gitstatus::Timer	typeref:typename:double
weird-things-happen-after-typing-source-zshrc	zsh/powerlevel10k/README.md	/^  #weird-things-happen-after-typing-source-zshrc).$/;"	h	subsection:Powerlevel10k""FAQ""How do I update Powerlevel10k?
weird-things-happen-after-typing-source-zshrc	zsh/powerlevel10k/README.md	/^  #weird-things-happen-after-typing-source-zshrc).$/;"	h	subsection:Powerlevel10k""Troubleshooting""Transient prompt stops working after some time
what	zsh/powerlevel10k/gitstatus/src/check.h	/^  const char* what() const noexcept override { return "Exception"; }$/;"	f	struct:gitstatus::Exception	typeref:typename:const char *
what-do-different-symbols-in-git-status-mean	zsh/powerlevel10k/README.md	/^  #what-do-different-symbols-in-git-status-mean)$/;"	h	subsection:Powerlevel10k""FAQ""How do I change the format of Git status?
what-do-different-symbols-in-git-status-mean	zsh/powerlevel10k/README.md	/^  #what-do-different-symbols-in-git-status-mean)$/;"	h	subsection:Powerlevel10k""Troubleshooting""Question mark in prompt
what-is-the-best-prompt-style-in-the-configuration-wizard	zsh/powerlevel10k/README.md	/^  #what-is-the-best-prompt-style-in-the-configuration-wizard)$/;"	h	subsection:Powerlevel10k""Features""Pure compatibility
work_	zsh/powerlevel10k/gitstatus/src/thread_pool.h	/^  std::priority_queue<Work> work_;$/;"	m	class:gitstatus::ThreadPool	typeref:typename:std::priority_queue<Work>
workspace.checkThirdParty	nvim/lua/.luarc.json	/^  "workspace.checkThirdParty": false,$/;"	b
workspace.library	nvim/lua/.luarc.json	/^  "workspace.library": [$/;"	a
x	zsh/alias.zsh	/^alias x="exit"$/;"	a
zwc	zsh/powerlevel10k/Makefile	/^zwc:$/;"	t
zwc	zsh/powerlevel10k/gitstatus/Makefile	/^zwc:$/;"	t
zz	zsh/alias.zsh	/^alias zz="z $OLDPWD"$/;"	a
~Arena	zsh/powerlevel10k/gitstatus/src/arena.cc	/^Arena::~Arena() {$/;"	f	class:gitstatus::Arena
~LogStream	zsh/powerlevel10k/gitstatus/src/logging.h	/^  ~LogStream() __attribute__((noreturn)) {$/;"	f	class:gitstatus::internal_logging::LogStream
~LogStream	zsh/powerlevel10k/gitstatus/src/logging.h	/^  ~LogStream() { this->Flush(); }$/;"	f	class:gitstatus::internal_logging::LogStream
~Repo	zsh/powerlevel10k/gitstatus/src/repo.cc	/^Repo::~Repo() {$/;"	f	class:gitstatus::Repo
~ResponseWriter	zsh/powerlevel10k/gitstatus/src/response.cc	/^ResponseWriter::~ResponseWriter() {$/;"	f	class:gitstatus::ResponseWriter
~ScopeGuard	zsh/powerlevel10k/gitstatus/src/scope_guard.h	/^  ~ScopeGuard() { std::move(f_)(); }$/;"	f	class:gitstatus::internal_scope_guard::ScopeGuard
~TagDb	zsh/powerlevel10k/gitstatus/src/tag_db.cc	/^TagDb::~TagDb() {$/;"	f	class:gitstatus::TagDb
~ThreadPool	zsh/powerlevel10k/gitstatus/src/thread_pool.cc	/^ThreadPool::~ThreadPool() {$/;"	f	class:gitstatus::ThreadPool
~Thrower	zsh/powerlevel10k/gitstatus/src/check.h	/^  ~Thrower() noexcept(false) {$/;"	f	class:gitstatus::internal_check::Thrower
